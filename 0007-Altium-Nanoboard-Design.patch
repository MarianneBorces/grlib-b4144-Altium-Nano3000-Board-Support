From db2ea5a650a736965eddb7e8850566081911a9f8 Mon Sep 17 00:00:00 2001
From: Martin Wilson <mrw@trimetix.co.uk>
Date: Thu, 21 Aug 2014 10:52:18 +0100
Subject: [PATCH 7/7] Altium Nanoboard Design

Signed-off-by: Martin Wilson <mrw@trimetix.co.uk>
---
 .../boards/altium-nano3000-xc3s1400an/Makefile.inc |   17 +
 .../boards/altium-nano3000-xc3s1400an/default.sdc  |   63 +
 .../boards/altium-nano3000-xc3s1400an/default.ucf  |  442 ++
 .../boards/altium-nano3000-xc3s1400an/default.ut   |   26 +
 .../boards/altium-nano3000-xc3s1400an/fpga.cmd     |   26 +
 .../boards/altium-nano3000-xc3s1400an/leon3mp.ucf  |  270 +
 .../boards/altium-nano3000-xc3s1400an/prom.cmd     |   26 +
 .../designs/leon3-altium-nano3000-xilinx/.config   |  284 +
 .../designs/leon3-altium-nano3000-xilinx/Makefile  |   32 +
 .../leon3-altium-nano3000-xilinx/README.txt        |  179 +
 .../designs/leon3-altium-nano3000-xilinx/config.h  |  266 +
 .../leon3-altium-nano3000-xilinx/config.help       |  987 ++++
 .../designs/leon3-altium-nano3000-xilinx/config.in |   65 +
 .../leon3-altium-nano3000-xilinx/config.vhd        |  161 +
 .../leon3-altium-nano3000-xilinx/config.vhd.h      |  150 +
 .../leon3-altium-nano3000-xilinx/config.vhd.in     |   18 +
 .../designs/leon3-altium-nano3000-xilinx/defconfig |  285 +
 .../leon3-altium-nano3000-xilinx/lconfig.tk        | 5991 ++++++++++++++++++++
 .../leon3-altium-nano3000-xilinx/leon3mp.ucf       |  134 +
 .../leon3-altium-nano3000-xilinx/leon3mp.vhd       |  486 ++
 .../designs/leon3-altium-nano3000-xilinx/linkprom  |  155 +
 .../designs/leon3-altium-nano3000-xilinx/prom.h    |    9 +
 .../designs/leon3-altium-nano3000-xilinx/systest.c |   11 +
 .../leon3-altium-nano3000-xilinx/testbench.vhd     |  397 ++
 .../leon3-altium-nano3000-xilinx/tkconfig.h        |  996 ++++
 .../designs/leon3-altium-nano3000-xilinx/wave.do   |   35 +
 26 files changed, 11511 insertions(+)
 create mode 100644 grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/Makefile.inc
 create mode 100644 grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.sdc
 create mode 100644 grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.ucf
 create mode 100644 grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.ut
 create mode 100644 grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/fpga.cmd
 create mode 100644 grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/leon3mp.ucf
 create mode 100644 grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/prom.cmd
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/.config
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/Makefile
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/README.txt
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.h
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.help
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.in
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd.h
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd.in
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/defconfig
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/lconfig.tk
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/leon3mp.ucf
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/leon3mp.vhd
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/linkprom
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/prom.h
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/systest.c
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/testbench.vhd
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/tkconfig.h
 create mode 100644 grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/wave.do

diff --git a/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/Makefile.inc b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/Makefile.inc
new file mode 100644
index 0000000..121bfdb
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/Makefile.inc
@@ -0,0 +1,17 @@
+TECHNOLOGY="Spartan3A and Spartan3AN"
+NETLISTTECH=Spartan3
+PART=xc3s1400an
+PACKAGE=fgg676
+SPEED=-4
+SYNFREQ=75
+PROMGENPAR=-x xcf04s xcf01s -u 0 $(TOP).bit -p mcs -w -o avnet-xc3v1500
+MANUFACTURER=Xilinx
+MGCPART=3s1400an(PACKAGE)
+MGCTECHNOLOGY=$(TECHNOLOGY)
+MGCPACKAGE=$(PACKAGE)
+
+# Set PlanAhead Synthesis Flow and Strategy used for build
+PLANAHEAD_SYNTH_FLOW="XST 13"
+PLANAHEAD_SYNTH_STRATEGY="TimingWithIOBPacking"
+# Set PlanAhead Implementation strategy
+PLANAHEAD_IMPL_STRATEGY="MapLogicOptParHighExtra"
diff --git a/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.sdc b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.sdc
new file mode 100644
index 0000000..28e850c
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.sdc
@@ -0,0 +1,63 @@
+# Synplicity, Inc. constraint file
+# /home/jiri/ibm/vhdl/grlib/boards/gr-pci-xc2v/default.sdc
+# Written on Fri Jul 30 18:56:40 2004
+# by Synplify Pro, 7.6        Scope Editor
+
+#
+# Clocks
+#
+define_clock -name   {clk_66mhz} -freq 75.000 -clockgroup default_clkgroup
+define_clock -name   {pci_clk}   -freq 40.000 -clockgroup pci_clkgroup
+define_clock -name   {video_clk} -freq 25.000 -clockgroup vid_clkgroup -route 10
+define_clock -name   {phy_rxck}  -freq 25.000 -clockgroup ethrx_clkgroup -route 5
+define_clock -name   {phy_txck}  -freq 25.000 -clockgroup ethtx_clkgroup -route 5
+
+#
+# Clock to Clock
+#
+
+#
+# Inputs/Outputs
+#
+#define_output_delay      -default  1.00 -improve 0.00 -route 0.00 -ref {clk_66mhz:r}
+#define_input_delay       -default  1.00 -improve 0.00 -route 0.00 -ref {clk_66mhz:r}
+#define_input_delay       -default  5.00 -improve 0.00 -route 0.00 -ref {clk_66mhz:r}
+#define_input_delay       -default  5.00 -improve 0.00 -route 0.00 -ref {phy_rxck:r}
+define_input_delay       {switches[4]}  0.00 -improve 0.00 -route 0.00 -ref {clk_66mhz:r}
+define_input_delay       {phy_reset_l}  0.00 -improve 0.00 -route 0.00 -ref {clk_66mhz:r}
+define_input_delay       -default  18.00 -improve 0.00 -route 0.00 -ref {pci_clk:r}
+define_output_delay      -default  14.00 -improve 0.00 -route 0.00 -ref {pci_clk:r}
+define_input_delay       {pci_rst}  0.00 -improve 0.00 -route 0.00 -ref {pci_clk:r}
+
+define_clock_delay -rise pci_clk -rise clk_66mhz -false
+define_clock_delay -rise pci_clk -rise phy_rxck -false
+define_clock_delay -rise pci_clk -rise phy_txck -false
+
+#
+# Registers
+#
+
+#
+# Multicycle Path
+#
+
+#
+# False Path
+#
+
+#
+# Delay Path
+#
+
+#
+# Attributes
+#
+define_global_attribute          syn_useioff {1}
+
+#
+# Compile Points
+#
+
+#
+# Other Constraints
+#
diff --git a/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.ucf b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.ucf
new file mode 100644
index 0000000..ea28488
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.ucf
@@ -0,0 +1,442 @@
+#Spartan-3 Evaluation Board Constraints File
+
+#Clocks
+NET "clk_66mhz"  LOC = "A11";  #OSC1 (66MHZ)
+NET "clk_socket" LOC = "AB12"; #OSC2 (SOCKET)
+
+#LEDs
+NET "leds(0)" LOC = "U12";
+NET "leds(1)" LOC = "V12";
+NET "leds(2)" LOC = "Y12";
+NET "leds(3)" LOC = "Y13";
+NET "leds(4)" LOC = "AB13";
+NET "leds(5)" LOC = "AA13";
+NET "leds(6)" LOC = "V13";
+NET "leds(7)" LOC = "AB14";
+
+#Switches (DIP switches (4) and Pushbuttons (2))
+NET "switches(0)" LOC = "W4"; # SWITCH(0) (SW2:1)
+NET "switches(1)" LOC = "W3"; # SWITCH(1) (SW2:2)
+NET "switches(2)" LOC = "Y3"; # SWITCH(2) (SW2:3)
+NET "switches(3)" LOC = "Y2"; # SWITCH(3) (SW2:4)
+NET "switches(4)" LOC = "Y1"; # SWITCH_PB1 (SW3)
+NET "switches(5)" LOC = "W2"; # SWITCH_PB2 (SW4)
+
+# PS2 Ports (Mouse and Keyboard)
+NET "MSCLK"	 LOC = "W14"; # JS2
+NET "MSDATA" LOC = "W13";
+NET "MSCLK"	 PULLUP;
+NET "MSDATA" PULLUP;
+
+NET "KBCLK"	 LOC = "U17"; # JS1
+NET "KBDATA" LOC = "U16";
+NET "KBCLK"	 PULLUP;
+NET "KBDATA" PULLUP;
+
+#SRAM
+NET "sram_a(0)" LOC = "E22"; #ADDR0
+NET "sram_a(1)" LOC = "E21";
+NET "sram_a(2)" LOC = "D21";
+NET "sram_a(3)" LOC = "E20";
+NET "sram_a(4)" LOC = "D22";
+NET "sram_a(5)" LOC = "D20";
+NET "sram_a(6)" LOC = "C22";
+NET "sram_a(7)" LOC = "D19";
+NET "sram_a(8)" LOC = "C20";
+NET "sram_a(9)" LOC = "C21";
+NET "sram_a(10)" LOC = "F18";
+NET "sram_a(11)" LOC = "G18";
+NET "sram_a(12)" LOC = "G19";
+NET "sram_a(13)" LOC = "E18";
+NET "sram_a(14)" LOC = "F19";
+NET "sram_a(15)" LOC = "F20";
+NET "sram_a(16)" LOC = "E19";
+NET "sram_a(17)" LOC = "F21";  #ADDR17
+
+NET "sram_ben_l(0)" LOC = "K21"; #BE0
+NET "sram_ben_l(1)" LOC = "K22";
+NET "sram_ben_l(2)" LOC = "G22";
+NET "sram_ben_l(3)" LOC = "K20"; #BE3
+ 
+NET "sram_cs_l" LOC = "G21"; 
+NET "sram_oe_l" LOC = "G17";
+NET "sram_we_l" LOC = "K19";
+
+NET "sram_dq(0)" LOC = "U19"; #DATA0 
+NET "sram_dq(1)" LOC = "T21";
+NET "sram_dq(2)" LOC = "U20";
+NET "sram_dq(3)" LOC = "U21";
+NET "sram_dq(4)" LOC = "V21";
+NET "sram_dq(5)" LOC = "V22";
+NET "sram_dq(6)" LOC = "W22";
+NET "sram_dq(7)" LOC = "V20";
+NET "sram_dq(8)" LOC = "Y19";
+NET "sram_dq(9)" LOC = "W19";
+NET "sram_dq(10)" LOC = "V19";
+NET "sram_dq(11)" LOC = "Y20";
+NET "sram_dq(12)" LOC = "Y21";
+NET "sram_dq(13)" LOC = "Y22";
+NET "sram_dq(14)" LOC = "W20";
+NET "sram_dq(15)" LOC = "W21";
+NET "sram_dq(16)" LOC = "M17";
+NET "sram_dq(17)" LOC = "L17";
+NET "sram_dq(18)" LOC = "M19";
+NET "sram_dq(19)" LOC = "M18";
+NET "sram_dq(20)" LOC = "M20";
+NET "sram_dq(21)" LOC = "N19";
+NET "sram_dq(22)" LOC = "M21";
+NET "sram_dq(23)" LOC = "N20";
+NET "sram_dq(24)" LOC = "T22";
+NET "sram_dq(25)" LOC = "U18";
+NET "sram_dq(26)" LOC = "T18";
+NET "sram_dq(27)" LOC = "R18";
+NET "sram_dq(28)" LOC = "T17";
+NET "sram_dq(29)" LOC = "N21";
+NET "sram_dq(30)" LOC = "N22";
+NET "sram_dq(31)" LOC = "M22"; #DATA31
+
+# UART
+NET "tx" LOC = "C3";
+NET "rx" LOC = "C4";
+
+# Ethernet PHY
+NET "phy_txck" 		TNM_NET = "phy_txck";
+TIMESPEC "TS_phy_txck" = PERIOD "phy_txck" 25 MHz HIGH 50 %;
+
+NET "phy_rxck" 		TNM_NET = "phy_rxck";
+TIMESPEC "TS_phy_rxck" = PERIOD "phy_rxck" 25 MHz HIGH 50 %;
+
+NET "phy_txck"    LOC = "C12"; 
+NET "phy_rxck"    LOC = "B12";
+NET "phy_crs"     LOC = "E12";
+NET "phy_rxdv"    LOC = "B14"; 
+NET "phy_rxd(0)"  LOC = "B15";
+NET "phy_rxd(1)"  LOC = "A15";
+NET "phy_rxd(2)"  LOC = "D15";
+NET "phy_rxd(3)"  LOC = "E15";
+NET "phy_col"     LOC = "D13";
+NET "phy_rxer"    LOC = "A14"; 
+NET "phy_txen"    LOC = "E14"; 
+NET "phy_txd(0)"  LOC = "B13";
+NET "phy_txd(1)"  LOC = "A13";
+NET "phy_txd(2)"  LOC = "C13";
+NET "phy_txd(3)"  LOC = "D12";
+NET "phy_reset_l" LOC = "E4";
+NET "phy_mdc"     LOC = "C17";
+NET "phy_mdio"    LOC = "B17";
+NET "phy_txer"    LOC = "D14";
+
+# Video DAC
+NET "video_clk"     LOC = "B11"; 
+NET "horiz_sync"    LOC = "E11";  
+NET "vert_sync"     LOC = "D11";  
+NET "comp_sync"     LOC = "A3";
+NET "blank"         LOC = "A4";
+NET "video_out(0)"  LOC = "E9";	# Blue(0)
+NET "video_out(1)"  LOC = "F9";	# Blue(1)
+NET "video_out(2)"  LOC = "D7";	# Blue(2)
+NET "video_out(3)"  LOC = "C7";	# Blue(3)
+NET "video_out(4)"  LOC = "E7";	# Blue(4)
+NET "video_out(5)"  LOC = "F7";	# Blue(5)
+NET "video_out(6)"  LOC = "E6";	# Blue(6)
+NET "video_out(7)"  LOC = "F6";	# Blue(7)
+NET "video_out(8)"  LOC = "F10";	# Greeen(0)
+NET "video_out(9)"  LOC = "D10";
+NET "video_out(10)" LOC = "A10";
+NET "video_out(11)" LOC = "D9";
+NET "video_out(12)" LOC = "A9";
+NET "video_out(13)" LOC = "B9";
+NET "video_out(14)" LOC = "A8";
+NET "video_out(15)" LOC = "B8";	# Green(7)
+NET "video_out(16)" LOC = "D6";	# Red(0)
+NET "video_out(17)" LOC = "C6";
+NET "video_out(18)" LOC = "B6";
+NET "video_out(19)" LOC = "D5";
+NET "video_out(20)" LOC = "A5";
+NET "video_out(21)" LOC = "B5";
+NET "video_out(22)" LOC = "C5";
+NET "video_out(23)" LOC = "B4";	# Red(7)
+
+# Comparator
+NET "ADC_CMP_OUT" LOC = "V18";
+NET "ADC_ANA_REF" LOC = "U13";
+NET "ADC_ANA_OUT" LOC = "Y16";
+
+# EEPROM
+NET "sda" LOC = "AA14"; # FPGA_D0
+NET "scl" LOC = "W12";  # FPGA_INIT#
+
+# Dual 7 Segment LED 
+NET "DISP_SEG1(7)" LOC = "AB15";	#0
+NET "DISP_SEG1(6)" LOC = "AB18";	#1
+NET "DISP_SEG1(5)" LOC = "V17";	#2
+NET "DISP_SEG1(4)" LOC = "U14";	#3
+NET "DISP_SEG1(3)" LOC = "V14";	#4
+NET "DISP_SEG1(2)" LOC = "AA15";	#5
+NET "DISP_SEG1(1)" LOC = "Y18";	#6
+NET "DISP_SEG1(0)" LOC = "AA18";	#7
+
+NET "DISP_SEG2(7)" LOC = "W17";	#0
+NET "DISP_SEG2(6)" LOC = "Y17";	#1
+NET "DISP_SEG2(5)" LOC = "W18";	#2
+NET "DISP_SEG2(4)" LOC = "V16";	#3
+NET "DISP_SEG2(3)" LOC = "W16";	#4
+NET "DISP_SEG2(2)" LOC = "AA17";	#5
+NET "DISP_SEG2(1)" LOC = "AA20";	#6
+NET "DISP_SEG2(0)" LOC = "AB20";	#7
+
+# PCI 32-bit
+NET  "PCLK"               LOC = "AA12";
+NET  "PCI_CORE/RST_I"     LOC = "E4"  ;
+#
+NET  "PCI_CORE/AD_IO(31)" LOC = "D2"  ;
+NET  "PCI_CORE/AD_IO(30)" LOC = "D3"  ;
+NET  "PCI_CORE/AD_IO(29)" LOC = "E3"  ;
+NET  "PCI_CORE/AD_IO(28)" LOC = "F4"  ;
+NET  "PCI_CORE/AD_IO(27)" LOC = "E2"  ;
+NET  "PCI_CORE/AD_IO(26)" LOC = "E1"  ;
+NET  "PCI_CORE/AD_IO(25)" LOC = "F5"  ;
+NET  "PCI_CORE/AD_IO(24)" LOC = "G6"  ;
+NET  "PCI_CORE/AD_IO(23)" LOC = "F3"  ;
+NET  "PCI_CORE/AD_IO(22)" LOC = "F2"  ;
+NET  "PCI_CORE/AD_IO(21)" LOC = "G5"  ;
+NET  "PCI_CORE/AD_IO(20)" LOC = "H5"  ;
+NET  "PCI_CORE/AD_IO(19)" LOC = "G2"  ;
+NET  "PCI_CORE/AD_IO(18)" LOC = "G1"  ;
+NET  "PCI_CORE/AD_IO(17)" LOC = "K4"  ;
+NET  "PCI_CORE/AD_IO(16)" LOC = "K3"  ;
+NET  "PCI_CORE/CBE_IO(3)" LOC = "K2"  ;
+NET  "PCI_CORE/CBE_IO(2)" LOC = "K1"  ;
+#
+NET  "PCI_CORE/REQ_O"     LOC = "L6"  ;
+NET  "PCI_CORE/GNT_I"     LOC = "L5"  ;
+NET  "PCI_CORE/PAR_IO"    LOC = "L4"  ;
+NET  "PCI_CORE/IDSEL_I"   LOC = "L3"  ;
+NET  "PCI_CORE/FRAME_IO"  LOC = "L2"  ;
+NET  "PCI_CORE/IRDY_IO"   LOC = "L1"  ;
+NET  "PCI_CORE/TRDY_IO"   LOC = "M1"  ;
+NET  "PCI_CORE/DEVSEL_IO" LOC = "M2"  ;
+NET  "PCI_CORE/STOP_IO"   LOC = "M3"  ;
+NET  "PCI_CORE/PERR_IO"   LOC = "M4"  ;
+NET  "PCI_CORE/SERR_IO"   LOC = "M5"  ;
+NET  "PCI_CORE/INTA_O"    LOC = "M6"  ;
+#
+NET  "PCI_CORE/CBE_IO(1)" LOC = "N1"  ;
+NET  "PCI_CORE/CBE_IO(0)" LOC = "N2"  ;
+NET  "PCI_CORE/AD_IO(15)" LOC = "N3"  ;
+NET  "PCI_CORE/AD_IO(14)" LOC = "N4"  ;
+NET  "PCI_CORE/AD_IO(13)" LOC = "T1"  ;
+NET  "PCI_CORE/AD_IO(12)" LOC = "T2"  ;
+NET  "PCI_CORE/AD_IO(11)" LOC = "U2"  ;
+NET  "PCI_CORE/AD_IO(10)" LOC = "U3"  ;
+NET  "PCI_CORE/AD_IO(9)"  LOC = "T4"  ;
+NET  "PCI_CORE/AD_IO(8)"  LOC = "U4"  ;
+NET  "PCI_CORE/AD_IO(7)"  LOC = "T5"  ;
+NET  "PCI_CORE/AD_IO(6)"  LOC = "T6"  ;
+NET  "PCI_CORE/AD_IO(5)"  LOC = "V1"  ;
+NET  "PCI_CORE/AD_IO(4)"  LOC = "V2"  ;
+NET  "PCI_CORE/AD_IO(3)"  LOC = "V3"  ;
+NET  "PCI_CORE/AD_IO(2)"  LOC = "V4"  ;
+NET  "PCI_CORE/AD_IO(1)"  LOC = "U5"  ;
+NET  "PCI_CORE/AD_IO(0)"  LOC = "V5"  ;
+
+
+# Note: Almost all I/O pins are re-used for the AvBus Connectors.
+# Care must be taken to disable devices when using AvBus I/O
+# to avoid contention.
+
+# AvBus - P5 Pins 
+NET    "p5io_group1(0)"          LOC = "E22";  #NET  	 "ADDR0"        
+NET	 "p5io_group1(1)"          LOC = "E20";  #NET	 "ADDR3"       
+NET	 "p5io_group1(2)"          LOC = "D22";  #NET	 "ADDR4"       
+NET	 "p5io_group1(3)"          LOC = "D19";  #NET	 "ADDR7"       
+NET	 "p5io_group1(4)"          LOC = "C20";  #NET	 "ADDR8"       
+NET	 "p5io_group1(5)"          LOC = "G18";  #NET	 "ADDR11"      
+NET	 "p5io_group1(6)"          LOC = "G19";  #NET	 "ADDR12"      
+NET	 "p5io_group1(7)"          LOC = "F20";  #NET	 "ADDR15"      
+NET	 "p5io_group1(8)"          LOC = "E19";  #NET	 "ADDR16"      
+NET	 "p5io_group1(9)"          LOC = "F16";  #NET	 "GPIO_B1_3"      
+NET	 "p5io_group1(10)"         LOC = "E16";  #NET	 "GPIO_B1_4"      
+NET	 "p5io_group1(11)"         LOC = "A12";  #NET	 "GPIO_B1_5"      
+NET	 "p5io_group1(12)"         LOC = "F12";  #NET	 "GPIO_B1_6"      
+NET	 "p5io_group1(13)"         LOC = "F11";  #NET	 "GPIO_B0_4"      
+NET	 "p5io_group1(14)"         LOC = "C11";  #NET	 "GPIO_B0_5"      
+NET	 "p5io_group1(15)"         LOC = "B10";  #NET	 "GPIO_B0_6"      
+NET	 "p5io_group1(16)"         LOC = "U19";  #NET	 "DATA0"       
+NET	 "p5io_group1(17)"         LOC = "U21";  #NET	 "DATA3"       
+NET	 "p5io_group1(18)"         LOC = "V21";  #NET	 "DATA4"       
+NET	 "p5io_group1(19)"         LOC = "V20";  #NET	 "DATA7"       
+NET	 "p5io_group1(20)"         LOC = "Y19";  #NET	 "DATA8"       
+NET	 "p5io_group1(21)"         LOC = "Y20";  #NET	 "DATA11"      
+NET	 "p5io_group1(22)"         LOC = "Y21";  #NET	 "DATA12"      
+NET	 "p5io_group1(23)"         LOC = "W21";  #NET	 "DATA15"      
+NET	 "p5io_group1(24)"         LOC = "M17";  #NET	 "DATA16"      
+NET	 "p5io_group1(25)"         LOC = "M18";  #NET	 "DATA19"      
+NET	 "p5io_group1(26)"         LOC = "M20";  #NET	 "DATA20"      
+NET	 "p5io_group1(27)"         LOC = "N20";  #NET	 "DATA23"      
+NET	 "p5io_group1(28)"         LOC = "T22";  #NET	 "DATA24"      
+NET	 "p5io_group1(29)"         LOC = "R18";  #NET	 "DATA27"      
+NET	 "p5io_group1(30)"         LOC = "T17";  #NET	 "DATA28"      
+NET	 "p5io_group1(31)"         LOC = "M22";  #NET	 "DATA31"      
+
+NET	 "p5io_group2(0)"          LOC = "E21";  #NET	 "ADDR1"       
+NET	 "p5io_group2(1)"          LOC = "D21";  #NET	 "ADDR2"       
+NET	 "p5io_group2(2)"          LOC = "D20";  #NET	 "ADDR5"       
+NET	 "p5io_group2(3)"          LOC = "C22";  #NET	 "ADDR6"       
+NET	 "p5io_group2(4)"          LOC = "C21";  #NET	 "ADDR9"       
+NET	 "p5io_group2(5)"          LOC = "F18";  #NET	 "ADDR10"      
+NET	 "p5io_group2(6)"          LOC = "E18";  #NET	 "ADDR13"      
+NET	 "p5io_group2(7)"          LOC = "F19";  #NET	 "ADDR14"      
+NET	 "p5io_group2(8)"          LOC = "F21";  #NET	 "ADDR17"      
+NET	 "p5io_group2(9)"          LOC = "F17";  #NET	 "GPIO_B1_0"       
+NET	 "p5io_group2(10)"         LOC = "E13";  #NET	 "GPIO_B1_1"       
+NET	 "p5io_group2(11)"         LOC = "F13";  #NET	 "GPIO_B1_2"       
+NET	 "p5io_group2(12)"         LOC = "D11";  #NET	 "GPIO_B0_0"/"vert_sync"       
+NET	 "p5io_group2(13)"         LOC = "E11";  #NET	 "GPIO_B0_1"/"horiz_sync"       
+NET	 "p5io_group2(14)"         LOC = "E10";  #NET	 "GPIO_B0_2"/"AV_GPIO"       
+NET	 "p5io_group2(15)"         LOC = "C10";  #NET	 "GPIO_B0_3"       
+NET	 "p5io_group2(16)"         LOC = "T21";  #NET	 "DATA1"       
+NET	 "p5io_group2(17)"         LOC = "U20";  #NET	 "DATA2"       
+NET	 "p5io_group2(18)"         LOC = "V22";  #NET	 "DATA5"       
+NET	 "p5io_group2(19)"         LOC = "W22";  #NET	 "DATA6"       
+NET	 "p5io_group2(20)"         LOC = "W19";  #NET	 "DATA9"       
+NET	 "p5io_group2(21)"         LOC = "V19";  #NET	 "DATA10"      
+NET	 "p5io_group2(22)"         LOC = "Y22";  #NET	 "DATA13"      
+NET	 "p5io_group2(23)"         LOC = "W20";  #NET	 "DATA14"      
+NET	 "p5io_group2(24)"         LOC = "L17";  #NET	 "DATA17"      
+NET	 "p5io_group2(25)"         LOC = "M19";  #NET	 "DATA18"      
+NET	 "p5io_group2(26)"         LOC = "N19";  #NET	 "DATA21"      
+NET	 "p5io_group2(27)"         LOC = "M21";  #NET	 "DATA22"      
+NET	 "p5io_group2(28)"         LOC = "U18";  #NET	 "DATA25"      
+NET	 "p5io_group2(29)"         LOC = "T18";  #NET	 "DATA26"      
+NET	 "p5io_group2(30)"         LOC = "N21";  #NET	 "DATA29"      
+NET	 "p5io_group2(31)"         LOC = "N22";  #NET	 "DATA30"      
+
+NET	 "p5io_group3(0)"          LOC = "L18";  #NET	 "GPIO_B2_0"      
+NET	 "p5io_group3(1)"          LOC = "K19";  #NET	 "R_W#"      
+NET	 "p5io_group3(2)"          LOC = "L19";  #NET	 "GPIO_B2_1"     
+NET	 "p5io_group3(3)"          LOC = "L20";  #NET	 "GPIO_B2_2"      
+NET	 "p5io_group3(4)"          LOC = "L21";  #NET	 "GPIO_B2_3"       
+NET	 "p5io_group3(5)"          LOC = "K21";  #NET	 "BE#_0"      
+NET	 "p5io_group3(6)"          LOC = "K22";  #NET	 "BE#_1"      
+NET	 "p5io_group3(7)"          LOC = "L22";  #NET	 "GPIO_B2_4"      
+NET	 "p5io_group3(8)"          LOC = "A18";  #NET	 "GPIO_B1_13"      
+NET	 "p5io_group3(9)"          LOC = "B18";  #NET	 "GPIO_B1_14"       
+NET	 "p5io_group3(10)"         LOC = "D17";  #NET	 "GPIO_B1_15"   
+NET	 "p5io_group3(11)"         LOC = "A11";  #NET	 "CLK_IN"      
+
+NET	 "p5io_group4(0)"          LOC = "G21";  #NET	 "SRAM_CS#"        
+NET	 "p5io_group4(1)"          LOC = "G17";  #NET	 "OE#"           
+NET	 "p5io_group4(2)"          LOC = "B20";  #NET	 "GPIO_B1_7"        
+NET	 "p5io_group4(3)"          LOC = "C19";  #NET	 "GPIO_B1_8"        
+NET	 "p5io_group4(4)"          LOC = "B19";  #NET	 "GPIO_B1_9"        
+NET	 "p5io_group4(5)"          LOC = "A19";  #NET	 "GPIO_B1_10"           
+NET	 "p5io_group4(6)"          LOC = "G22";  #NET	 "BE#_2"           
+NET	 "p5io_group4(7)"          LOC = "K20";  #NET	 "BE#_3"        
+NET	 "p5io_group4(8)"          LOC = "D18";  #NET	 "GPIO_B1_11"       
+NET	 "p5io_group4(9)"          LOC = "C18";  #NET	 "GPIO_B1_12"       
+NET	 "p5io_group4(10)"         LOC = "F17";  #NET	 "CLK_OUT"       
+NET	 "p5io_group4(11)"         LOC = "AB12"; #NET	 "CLK_FB"           
+
+# Note: Almost all I/O pins are re-used for the AvBus Connectors (the pins.
+# Care must be taken to disable devices when using AvBus I/O
+# to avoid contention.
+
+# AvBus - P4 Pins 
+NET	 "p4io_group1(0)"        LOC = "F10";  #NET	 "DVD_G0"      
+NET	 "p4io_group1(1)"        LOC = "D10";  #NET	 "DVD_G1"      
+NET	 "p4io_group1(2)"        LOC = "A10";  #NET	 "DVD_G2"      
+NET	 "p4io_group1(3)"        LOC = "D9";   #NET	 "DVD_G3"      
+NET	 "p4io_group1(4)"        LOC = "A9";   #NET	 "DVD_G4"       
+NET	 "p4io_group1(5)"        LOC = "B9";   #NET	 "DVD_G5"       
+NET	 "p4io_group1(6)"        LOC = "A8";   #NET	 "DVD_G6"       
+NET	 "p4io_group1(7)"        LOC = "B8";   #NET	 "DVD_G7"       
+NET	 "p4io_group1(8)"        LOC = "D6";   #NET	 "DVD_R0"      
+NET	 "p4io_group1(9)"        LOC = "C6";   #NET	 "DVD_R1"      
+NET	 "p4io_group1(10)"       LOC = "B6";   #NET	 "DVD_R2"      
+NET	 "p4io_group1(11)"       LOC = "D5";   #NET	 "DVD_R3"      
+NET	 "p4io_group1(12)"       LOC = "A5";   #NET	 "DVD_R4"      
+NET	 "p4io_group1(13)"       LOC = "B5";   #NET	 "DVD_R5"     
+NET	 "p4io_group1(14)"       LOC = "C5";   #NET	 "DVD_R6"     
+NET	 "p4io_group1(15)"       LOC = "B4";   #NET	 "DVD_R7"     
+NET	 "p4io_group1(16)"       LOC = "U6";   #NET	 "GPIO_B5_0"     
+NET	 "p4io_group1(17)"       LOC = "Y6";   #NET	 "GPIO_B5_14"      
+NET	 "p4io_group1(18)"       LOC = "AA6";  #NET	 "GPIO_B5_3"    
+NET	 "p4io_group1(19)"       LOC = "U7";   #NET	 "GPIO_B5_4"    
+NET	 "p4io_group1(20)"       LOC = "V7";   #NET	 "GPIO_B5_5"      
+NET	 "p4io_group1(21)"       LOC = "W8";   #NET	 "GPIO_B5_13"      
+NET	 "p4io_group1(22)"       LOC = "AA8";  #NET	 "GPIO_B5_6"      
+NET	 "p4io_group1(23)"       LOC = "AB8";  #NET	 "GPIO_B5_17"      
+NET	 "p4io_group1(24)"       LOC = "V8";   #NET	 "GPIO_B5_18"     
+NET	 "p4io_group1(25)"       LOC = "AA9";  #NET	 "GPIO_B5_19"     
+NET	 "p4io_group1(26)"       LOC = "AB9";  #NET	 "GPIO_B5_20"     
+NET	 "p4io_group1(27)"       LOC = "W9";   #NET	 "GPIO_B5_21"     
+NET	 "p4io_group1(28)"       LOC = "V9";   #NET	 "GPIO_B5_22"     
+NET	 "p4io_group1(29)"       LOC = "AB11"; #NET	 "GPIO_B5_23"     
+NET	 "p4io_group1(30)"       LOC = "AB10"; #NET	 "GPIO_B5_24"     
+NET	 "p4io_group1(31)"       LOC = "AA11"; #NET	 "GPIO_B5_25"     
+
+NET	 "p4io_group2(0)"        LOC = "E9";   #NET	 "DVD_B0"      
+NET	 "p4io_group2(1)"        LOC = "F9";   #NET	 "DVD_B1"      
+NET	 "p4io_group2(2)"        LOC = "D7";   #NET	 "DVD_B2"      
+NET	 "p4io_group2(3)"        LOC = "C7";   #NET	 "DVD_B3"      
+NET	 "p4io_group2(4)"        LOC = "E7";   #NET	 "DVD_B4"      
+NET	 "p4io_group2(5)"        LOC = "F7";   #NET	 "DVD_B5"      
+NET	 "p4io_group2(6)"        LOC = "E6";   #NET	 "DVD_B6"      
+NET	 "p4io_group2(7)"        LOC = "F6";   #NET	 "DVD_B7"      
+NET	 "p4io_group2(8)"        LOC = "A4";   #NET	 "DVD_BLANK"      
+NET	 "p4io_group2(9)"        LOC = "A3";   #NET	 "DVD_CSYNC"      
+NET	 "p4io_group2(10)"       LOC = "AA18"; #NET	 "SEG1_A"      
+NET	 "p4io_group2(11)"       LOC = "Y18";  #NET	 "SEG1_B"      
+NET	 "p4io_group2(12)"       LOC = "AA15"; #NET	 "SEG1_C"     
+NET	 "p4io_group2(13)"       LOC = "V14";  #NET	 "SEG1_D"     
+NET	 "p4io_group2(14)"       LOC = "U14";  #NET	 "SEG1_E"    
+NET	 "p4io_group2(15)"       LOC = "V17";  #NET	 "SEG1_F"    
+NET	 "p4io_group2(16)"       LOC = "AB18"; #NET	 "SEG1_G"    
+NET	 "p4io_group2(17)"       LOC = "AB15"; #NET	 "SEG1_Dp"    
+NET	 "p4io_group2(18)"       LOC = "AB20"; #NET	 "SEG2_A"      
+NET	 "p4io_group2(19)"       LOC = "AA20"; #NET	 "SEG2_B"      
+NET	 "p4io_group2(20)"       LOC = "AA17"; #NET	 "SEG2_C"      
+NET	 "p4io_group2(21)"       LOC = "W16";  #NET	 "SEG2_D"      
+NET	 "p4io_group2(22)"       LOC = "V16";  #NET	 "SEG2_E"      
+NET	 "p4io_group2(23)"       LOC = "W18";  #NET	 "SEG2_F"      
+NET	 "p4io_group2(24)"       LOC = "Y17";  #NET	 "SEG2_G"      
+NET	 "p4io_group2(25)"       LOC = "W17";  #NET	 "SEG2_Dp"     
+NET	 "p4io_group2(26)"       LOC = "U12";  #NET	 "LED0"     
+NET	 "p4io_group2(27)"       LOC = "V12";  #NET	 "LED1"     
+NET	 "p4io_group2(28)"       LOC = "Y12";  #NET	 "LED2"     
+NET	 "p4io_group2(29)"       LOC = "Y13";  #NET	 "LED3"     
+NET	 "p4io_group2(30)"       LOC = "AB13"; #NET	 "LED4"     
+NET	 "p4io_group2(31)"       LOC = "AA13"; #NET	 "LED5"     
+
+NET	 "p4io_group3(0)"        LOC = "AA10"; #NET	 "GPIO_B5_26"    
+NET	 "p4io_group3(1)"        LOC = "Y11";  #NET	 "GPIO_B5_27"     
+NET	 "p4io_group3(2)"        LOC = "Y10";  #NET	 "GPIO_B5_28"  
+NET	 "p4io_group3(3)"        LOC = "W11";  #NET	 "GPIO_B5_29"    
+NET	 "p4io_group3(4)"        LOC = "W10";  #NET	 "GPIO_B5_30"    
+NET	 "p4io_group3(5)"        LOC = "V11";  #NET	 "GPIO_B5_31"    
+NET	 "p4io_group3(6)"        LOC = "V10";  #NET	 "GPIO_B5_32"    
+NET	 "p4io_group3(7)"        LOC = "U11";  #NET	 "GPIO_B5_33"    
+NET	 "p4io_group3(8)"        LOC = "U10";  #NET	 "GPIO_B5_34"      
+NET	 "p4io_group3(9)"        LOC = "W13";  #NET	 "MSDATA"      
+NET	 "p4io_group3(10)"       LOC = "W14";  #NET	 "MSCLK"     
+NET	 "p4io_group3(11)"       LOC = "E10";  #NET	 "AV_GPIO"     
+#NET	 "p4io_group3(12)"       LOC = "";  #NET	 N/C     
+#NET	 "p4io_group3(13)"       LOC = "";  #NET	 N/C     
+#NET	 "p4io_group3(14)"       LOC = "";  #NET	 N/C     
+
+NET	 "p4io_group4(0)"        LOC = "V13";  #NET	 "LED6"     
+NET	 "p4io_group4(1)"        LOC = "AB14"; #NET	 "LED7"     
+NET	 "p4io_group4(2)"        LOC = "W1";   #NET	 "GPIO_B7_0"     
+NET	 "p4io_group4(3)"        LOC = "D1";   #NET	 "GPIO_B7_1"     
+NET	 "p4io_group4(4)"        LOC = "D4";   #NET	 "GPIO_B7_2"     
+NET	 "p4io_group4(5)"        LOC = "C1";   #NET	 "GPIO_B7_3"     
+NET	 "p4io_group4(6)"        LOC = "C2";   #NET	 "GPIO_B7_4"     
+NET	 "p4io_group4(7)"        LOC = "U13";  #NET	 "ANA_REF"     
+NET	 "p4io_group4(8)"        LOC = "Y16";  #NET	 "ANA_OUT"     
+NET	 "p4io_group4(9)"        LOC = "V18";  #NET	 "CMP_OUT"     
+NET	 "p4io_group4(10)"       LOC = "U17";  #NET	 "KBCLK"     
+NET	 "p4io_group4(11)"       LOC = "U16";  #NET	 "KBDATA"     
+NET	 "p4io_group4(12)"       LOC = "C3";   #NET	 "RS232TX"     
+NET	 "p4io_group4(13)"       LOC = "C4";   #NET	 "RS232RX"     
+
diff --git a/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.ut b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.ut
new file mode 100644
index 0000000..03579a9
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/default.ut
@@ -0,0 +1,26 @@
+ 
+-g DebugBitstream:No
+-g Binary:no
+-b
+-g CRC:Enable
+-g ConfigRate:6
+-g CclkPin:PullUp
+
+-g ProgPin:PullUp
+-g DonePin:PullUp
+-g TckPin:PullUp
+-g TdiPin:PullUp
+-g TdoPin:PullUp
+-g TmsPin:PullUp
+-g UnusedPin:PullDown
+-g UserID:0xFFFFFFFF
+-g StartUpClk:CClk
+-g DONE_cycle:4
+-g GTS_cycle:5
+-g GWE_cycle:6
+-g LCK_cycle:NoWait
+-g Security:None
+-g Persist:No
+-g ReadBack
+-g DonePipe:No
+-g DriveDone:Yes
diff --git a/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/fpga.cmd b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/fpga.cmd
new file mode 100644
index 0000000..bd01090
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/fpga.cmd
@@ -0,0 +1,26 @@
+setPreference -pref UserLevel:NOVICE
+setPreference -pref MessageLevel:DETAILED
+setPreference -pref ConcurrentMode:FALSE
+setPreference -pref UseHighz:FALSE
+setPreference -pref ConfigOnFailure:STOP
+setPreference -pref StartupCLock:AUTO_CORRECTION
+setPreference -pref AutoSignature:FALSE
+setPreference -pref KeepSVF:FALSE
+setPreference -pref svfUseTime:FALSE
+setPreference -pref UserLevel:NOVICE
+setPreference -pref MessageLevel:DETAILED
+setPreference -pref ConcurrentMode:FALSE
+setPreference -pref UseHighz:FALSE
+setPreference -pref ConfigOnFailure:STOP
+setPreference -pref StartupCLock:AUTO_CORRECTION
+setPreference -pref AutoSignature:FALSE
+setPreference -pref KeepSVF:FALSE
+setPreference -pref svfUseTime:FALSE
+setMode -bscan
+setCable -p auto
+setCableSpeed -speed 3000000
+Identify -inferir
+IdentifyMPM
+assignfile -p 1 -file leon3mp.bit
+program -p 1 -onlyFpga
+quit 
diff --git a/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/leon3mp.ucf b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/leon3mp.ucf
new file mode 100644
index 0000000..0efd8d2
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/leon3mp.ucf
@@ -0,0 +1,270 @@
+#Spartan-3 Evaluation Board Constraints File
+
+#Clocks
+NET "clk_socket" LOC = "AB12"  | IOSTANDARD = LVCMOS33; #OSC2 (SOCKET)
+NET clk_66mhz PERIOD = 15.000 ;
+NET "clk_66mhz"  LOC = "A11";  #OSC1 (66MHZ)
+NET video_clk PERIOD = 39.000 ;
+
+OFFSET = OUT : 12.000 : AFTER clk_66mhz;
+
+NET pci_clk PERIOD = 30.000 ;
+OFFSET = OUT : 11.000 : AFTER pci_clk ;
+OFFSET = IN : 7.000 : BEFORE pci_clk ;
+NET  "pci_clk"      LOC = "AA12";
+NET pci_gnt OFFSET = IN : 10.000 : BEFORE pci_clk ;
+NET pci_req OFFSET = OUT : 12.000 : AFTER pci_clk ;
+NET pci_rst TIG ;
+
+NET phy_txck PERIOD = 40.000 ;
+NET phy_rxck PERIOD = 40.000 ;
+OFFSET = OUT : 15.000 : AFTER phy_txck ;
+OFFSET = IN : 10.000 : BEFORE phy_txck ;
+OFFSET = IN : 10.000 : BEFORE phy_rxck ;
+
+#LEDs
+NET "leds(0)" LOC = "U12";
+NET "leds(1)" LOC = "V12";
+NET "leds(2)" LOC = "Y12";
+NET "leds(3)" LOC = "Y13";
+NET "leds(4)" LOC = "AB13";
+NET "leds(5)" LOC = "AA13";
+NET "leds(6)" LOC = "V13";
+NET "leds(7)" LOC = "AB14";
+
+#Switches (DIP switches (4) and Pushbuttons (2))
+NET "switches(0)" LOC = "W4"  | IOSTANDARD = LVCMOS33; # SWITCH(0) (SW2:1)
+NET "switches(1)" LOC = "W3"  | IOSTANDARD = LVCMOS33; # SWITCH(1) (SW2:2)
+NET "switches(2)" LOC = "Y3"  | IOSTANDARD = LVCMOS33; # SWITCH(2) (SW2:3)
+NET "switches(3)" LOC = "Y2"  | IOSTANDARD = LVCMOS33; # SWITCH(3) (SW2:4)
+NET "switches(4)" LOC = "Y1"  | IOSTANDARD = LVCMOS33; # SWITCH_PB1 (SW3)
+NET "switches(5)" LOC = "W2"  | IOSTANDARD = LVCMOS33; # SWITCH_PB2 (SW4)
+
+# PS2 Ports (Mouse and Keyboard)
+NET "msclk"	LOC = "W14"; # JS2
+NET "msdata" 	LOC = "W13";
+NET "msclk"	PULLUP;
+NET "msdata" 	PULLUP;
+
+NET "kbclk"	LOC = "U17"; # JS1
+NET "kbdata"    LOC = "U16";
+NET "kbclk"	PULLUP;
+NET "kbdata"    PULLUP;
+
+#SRAM
+NET "sram_a(0)" LOC = "E22"; #ADDR0
+NET "sram_a(1)" LOC = "E21";
+NET "sram_a(2)" LOC = "D21";
+NET "sram_a(3)" LOC = "E20";
+NET "sram_a(4)" LOC = "D22";
+NET "sram_a(5)" LOC = "D20";
+NET "sram_a(6)" LOC = "C22";
+NET "sram_a(7)" LOC = "D19";
+NET "sram_a(8)" LOC = "C20";
+NET "sram_a(9)" LOC = "C21";
+NET "sram_a(10)" LOC = "F18";
+NET "sram_a(11)" LOC = "G18";
+NET "sram_a(12)" LOC = "G19";
+NET "sram_a(13)" LOC = "E18";
+NET "sram_a(14)" LOC = "F19";
+NET "sram_a(15)" LOC = "F20";
+NET "sram_a(16)" LOC = "E19";
+NET "sram_a(17)" LOC = "F21";  #ADDR17
+NET "sram_a(18)" LOC = "F17";
+NET "sram_a(19)" LOC = "F16";
+NET "sram_a(20)" LOC = "E16";
+NET "sram_a(21)" LOC = "E13";
+NET "sram_a(22)" LOC = "F13"; 
+NET "sram_a(23)" LOC = "A12";  
+NET "sram_a(24)" LOC = "F12";  
+
+NET "sdclk" LOC = "L21";  
+NET "sdcsn" LOC = "B20";  
+NET "casn"  LOC = "C19";  
+NET "rasn"  LOC = "B19";  
+NET "sdcke" LOC = "A19";  
+
+NET "sram_ben_l(0)" LOC = "K21"; #BE0
+NET "sram_ben_l(1)" LOC = "K22";
+NET "sram_ben_l(2)" LOC = "G22";
+NET "sram_ben_l(3)" LOC = "K20"; #BE3
+ 
+NET "sram_cs_l(0)" LOC = "G21"; 
+NET "sram_cs_l(1)" LOC = "L20"; 
+NET "sram_oe_l" LOC = "G17";
+NET "sram_we_l" LOC = "K19";
+NET "flash_cs_l" LOC = "L18"; 
+NET "flash_rst_l" LOC = "L19"; 
+
+NET "sram_dq(0)" LOC = "U19"; #DATA0 
+NET "sram_dq(1)" LOC = "T21";
+NET "sram_dq(2)" LOC = "U20";
+NET "sram_dq(3)" LOC = "U21";
+NET "sram_dq(4)" LOC = "V21";
+NET "sram_dq(5)" LOC = "V22";
+NET "sram_dq(6)" LOC = "W22";
+NET "sram_dq(7)" LOC = "V20";
+NET "sram_dq(8)" LOC = "Y19";
+NET "sram_dq(9)" LOC = "W19";
+NET "sram_dq(10)" LOC = "V19";
+NET "sram_dq(11)" LOC = "Y20";
+NET "sram_dq(12)" LOC = "Y21";
+NET "sram_dq(13)" LOC = "Y22";
+NET "sram_dq(14)" LOC = "W20";
+NET "sram_dq(15)" LOC = "W21";
+NET "sram_dq(16)" LOC = "M17";
+NET "sram_dq(17)" LOC = "L17";
+NET "sram_dq(18)" LOC = "M19";
+NET "sram_dq(19)" LOC = "M18";
+NET "sram_dq(20)" LOC = "M20";
+NET "sram_dq(21)" LOC = "N19";
+NET "sram_dq(22)" LOC = "M21";
+NET "sram_dq(23)" LOC = "N20";
+NET "sram_dq(24)" LOC = "T22";
+NET "sram_dq(25)" LOC = "U18";
+NET "sram_dq(26)" LOC = "T18";
+NET "sram_dq(27)" LOC = "R18";
+NET "sram_dq(28)" LOC = "T17";
+NET "sram_dq(29)" LOC = "N21";
+NET "sram_dq(30)" LOC = "N22";
+NET "sram_dq(31)" LOC = "M22"; #DATA31
+
+# UART
+NET "tx" LOC = "C3";
+NET "rx" LOC = "C4";
+
+# Ethernet PHY
+
+NET "phy_txck"    LOC = "C12"; 
+NET "phy_rxck"    LOC = "B12";
+NET "phy_crs"     LOC = "E12";
+NET "phy_rxdv"    LOC = "B14"; 
+NET "phy_rxd(0)"  LOC = "B15";
+NET "phy_rxd(1)"  LOC = "A15";
+NET "phy_rxd(2)"  LOC = "D15";
+NET "phy_rxd(3)"  LOC = "E15";
+NET "phy_col"     LOC = "D13";
+NET "phy_rxer"    LOC = "A14"; 
+NET "phy_txen"    LOC = "E14"; 
+NET "phy_txd(0)"  LOC = "B13";
+NET "phy_txd(1)"  LOC = "A13";
+NET "phy_txd(2)"  LOC = "C13";
+NET "phy_txd(3)"  LOC = "D12";
+NET "phy_reset_l"    PULLUP;
+NET "phy_reset_l" LOC = "E4";
+NET "phy_mdc"     LOC = "C17";
+NET "phy_mdio"    LOC = "B17";
+NET "phy_txer"    LOC = "D14";
+
+# Video DAC
+NET "video_clk"     LOC = "B11" | IOSTANDARD = LVCMOS33;
+NET "horiz_sync"    LOC = "E11";  
+NET "vert_sync"     LOC = "D11";  
+NET "comp_sync"     LOC = "A3";
+NET "blank"         LOC = "A4";
+NET "video_out(0)"  LOC = "E9";	# Blue(0)
+NET "video_out(1)"  LOC = "F9";	# Blue(1)
+NET "video_out(2)"  LOC = "D7";	# Blue(2)
+NET "video_out(3)"  LOC = "C7";	# Blue(3)
+NET "video_out(4)"  LOC = "E7";	# Blue(4)
+NET "video_out(5)"  LOC = "F7";	# Blue(5)
+NET "video_out(6)"  LOC = "E6";	# Blue(6)
+NET "video_out(7)"  LOC = "F6";	# Blue(7)
+NET "video_out(8)"  LOC = "F10";	# Greeen(0)
+NET "video_out(9)"  LOC = "D10";
+NET "video_out(10)" LOC = "A10";
+NET "video_out(11)" LOC = "D9";
+NET "video_out(12)" LOC = "A9";
+NET "video_out(13)" LOC = "B9";
+NET "video_out(14)" LOC = "A8";
+NET "video_out(15)" LOC = "B8";	# Green(7)
+NET "video_out(16)" LOC = "D6";	# Red(0)
+NET "video_out(17)" LOC = "C6";
+NET "video_out(18)" LOC = "B6";
+NET "video_out(19)" LOC = "D5";
+NET "video_out(20)" LOC = "A5";
+NET "video_out(21)" LOC = "B5";
+NET "video_out(22)" LOC = "C5";
+NET "video_out(23)" LOC = "B4";	# Red(7)
+
+# Comparator
+NET "ADC_CMP_OUT" LOC = "V18";
+NET "ADC_ANA_REF" LOC = "U13";
+NET "ADC_ANA_OUT" LOC = "Y16";
+
+# EEPROM
+NET "sda" LOC = "AA14"; # FPGA_D0
+NET "scl" LOC = "W12";  # FPGA_INIT#
+
+# Dual 7 Segment LED 
+NET "disp_seg1(7)" LOC = "AB15";	#0
+NET "disp_seg1(6)" LOC = "AB18";	#1
+NET "disp_seg1(5)" LOC = "V17";	#2
+NET "disp_seg1(4)" LOC = "U14";	#3
+NET "disp_seg1(3)" LOC = "V14";	#4
+NET "disp_seg1(2)" LOC = "AA15";	#5
+NET "disp_seg1(1)" LOC = "Y18";	#6
+NET "disp_seg1(0)" LOC = "AA18";	#7
+
+NET "disp_seg2(7)" LOC = "W17";	#0
+NET "disp_seg2(6)" LOC = "Y17";	#1
+NET "disp_seg2(5)" LOC = "W18";	#2
+NET "disp_seg2(4)" LOC = "V16";	#3
+NET "disp_seg2(3)" LOC = "W16";	#4
+NET "disp_seg2(2)" LOC = "AA17";	#5
+NET "disp_seg2(1)" LOC = "AA20";	#6
+NET "disp_seg2(0)" LOC = "AB20";	#7
+
+# PCI 32-bit
+#NET  "pci_rst"     LOC = "E4"  ;
+#
+NET  "pci_ad(31)" LOC = "D2"  ;
+NET  "pci_ad(30)" LOC = "D3"  ;
+NET  "pci_ad(29)" LOC = "E3"  ;
+NET  "pci_ad(28)" LOC = "F4"  ;
+NET  "pci_ad(27)" LOC = "E2"  ;
+NET  "pci_ad(26)" LOC = "E1"  ;
+NET  "pci_ad(25)" LOC = "F5"  ;
+NET  "pci_ad(24)" LOC = "G6"  ;
+NET  "pci_ad(23)" LOC = "F3"  ;
+NET  "pci_ad(22)" LOC = "F2"  ;
+NET  "pci_ad(21)" LOC = "G5"  ;
+NET  "pci_ad(20)" LOC = "H5"  ;
+NET  "pci_ad(19)" LOC = "G2"  ;
+NET  "pci_ad(18)" LOC = "G1"  ;
+NET  "pci_ad(17)" LOC = "K4"  ;
+NET  "pci_ad(16)" LOC = "K3"  ;
+NET  "pci_cbe(3)" LOC = "K2"  ;
+NET  "pci_cbe(2)" LOC = "K1"  ;
+#
+NET  "pci_req"    LOC = "L6"  ;
+NET  "pci_gnt"    LOC = "L5" | IOSTANDARD = PCI33_3 ;
+NET  "pci_par"    LOC = "L4"  ;
+NET  "pci_idsel"  LOC = "L3"  ;
+NET  "pci_frame"  LOC = "L2"  ;
+NET  "pci_irdy"   LOC = "L1"  ;
+NET  "pci_trdy"   LOC = "M1"  ;
+NET  "pci_devsel" LOC = "M2"  ;
+NET  "pci_stop"   LOC = "M3"  ;
+NET  "pci_perr"   LOC = "M4"  ;
+NET  "pci_serr"   LOC = "M5"  ;
+NET  "pci_inta"   LOC = "M6"  ;
+#
+NET  "pci_cbe(1)" LOC = "N1"  ;
+NET  "pci_cbe(0)" LOC = "N2"  ;
+NET  "pci_ad(15)" LOC = "N3"  ;
+NET  "pci_ad(14)" LOC = "N4"  ;
+NET  "pci_ad(13)" LOC = "T1"  ;
+NET  "pci_ad(12)" LOC = "T2"  ;
+NET  "pci_ad(11)" LOC = "U2"  ;
+NET  "pci_ad(10)" LOC = "U3"  ;
+NET  "pci_ad(9)"  LOC = "T4"  ;
+NET  "pci_ad(8)"  LOC = "U4"  ;
+NET  "pci_ad(7)"  LOC = "T5"  ;
+NET  "pci_ad(6)"  LOC = "T6"  ;
+NET  "pci_ad(5)"  LOC = "V1"  ;
+NET  "pci_ad(4)"  LOC = "V2"  ;
+NET  "pci_ad(3)"  LOC = "V3"  ;
+NET  "pci_ad(2)"  LOC = "V4"  ;
+NET  "pci_ad(1)"  LOC = "U5"  ;
+NET  "pci_ad(0)"  LOC = "V5"  ;
diff --git a/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/prom.cmd b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/prom.cmd
new file mode 100644
index 0000000..7fd069a
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/boards/altium-nano3000-xc3s1400an/prom.cmd
@@ -0,0 +1,26 @@
+setPreference -pref UserLevel:NOVICE
+setPreference -pref MessageLevel:DETAILED
+setPreference -pref ConcurrentMode:FALSE
+setPreference -pref UseHighz:FALSE
+setPreference -pref ConfigOnFailure:STOP
+setPreference -pref StartupCLock:AUTO_CORRECTION
+setPreference -pref AutoSignature:FALSE
+setPreference -pref KeepSVF:FALSE
+setPreference -pref svfUseTime:FALSE
+setPreference -pref UserLevel:NOVICE
+setPreference -pref MessageLevel:DETAILED
+setPreference -pref ConcurrentMode:FALSE
+setPreference -pref UseHighz:FALSE
+setPreference -pref ConfigOnFailure:STOP
+setPreference -pref StartupCLock:AUTO_CORRECTION
+setPreference -pref AutoSignature:FALSE
+setPreference -pref KeepSVF:FALSE
+setPreference -pref svfUseTime:FALSE
+setMode -bscan
+setCable -p auto
+setCableSpeed -speed 3000000
+Identify -inferir
+IdentifyMPM
+assignfile -p 1 -file leon3mp.bit
+program -p 1 -e -v
+quit 
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/.config b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/.config
new file mode 100644
index 0000000..c1324db
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/.config
@@ -0,0 +1,284 @@
+#
+# Automatically generated make config: don't edit
+#
+
+#
+# Synthesis      
+#
+# CONFIG_SYN_INFERRED is not set
+# CONFIG_SYN_STRATIX is not set
+# CONFIG_SYN_STRATIXII is not set
+# CONFIG_SYN_STRATIXIII is not set
+# CONFIG_SYN_STRATIXIV is not set
+# CONFIG_SYN_CYCLONEIII is not set
+# CONFIG_SYN_ALTERA is not set
+# CONFIG_SYN_AXCEL is not set
+# CONFIG_SYN_AXDSP is not set
+# CONFIG_SYN_PROASIC is not set
+# CONFIG_SYN_PROASICPLUS is not set
+# CONFIG_SYN_PROASIC3 is not set
+# CONFIG_SYN_PROASIC3E is not set
+# CONFIG_SYN_PROASIC3L is not set
+# CONFIG_SYN_IGLOO is not set
+# CONFIG_SYN_FUSION is not set
+# CONFIG_SYN_UT025CRH is not set
+# CONFIG_SYN_UT130HBD is not set
+# CONFIG_SYN_UT90NHBD is not set
+# CONFIG_SYN_ATC18 is not set
+# CONFIG_SYN_ATC18RHA is not set
+# CONFIG_SYN_CMOS9SF is not set
+# CONFIG_SYN_CUSTOM1 is not set
+# CONFIG_SYN_EASIC90 is not set
+# CONFIG_SYN_EASIC45 is not set
+# CONFIG_SYN_IHP25 is not set
+# CONFIG_SYN_IHP25RH is not set
+# CONFIG_SYN_LATTICE is not set
+# CONFIG_SYN_ECLIPSE is not set
+# CONFIG_SYN_PEREGRINE is not set
+# CONFIG_SYN_RH_LIB18T is not set
+# CONFIG_SYN_RHUMC is not set
+# CONFIG_SYN_SAED32 is not set
+# CONFIG_SYN_DARE is not set
+# CONFIG_SYN_SMIC13 is not set
+# CONFIG_SYN_TM65GPLUS is not set
+# CONFIG_SYN_TSMC90 is not set
+# CONFIG_SYN_UMC is not set
+# CONFIG_SYN_ARTIX7 is not set
+# CONFIG_SYN_KINTEX7 is not set
+CONFIG_SYN_SPARTAN3=y
+# CONFIG_SYN_SPARTAN3E is not set
+# CONFIG_SYN_SPARTAN6 is not set
+# CONFIG_SYN_VIRTEXE is not set
+# CONFIG_SYN_VIRTEX2 is not set
+# CONFIG_SYN_VIRTEX4 is not set
+# CONFIG_SYN_VIRTEX5 is not set
+# CONFIG_SYN_VIRTEX6 is not set
+# CONFIG_SYN_VIRTEX7 is not set
+# CONFIG_SYN_ZYNQ7000 is not set
+# CONFIG_SYN_INFER_RAM is not set
+# CONFIG_SYN_INFER_PADS is not set
+# CONFIG_SYN_NO_ASYNC is not set
+# CONFIG_SYN_SCAN is not set
+
+#
+# Clock generation
+#
+# CONFIG_CLK_INFERRED is not set
+# CONFIG_CLK_HCLKBUF is not set
+# CONFIG_CLK_UT130HBD is not set
+# CONFIG_CLK_ALTDLL is not set
+# CONFIG_CLK_LATDLL is not set
+# CONFIG_CLK_PRO3PLL is not set
+# CONFIG_CLK_PRO3EPLL is not set
+# CONFIG_CLK_PRO3LPLL is not set
+# CONFIG_CLK_FUSPLL is not set
+# CONFIG_CLK_LIB18T is not set
+# CONFIG_CLK_RHUMC is not set
+# CONFIG_CLK_DARE is not set
+# CONFIG_CLK_SAED32 is not set
+# CONFIG_CLK_EASIC45 is not set
+# CONFIG_CLK_CLKPLLE2 is not set
+# CONFIG_CLK_CLKDLL is not set
+CONFIG_CLK_DCM=y
+CONFIG_CLK_MUL=4
+CONFIG_CLK_DIV=2
+# CONFIG_PCI_CLKDLL is not set
+# CONFIG_CLK_NOFB is not set
+# CONFIG_PCI_SYSCLK is not set
+
+#
+# Processor            
+#
+CONFIG_LEON3=y
+CONFIG_PROC_NUM=1
+# CONFIG_LEON3_MIN is not set
+# CONFIG_LEON3_GP is not set
+# CONFIG_LEON3_HP is not set
+CONFIG_LEON3_CUSTOM=y
+
+#
+# Integer unit                                           
+#
+CONFIG_IU_NWINDOWS=8
+CONFIG_IU_V8MULDIV=y
+# CONFIG_IU_MUL_LATENCY_2 is not set
+# CONFIG_IU_MUL_LATENCY_4 is not set
+CONFIG_IU_MUL_LATENCY_5=y
+# CONFIG_IU_MUL_MAC is not set
+CONFIG_IU_MUL_INFERRED=y
+# CONFIG_IU_MUL_MODGEN is not set
+# CONFIG_IU_MUL_TECHSPEC is not set
+# CONFIG_IU_MUL_DW is not set
+CONFIG_IU_BP=y
+# CONFIG_IU_SVT is not set
+# CONFIG_NOTAG is not set
+CONFIG_IU_LDELAY=1
+CONFIG_IU_WATCHPOINTS=2
+CONFIG_PWD=y
+CONFIG_IU_RSTADDR=00000
+
+#
+# Floating-point unit
+#
+# CONFIG_FPU_ENABLE is not set
+
+#
+# Cache system
+#
+CONFIG_ICACHE_ENABLE=y
+# CONFIG_ICACHE_ASSO1 is not set
+CONFIG_ICACHE_ASSO2=y
+# CONFIG_ICACHE_ASSO3 is not set
+# CONFIG_ICACHE_ASSO4 is not set
+# CONFIG_ICACHE_SZ1 is not set
+CONFIG_ICACHE_SZ2=y
+# CONFIG_ICACHE_SZ4 is not set
+# CONFIG_ICACHE_SZ8 is not set
+# CONFIG_ICACHE_SZ16 is not set
+# CONFIG_ICACHE_SZ32 is not set
+# CONFIG_ICACHE_SZ64 is not set
+# CONFIG_ICACHE_SZ128 is not set
+# CONFIG_ICACHE_SZ256 is not set
+# CONFIG_ICACHE_LZ16 is not set
+CONFIG_ICACHE_LZ32=y
+# CONFIG_ICACHE_ALGORND is not set
+# CONFIG_ICACHE_ALGODIR is not set
+# CONFIG_ICACHE_ALGOLRR is not set
+CONFIG_ICACHE_ALGOLRU=y
+# CONFIG_ICACHE_LOCK is not set
+CONFIG_DCACHE_ENABLE=y
+CONFIG_DCACHE_ASSO1=y
+# CONFIG_DCACHE_ASSO2 is not set
+# CONFIG_DCACHE_ASSO3 is not set
+# CONFIG_DCACHE_ASSO4 is not set
+# CONFIG_DCACHE_SZ1 is not set
+# CONFIG_DCACHE_SZ2 is not set
+CONFIG_DCACHE_SZ4=y
+# CONFIG_DCACHE_SZ8 is not set
+# CONFIG_DCACHE_SZ16 is not set
+# CONFIG_DCACHE_SZ32 is not set
+# CONFIG_DCACHE_SZ64 is not set
+# CONFIG_DCACHE_SZ128 is not set
+# CONFIG_DCACHE_SZ256 is not set
+CONFIG_DCACHE_LZ16=y
+# CONFIG_DCACHE_LZ32 is not set
+CONFIG_DCACHE_SNOOP=y
+CONFIG_DCACHE_SNOOP_SEPTAG=y
+CONFIG_CACHE_FIXED=0
+
+#
+# MMU
+#
+CONFIG_MMU_ENABLE=y
+CONFIG_MMU_COMBINED=y
+# CONFIG_MMU_SPLIT is not set
+# CONFIG_MMU_REPARRAY is not set
+CONFIG_MMU_REPINCREMENT=y
+# CONFIG_MMU_I2 is not set
+# CONFIG_MMU_I4 is not set
+CONFIG_MMU_I8=y
+# CONFIG_MMU_I16 is not set
+# CONFIG_MMU_I32 is not set
+# CONFIG_MMU_I64 is not set
+CONFIG_MMU_PAGE_4K=y
+# CONFIG_MMU_PAGE_8K is not set
+# CONFIG_MMU_PAGE_16K is not set
+# CONFIG_MMU_PAGE_32K is not set
+# CONFIG_MMU_PAGE_PROG is not set
+
+#
+# Debug Support Unit        
+#
+CONFIG_DSU_ENABLE=y
+# CONFIG_DSU_ITRACE is not set
+# CONFIG_DSU_ATRACE is not set
+
+#
+# Fault-tolerance  
+#
+
+#
+# VHDL debug settings       
+#
+# CONFIG_IU_DISAS is not set
+CONFIG_DEBUG_PC32=y
+
+#
+# AMBA configuration
+#
+CONFIG_AHB_DEFMST=0
+CONFIG_AHB_RROBIN=y
+# CONFIG_AHB_SPLIT is not set
+# CONFIG_AHB_FPNPEN is not set
+CONFIG_AHB_IOADDR=FFF
+CONFIG_APB_HADDR=800
+# CONFIG_AHB_MON is not set
+# CONFIG_AHB_DTRACE is not set
+
+#
+# Debug Link           
+#
+# CONFIG_DSU_UART is not set
+CONFIG_DSU_JTAG=y
+# CONFIG_DSU_ETH is not set
+
+#
+# Memory controllers                
+#
+
+#
+# Leon2 memory controller        
+#
+CONFIG_MCTRL_LEON2=y
+# CONFIG_MCTRL_8BIT is not set
+CONFIG_MCTRL_16BIT=y
+# CONFIG_MCTRL_5CS is not set
+CONFIG_MCTRL_SDRAM=y
+# CONFIG_MCTRL_SDRAM_SEPBUS is not set
+# CONFIG_MCTRL_PAGE is not set
+
+#
+# Peripherals             
+#
+
+#
+# On-chip RAM/ROM                 
+#
+# CONFIG_AHBROM_ENABLE is not set
+# CONFIG_AHBRAM_ENABLE is not set
+
+#
+# Ethernet             
+#
+CONFIG_GRETH_ENABLE=y
+# CONFIG_GRETH_GIGA is not set
+# CONFIG_GRETH_FIFO4 is not set
+CONFIG_GRETH_FIFO8=y
+# CONFIG_GRETH_FIFO16 is not set
+# CONFIG_GRETH_FIFO32 is not set
+# CONFIG_GRETH_FIFO64 is not set
+
+#
+# UARTs, timers and irq control         
+#
+CONFIG_UART1_ENABLE=y
+# CONFIG_UA1_FIFO1 is not set
+# CONFIG_UA1_FIFO2 is not set
+# CONFIG_UA1_FIFO4 is not set
+CONFIG_UA1_FIFO8=y
+# CONFIG_UA1_FIFO16 is not set
+# CONFIG_UA1_FIFO32 is not set
+CONFIG_IRQ3_ENABLE=y
+# CONFIG_IRQ3_SEC is not set
+CONFIG_GPT_ENABLE=y
+CONFIG_GPT_NTIM=2
+CONFIG_GPT_SW=8
+CONFIG_GPT_TW=32
+CONFIG_GPT_IRQ=8
+CONFIG_GPT_SEPIRQ=y
+# CONFIG_GPT_WDOGEN is not set
+
+#
+# VHDL Debugging        
+#
+CONFIG_DEBUG_UART=y
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/Makefile b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/Makefile
new file mode 100644
index 0000000..6903b27
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/Makefile
@@ -0,0 +1,32 @@
+GRLIB=../..
+TOP=leon3mp
+BOARD=altium-nano3000-xc3s1400an
+include $(GRLIB)/boards/$(BOARD)/Makefile.inc
+DEVICE=$(PART)-$(PACKAGE)$(SPEED)
+UCF=$(TOP).ucf
+QSF=$(GRLIB)/boards/$(BOARD)/$(TOP).qsf
+EFFORT=std
+XSTOPT=
+SYNPOPT="set_option -pipe 0; set_option -retiming 0; set_option -write_apr_constraint 0"
+VHDLSYNFILES=config.vhd leon3mp.vhd
+VHDLSIMFILES=testbench.vhd
+SIMTOP=testbench
+SDCFILE=$(GRLIB)/boards/$(BOARD)/default.sdc
+BITGEN=$(GRLIB)/boards/$(BOARD)/default.ut
+CLEAN=soft-clean
+
+TECHLIBS = unisim
+LIBSKIP = core1553bbc core1553brm core1553brt gr1553 corePCIF \
+	tmtc openchip hynix cypress ihp usbhc spw
+DIRSKIP = b1553 pcif leon2 leon2ft crypto satcan leon3ft ddr meiko mfpc \
+	grusbhc pci i2c dps6 cy7c67300 spi spacewire usb leon4 leon4v0 l2cache \
+	slink ascs pwm gr1553b iommu
+FILESKIP = grcan.vhd
+
+include $(GRLIB)/software/leon3/Makefile
+
+include $(GRLIB)/bin/Makefile
+
+
+##################  project specific targets ##########################
+
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/README.txt b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/README.txt
new file mode 100644
index 0000000..5cb5907
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/README.txt
@@ -0,0 +1,179 @@
+
+This leon3 design is tailored to the Alitum Nano3000 board
+---------------------------------------------------------------------
+
+Design specifics:
+
+* System reset is mapped to the SW1 Pushbutton
+
+* The console UART (UART 1) is connected to the User Header A as is a TTL output
+
+* The LEON3 processor can run up to 40 MHz on the board
+  in the typical configuration.
+
+* Sample output from GRMON info sys is:
+
+  GRMON2 LEON debug monitor v2.0.53 eval version
+  
+  Copyright (C) 2014 Aeroflex Gaisler - All rights reserved.
+  For latest updates, go to http://www.gaisler.com/
+  Comments or bug-reports to support@gaisler.com
+  
+  This eval version will expire on 03/12/2014
+
+Xilusb: Cable type/rev : 0x3 
+ JTAG chain (1): xc3s1400an 
+ 
+  Device ID:           0x302
+  GRLIB build version: 4144
+  Detected frequency:  40 MHz
+  
+  Component                            Vendor
+  LEON3 SPARC V8 Processor             Aeroflex Gaisler
+  JTAG Debug Link                      Aeroflex Gaisler
+  GR Ethernet MAC                      Aeroflex Gaisler
+  AHB/APB Bridge                       Aeroflex Gaisler
+  LEON3 Debug Support Unit             Aeroflex Gaisler
+  LEON2 Memory Controller              European Space Agency
+  Generic UART                         Aeroflex Gaisler
+  Multi-processor Interrupt Ctrl.      Aeroflex Gaisler
+  Modular Timer Unit                   Aeroflex Gaisler
+  
+  Use command 'info sys' to print a detailed report of attached cores
+
+grmon2> info sys
+  cpu0      Aeroflex Gaisler  LEON3 SPARC V8 Processor    
+            AHB Master 0
+  ahbjtag0  Aeroflex Gaisler  JTAG Debug Link    
+            AHB Master 1
+  greth0    Aeroflex Gaisler  GR Ethernet MAC    
+            AHB Master 2
+            APB: 80000400 - 80000500
+            IRQ: 4
+            edcl ip 192.168.0.51, buffer 1 kbyte
+  apbmst0   Aeroflex Gaisler  AHB/APB Bridge    
+            AHB: 80000000 - 80100000
+  dsu0      Aeroflex Gaisler  LEON3 Debug Support Unit    
+            AHB: 90000000 - A0000000
+            CPU0:  win 8, hwbp 2, V8 mul/div, srmmu, lddel 1
+                   stack pointer 0x43fffff0
+                   icache 2 * 2 kB, 32 B/line lru
+                   dcache 1 * 4 kB, 16 B/line 
+  mctrl0    European Space Agency  LEON2 Memory Controller    
+            AHB: 00000000 - 20000000
+            AHB: 20000000 - 40000000
+            AHB: 40000000 - 80000000
+            APB: 80000000 - 80000100
+            16-bit prom @ 0x00000000
+            32-bit sdram: 1 * 64 Mbyte @ 0x40000000
+            col 9, cas 2, ref 7.8 us
+  uart0     Aeroflex Gaisler  Generic UART    
+            APB: 80000100 - 80000200
+            IRQ: 2
+            Baudrate 0
+  irqmp0    Aeroflex Gaisler  Multi-processor Interrupt Ctrl.    
+            APB: 80000200 - 80000300
+  gptimer0  Aeroflex Gaisler  Modular Timer Unit    
+            APB: 80000300 - 80000400
+            IRQ: 8
+            8-bit scalar, 2 * 32-bit timers, divisor 40
+
+
+  AMD-style 16-bit flash
+
+  Manuf.        : AMD               
+  Device        : MX29LV128MB       
+  
+  1 x 16 Mbytes = 16 Mbytes total @ 0x00000000
+  
+  CFI information
+  Flash family  : 2
+  Flash size    : 128 Mbit
+  Erase regions : 1
+  Erase blocks  : 128
+  Write buffer  : 64 bytes (limited to 64)
+  Lock-down     : Not supported
+  Region  0     : 128 blocks of 128 kbytes
+  
+The system is able to run the latest linux kernel...
+
+
+PROMLIB: Sun Boot Prom Version 0 Revision 0
+Linux version 3.16.1-mrw (opencores@lnx-dev) (gcc version 4.4.7 (Buildroot 2014.08-git-g7a88dbf) ) #2 Wed Aug 20 09:32:57 BST 2014
+bootconsole [earlyprom0] enabled
+ARCH: LEON
+TYPE: Leon3 System-on-a-Chip
+Ethernet address: 00:00:7c:cc:01:45
+CACHE: direct mapped cache, set size 4k
+CACHE: not flushing on every context switch
+OF stdout device is: /a::a
+PROM: Built device tree with 13370 bytes of memory.
+Booting Linux...
+Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 14971
+Kernel command line: console=ttyS0,115200 init=/sbin/init 
+PID hash table entries: 256 (order: -2, 1024 bytes)
+Dentry cache hash table entries: 8192 (order: 3, 32768 bytes)
+Inode-cache hash table entries: 4096 (order: 2, 16384 bytes)
+Sorting __ex_table...
+Memory: 57572K/60396K available (2824K kernel code, 139K rwdata, 584K rodata, 1396K init, 136K bss, 2824K reserved, 0K highmem)
+NR_IRQS:64
+Console: colour dummy device 80x25
+console [ttyS0] enabled
+bootconsole [earlyprom0] disabled
+bootconsole [earlyprom0] disabled
+Calibrating delay loop... 37.76 BogoMIPS (lpj=75520)
+pid_max: default: 32768 minimum: 301
+Mount-cache hash table entries: 1024 (order: 0, 4096 bytes)
+Mountpoint-cache hash table entries: 1024 (order: 0, 4096 bytes)
+devtmpfs: initialized
+NET: Registered protocol family 16
+vgaarb: loaded
+SCSI subsystem initialized
+Switched to clocksource timer_cs
+NET: Registered protocol family 2
+TCP established hash table entries: 1024 (order: 0, 4096 bytes)
+TCP bind hash table entries: 1024 (order: 0, 4096 bytes)
+TCP: Hash tables configured (established 1024 bind 1024)
+TCP: reno registered
+UDP hash table entries: 256 (order: 0, 4096 bytes)
+UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)
+NET: Registered protocol family 1
+RPC: Registered named UNIX socket transport module.
+RPC: Registered udp transport module.
+RPC: Registered tcp transport module.
+RPC: Registered tcp NFSv4.1 backchannel transport module.
+futex hash table entries: 256 (order: -1, 3072 bytes)
+msgmni has been set to 112
+io scheduler noop registered
+io scheduler deadline registered
+io scheduler cfq registered (default)
+ffd0de1c: ttyS0 at MMIO 0x80000100 (irq = 3, base_baud = 2500000) is a GRLIB/APBUART
+grlib-apbuart at 0x80000100, irq 3
+brd: module loaded
+mousedev: PS/2 mouse device common for all mice
+i2c /dev entries driver
+TCP: cubic registered
+NET: Registered protocol family 17
+leon: power management initialized
+Freeing unused kernel memory: 1396K (f037f000 - f04dc000)
+Starting logging: OK
+Initializing random number generator... random: dd urandom read with 1 bits of entropy available
+done.
+Starting network...
+libphy: greth-mdio: probed
+udhcpc (v1.22.1) started
+Sending discover...
+Sending discover...
+Sending select for 10.42.0.93...
+Lease of 10.42.0.93 obtained, lease time 3600
+deleting routers
+route: SIOCDELRT: No such process
+adding dns 10.42.0.1
+Initializing time... ntpd: setting time to 2014-08-21 10:42:54.290625 (offset +1408614151.523540s)
+done
+Starting dropbear sshd: OK
+
+
+Nano3000 login: 
+
+
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.h b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.h
new file mode 100644
index 0000000..713c52e
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.h
@@ -0,0 +1,266 @@
+/*
+ * Automatically generated C config: don't edit
+ */
+#define AUTOCONF_INCLUDED
+/*
+ * Synthesis      
+ */
+#undef  CONFIG_SYN_INFERRED
+#undef  CONFIG_SYN_STRATIX
+#undef  CONFIG_SYN_STRATIXII
+#undef  CONFIG_SYN_STRATIXIII
+#undef  CONFIG_SYN_STRATIXIV
+#undef  CONFIG_SYN_CYCLONEIII
+#undef  CONFIG_SYN_ALTERA
+#undef  CONFIG_SYN_AXCEL
+#undef  CONFIG_SYN_AXDSP
+#undef  CONFIG_SYN_PROASIC
+#undef  CONFIG_SYN_PROASICPLUS
+#undef  CONFIG_SYN_PROASIC3
+#undef  CONFIG_SYN_PROASIC3E
+#undef  CONFIG_SYN_PROASIC3L
+#undef  CONFIG_SYN_IGLOO
+#undef  CONFIG_SYN_FUSION
+#undef  CONFIG_SYN_UT025CRH
+#undef  CONFIG_SYN_UT130HBD
+#undef  CONFIG_SYN_UT90NHBD
+#undef  CONFIG_SYN_ATC18
+#undef  CONFIG_SYN_ATC18RHA
+#undef  CONFIG_SYN_CMOS9SF
+#undef  CONFIG_SYN_CUSTOM1
+#undef  CONFIG_SYN_EASIC90
+#undef  CONFIG_SYN_EASIC45
+#undef  CONFIG_SYN_IHP25
+#undef  CONFIG_SYN_IHP25RH
+#undef  CONFIG_SYN_LATTICE
+#undef  CONFIG_SYN_ECLIPSE
+#undef  CONFIG_SYN_PEREGRINE
+#undef  CONFIG_SYN_RH_LIB18T
+#undef  CONFIG_SYN_RHUMC
+#undef  CONFIG_SYN_SAED32
+#undef  CONFIG_SYN_DARE
+#undef  CONFIG_SYN_SMIC13
+#undef  CONFIG_SYN_TM65GPLUS
+#undef  CONFIG_SYN_TSMC90
+#undef  CONFIG_SYN_UMC
+#undef  CONFIG_SYN_ARTIX7
+#undef  CONFIG_SYN_KINTEX7
+#define CONFIG_SYN_SPARTAN3 1
+#undef  CONFIG_SYN_SPARTAN3E
+#undef  CONFIG_SYN_SPARTAN6
+#undef  CONFIG_SYN_VIRTEXE
+#undef  CONFIG_SYN_VIRTEX2
+#undef  CONFIG_SYN_VIRTEX4
+#undef  CONFIG_SYN_VIRTEX5
+#undef  CONFIG_SYN_VIRTEX6
+#undef  CONFIG_SYN_VIRTEX7
+#undef  CONFIG_SYN_ZYNQ7000
+#undef  CONFIG_SYN_INFER_RAM
+#undef  CONFIG_SYN_INFER_PADS
+#undef  CONFIG_SYN_NO_ASYNC
+#undef  CONFIG_SYN_SCAN
+/*
+ * Clock generation
+ */
+#undef  CONFIG_CLK_INFERRED
+#undef  CONFIG_CLK_HCLKBUF
+#undef  CONFIG_CLK_UT130HBD
+#undef  CONFIG_CLK_ALTDLL
+#undef  CONFIG_CLK_LATDLL
+#undef  CONFIG_CLK_PRO3PLL
+#undef  CONFIG_CLK_PRO3EPLL
+#undef  CONFIG_CLK_PRO3LPLL
+#undef  CONFIG_CLK_FUSPLL
+#undef  CONFIG_CLK_LIB18T
+#undef  CONFIG_CLK_RHUMC
+#undef  CONFIG_CLK_DARE
+#undef  CONFIG_CLK_SAED32
+#undef  CONFIG_CLK_EASIC45
+#undef  CONFIG_CLK_CLKPLLE2
+#undef  CONFIG_CLK_CLKDLL
+#define CONFIG_CLK_DCM 1
+#define CONFIG_CLK_MUL (4)
+#define CONFIG_CLK_DIV (2)
+#undef  CONFIG_PCI_CLKDLL
+#undef  CONFIG_CLK_NOFB
+#undef  CONFIG_PCI_SYSCLK
+/*
+ * Processor            
+ */
+#define CONFIG_LEON3 1
+#define CONFIG_PROC_NUM (1)
+#undef  CONFIG_LEON3_MIN
+#undef  CONFIG_LEON3_GP
+#undef  CONFIG_LEON3_HP
+#define CONFIG_LEON3_CUSTOM 1
+/*
+ * Integer unit                                           
+ */
+#define CONFIG_IU_NWINDOWS (8)
+#define CONFIG_IU_V8MULDIV 1
+#undef  CONFIG_IU_MUL_LATENCY_2
+#undef  CONFIG_IU_MUL_LATENCY_4
+#define CONFIG_IU_MUL_LATENCY_5 1
+#undef  CONFIG_IU_MUL_MAC
+#define CONFIG_IU_MUL_INFERRED 1
+#undef  CONFIG_IU_MUL_MODGEN
+#undef  CONFIG_IU_MUL_TECHSPEC
+#undef  CONFIG_IU_MUL_DW
+#define CONFIG_IU_BP 1
+#undef  CONFIG_IU_SVT
+#undef  CONFIG_NOTAG
+#define CONFIG_IU_LDELAY (1)
+#define CONFIG_IU_WATCHPOINTS (2)
+#define CONFIG_PWD 1
+#define CONFIG_IU_RSTADDR 00000
+/*
+ * Floating-point unit
+ */
+#undef  CONFIG_FPU_ENABLE
+/*
+ * Cache system
+ */
+#define CONFIG_ICACHE_ENABLE 1
+#undef  CONFIG_ICACHE_ASSO1
+#define CONFIG_ICACHE_ASSO2 1
+#undef  CONFIG_ICACHE_ASSO3
+#undef  CONFIG_ICACHE_ASSO4
+#undef  CONFIG_ICACHE_SZ1
+#define CONFIG_ICACHE_SZ2 1
+#undef  CONFIG_ICACHE_SZ4
+#undef  CONFIG_ICACHE_SZ8
+#undef  CONFIG_ICACHE_SZ16
+#undef  CONFIG_ICACHE_SZ32
+#undef  CONFIG_ICACHE_SZ64
+#undef  CONFIG_ICACHE_SZ128
+#undef  CONFIG_ICACHE_SZ256
+#undef  CONFIG_ICACHE_LZ16
+#define CONFIG_ICACHE_LZ32 1
+#undef  CONFIG_ICACHE_ALGORND
+#undef  CONFIG_ICACHE_ALGODIR
+#undef  CONFIG_ICACHE_ALGOLRR
+#define CONFIG_ICACHE_ALGOLRU 1
+#undef  CONFIG_ICACHE_LOCK
+#define CONFIG_DCACHE_ENABLE 1
+#define CONFIG_DCACHE_ASSO1 1
+#undef  CONFIG_DCACHE_ASSO2
+#undef  CONFIG_DCACHE_ASSO3
+#undef  CONFIG_DCACHE_ASSO4
+#undef  CONFIG_DCACHE_SZ1
+#undef  CONFIG_DCACHE_SZ2
+#define CONFIG_DCACHE_SZ4 1
+#undef  CONFIG_DCACHE_SZ8
+#undef  CONFIG_DCACHE_SZ16
+#undef  CONFIG_DCACHE_SZ32
+#undef  CONFIG_DCACHE_SZ64
+#undef  CONFIG_DCACHE_SZ128
+#undef  CONFIG_DCACHE_SZ256
+#define CONFIG_DCACHE_LZ16 1
+#undef  CONFIG_DCACHE_LZ32
+#define CONFIG_DCACHE_SNOOP 1
+#define CONFIG_DCACHE_SNOOP_SEPTAG 1
+#define CONFIG_CACHE_FIXED 0
+/*
+ * MMU
+ */
+#define CONFIG_MMU_ENABLE 1
+#define CONFIG_MMU_COMBINED 1
+#undef  CONFIG_MMU_SPLIT
+#undef  CONFIG_MMU_REPARRAY
+#define CONFIG_MMU_REPINCREMENT 1
+#undef  CONFIG_MMU_I2
+#undef  CONFIG_MMU_I4
+#define CONFIG_MMU_I8 1
+#undef  CONFIG_MMU_I16
+#undef  CONFIG_MMU_I32
+#undef  CONFIG_MMU_I64
+#define CONFIG_MMU_PAGE_4K 1
+#undef  CONFIG_MMU_PAGE_8K
+#undef  CONFIG_MMU_PAGE_16K
+#undef  CONFIG_MMU_PAGE_32K
+#undef  CONFIG_MMU_PAGE_PROG
+/*
+ * Debug Support Unit        
+ */
+#define CONFIG_DSU_ENABLE 1
+#undef  CONFIG_DSU_ITRACE
+#undef  CONFIG_DSU_ATRACE
+/*
+ * Fault-tolerance  
+ */
+/*
+ * VHDL debug settings       
+ */
+#undef  CONFIG_IU_DISAS
+#define CONFIG_DEBUG_PC32 1
+/*
+ * AMBA configuration
+ */
+#define CONFIG_AHB_DEFMST (0)
+#define CONFIG_AHB_RROBIN 1
+#undef  CONFIG_AHB_SPLIT
+#undef  CONFIG_AHB_FPNPEN
+#define CONFIG_AHB_IOADDR FFF
+#define CONFIG_APB_HADDR 800
+#undef  CONFIG_AHB_MON
+#undef  CONFIG_AHB_DTRACE
+/*
+ * Debug Link           
+ */
+#undef  CONFIG_DSU_UART
+#define CONFIG_DSU_JTAG 1
+#undef  CONFIG_DSU_ETH
+/*
+ * Memory controllers                
+ */
+/*
+ * Leon2 memory controller        
+ */
+#define CONFIG_MCTRL_LEON2 1
+#undef  CONFIG_MCTRL_8BIT
+#define CONFIG_MCTRL_16BIT 1
+#undef  CONFIG_MCTRL_5CS
+#define CONFIG_MCTRL_SDRAM 1
+#undef  CONFIG_MCTRL_SDRAM_SEPBUS
+#undef  CONFIG_MCTRL_PAGE
+/*
+ * Peripherals             
+ */
+/*
+ * On-chip RAM/ROM                 
+ */
+#undef  CONFIG_AHBROM_ENABLE
+#undef  CONFIG_AHBRAM_ENABLE
+/*
+ * Ethernet             
+ */
+#define CONFIG_GRETH_ENABLE 1
+#undef  CONFIG_GRETH_GIGA
+#undef  CONFIG_GRETH_FIFO4
+#define CONFIG_GRETH_FIFO8 1
+#undef  CONFIG_GRETH_FIFO16
+#undef  CONFIG_GRETH_FIFO32
+#undef  CONFIG_GRETH_FIFO64
+/*
+ * UARTs, timers and irq control         
+ */
+#define CONFIG_UART1_ENABLE 1
+#undef  CONFIG_UA1_FIFO1
+#undef  CONFIG_UA1_FIFO2
+#undef  CONFIG_UA1_FIFO4
+#define CONFIG_UA1_FIFO8 1
+#undef  CONFIG_UA1_FIFO16
+#undef  CONFIG_UA1_FIFO32
+#define CONFIG_IRQ3_ENABLE 1
+#undef  CONFIG_IRQ3_SEC
+#define CONFIG_GPT_ENABLE 1
+#define CONFIG_GPT_NTIM (2)
+#define CONFIG_GPT_SW (8)
+#define CONFIG_GPT_TW (32)
+#define CONFIG_GPT_IRQ (8)
+#define CONFIG_GPT_SEPIRQ 1
+#undef  CONFIG_GPT_WDOGEN
+/*
+ * VHDL Debugging        
+ */
+#define CONFIG_DEBUG_UART 1
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.help b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.help
new file mode 100644
index 0000000..9c331c9
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.help
@@ -0,0 +1,987 @@
+
+
+Prompt for target technology
+CONFIG_SYN_INFERRED
+  Selects the target technology for memory and pads.
+  The following are available:
+
+  - Inferred: Generic FPGA or ASIC targets if your synthesis tool
+    is capable of inferring RAMs and pads automatically.
+
+  - Actel ProAsic/P/3, IGLOO and Axcelerator FPGAs
+  - Aeroflex UT25CRH Rad-Hard 0.25 um CMOS
+  - Altera: Most Altera FPGA families
+  - Altera-CycloneIII: Altera Cyclone-III/IV FPGA family
+  - Altera-Stratix: Altera Stratix FPGA family
+  - Altera-StratixII: Altera Stratix/Cyclone-II FPGA families
+  - Altera-StratixIII: Altera Stratix-III FPGA family
+  - Altera-StratixIV: Altera Stratix-III FPGA family
+  - ATC18: Atmel-Nantes 0.18 um rad-hard CMOS
+  - IHP25: IHP 0.25 um CMOS
+  - IHP25RH: IHP Rad-Hard 0.25 um CMOS
+  - Lattice : EC/ECP/XP FPGAs
+  - Quicklogic : Eclipse/E/II FPGAs
+  - UMC-0.18 : UMC 0.18 um CMOS with Virtual Silicon libraries
+  - Xilinx-Spartan/2/3/6: Xilinx Spartan/2/3/6 libraries
+  - Xilinx-Spartan3E: Xilinx Spartan3E libraries
+  - Xilinx-Virtex/E: Xilinx Virtex/E libraries
+  - Xilinx-Virtex2/4/5/6/7: Xilinx Virtex2/4/5/6/7 libraries
+
+  Note: Level of technology support depends on type of GRLIB
+  distribution. A technology may be present in this list while the
+  tech support files are missing from the GRLIB distribution.
+  Actel support is only available in commercial and FT distributions.
+
+Ram library
+CONFIG_MEM_VIRAGE
+  Select RAM generators for ASIC targets.
+
+Infer ram
+CONFIG_SYN_INFER_RAM
+  Say Y here if you want the synthesis tool to infer your
+  RAM automatically. Say N to directly instantiate technology-
+  specific RAM cells for the selected target technology package.
+
+Infer pads
+CONFIG_SYN_INFER_PADS
+  Say Y here if you want the synthesis tool to infer pads.
+  Say N to directly instantiate technology-specific pads from
+  the selected target technology package.
+
+No async reset
+CONFIG_SYN_NO_ASYNC
+  Say Y here if you disable asynchronous reset in some of the IP cores.
+  Might be necessary if the target library does not have cells with
+  asynchronous set/reset.
+
+Scan support
+CONFIG_SYN_SCAN
+  Say Y here to enable scan support in some cores. This will enable
+  the scan support generics where available and add logic to make
+  the design testable using full-scan.
+
+Use Virtex CLKDLL for clock synchronisation
+CONFIG_CLK_INFERRED
+  Certain target technologies include clock generators to scale or
+  phase-adjust the system and SDRAM clocks. This is currently supported
+  for Xilinx, Altera and Proasic3 FPGAs. Depending on technology, you
+  can select to use the Xilinx CKLDLL macro (Virtex, VirtexE, Spartan1/2),
+  the Xilinx DCM (Virtex-2, Spartan3, Virtex-4), the Xilinx PLLE2 (Virtex-7,
+  Kintex-7, Artix-4), the Altera ALTDLL (Stratix, Cyclone), or the 
+  Proasic3 PLL. Choose the 'inferred' option to skip a clock generator.
+
+Clock multiplier
+CONFIG_CLK_MUL
+  When using the Xilinx DCM, Xilinx PLLE2 or Altera ALTPLL, 
+  the system clock can be multiplied with a factor of 2 - 32, 
+  and divided by a factor of 1 - 32. This makes it possible to 
+  generate almost any desired processor frequency. When using 
+  the Xilinx CLKDLL generator, the resulting frequency scale f
+  actor (mul/div) must be one of 1/2, 1 or 2. On Proasic3, 
+  the factor can be 1 - 128. 
+  
+  WARNING: The resulting clock must be within the limits specified
+  by the target FPGA family.
+
+Clock divider
+CONFIG_CLK_DIV
+  When using the Xilinx DCM, Xilinx PLLE2 or Altera ALTPLL, 
+  the system clock can be multiplied with a factor of 2 - 32, 
+  and divided by a factor of 1 - 32. This makes it possible to 
+  generate almost any desired processor frequency. When using 
+  the Xilinx CLKDLL generator, the resulting frequency scale f
+  actor (mul/div) must be one of 1/2, 1 or 2. On Proasic3, 
+  the factor can be 1 - 128. 
+  
+  WARNING: The resulting clock must be within the limits specified
+  by the target FPGA family.
+
+Output clock divider
+CONFIG_OCLK_DIV
+  When using the Proasic3 PLL, the system clock is generated by three
+  parameters: input clock multiplication, input clock division and
+  output clock division. Only certain values of these parameters
+  are allowed, but unfortunately this is not documented by Actel.
+  To find the correct values, run the Libero Smartgen tool and
+  insert you desired input and output clock frequencies in the
+  Static PLL configurator. The mul/div factors can then be read
+  out from tool.
+
+Output clock divider, 2nd clock
+CONFIG_OCLKB_DIV
+  See help for 'Ouput division factor'. Set this to 0 to disable the
+  second clock output.
+
+Output clock divider, 3rd clock
+CONFIG_OCLKC_DIV
+  See help for 'Ouput division factor'. Set this to 0 to disable the
+  third clock output.
+
+System clock multiplier
+CONFIG_CLKDLL_1_2
+  The Xilinx CLKDLL can scale the input clock with a factor of 0.5, 1.0, 
+  or 2.0. Useful when the target board has an oscillator with a too high 
+  (or low) frequency for your design. The divided clock will be used as the
+  main clock for the whole processor (except PCI and ethernet clocks).
+
+System clock multiplier
+CONFIG_DCM_2_3
+  The Xilinx DCM and Altera ALTDLL can scale the input clock with a large
+  range of factors. Useful when the target board has an oscillator with a 
+  too high (or low) frequency for your design. The divided clock will
+  be used as the main clock for the whole processor (except PCI and 
+  ethernet clocks). NOTE: the resulting frequency must be at least
+  24 MHz or the DCM and ALTDLL might not work.
+
+Enable CLKDLL for PCI clock
+CONFIG_PCI_CLKDLL
+  Say Y here to re-synchronize the PCI clock using a 
+  Virtex BUFGDLL macro. Will improve PCI clock-to-output 
+  delays on the expense of input-setup requirements.
+
+Use PCI clock system clock
+CONFIG_PCI_SYSCLK
+  Say Y here to the PCI clock to generate the system clock.
+  The PCI clock can be scaled using the DCM or CLKDLL to 
+  generate a suitable processor clock.
+
+External SDRAM clock feedback
+CONFIG_CLK_NOFB
+  Say Y here to disable the external clock feedback to synchronize the
+  SDRAM clock. This option is necessary if your board or design does not
+  have an external clock feedback that is connected to the pllref input
+  of the clock generator.
+
+Number of processors
+CONFIG_PROC_NUM
+  The number of processor cores. The LEON3MP design can accomodate
+  up to 4 LEON3 processor cores. Use 1 unless you know what you are
+  doing ...
+
+Force values from example configuration
+CONFIG_LEON3_MIN
+  If you select any other value than Custom-configuration then the
+  configuration choices will be forced to settings corresponding to
+  the selected example configuration. The example configurations are
+  described in the document LEON/GRLIB Design and Configuration Guide
+  located at doc/guide.pdf.
+
+  Due to limitations in the configuration tool it is not possible to
+  update all choices without first saving the configuration and
+  restarting the tool. Perform the steps below to set the processor
+  configuration to example configuration values: 
+
+  1. Select example configuration (MIN, GP, HP). This will result
+     in most processor configuration menus being disabled.
+  2. Go back to the main menu and select Save and Exit
+  3. Start the xconfig tool again
+  4. Go into processor configuration and select Custom-configuration.
+     All configuration values can now be changed again and have been
+     initialized to example configuration that was selected earlier.
+  5. Make any changes and then quit xconfig via Save and Exit
+
+  Some options set from the example configuration may need to be changed.
+  One such setting is the FPU multiplier, if the FPU is enabled, where
+  timing is improved for several FPGA technologies by selecting the
+  technology specific multiplier and where the DW multiplier is generally
+  a good choice for ASIC.
+
+Number of SPARC register windows
+CONFIG_IU_NWINDOWS
+  The SPARC architecture (and LEON) allows 2 - 32 register windows.
+  However, any number except 8 will require that you modify and
+  recompile your run-time system or kernel. Unless you know what
+  you are doing, use 8.
+
+SPARC V8 multiply and divide instruction
+CONFIG_IU_V8MULDIV
+  If you say Y here, the SPARC V8 multiply and divide instructions
+  will be implemented. The instructions are: UMUL, UMULCC, SMUL,
+  SMULCC, UDIV, UDIVCC, SDIV, SDIVCC. In code containing frequent
+  integer multiplications and divisions, significant performance
+  increase can be achieved. Emulated floating-point operations will
+  also benefit from this option.
+
+  By default, the gcc compiler does not emit multiply or divide
+  instructions and your code must be compiled with -mv8 to see any
+  performance increase. On the other hand, code compiled with -mv8
+  will generate an illegal instruction trap when executed on processors
+  with this option disabled.
+
+  The divider consumes approximately 2 kgates, the multiplier 6 kgates.
+
+Multiplier latency
+CONFIG_IU_MUL_LATENCY_2
+  Implementation options for the integer multiplier.
+
+  Type        Implementation              issue-rate/latency
+  2-clocks    32x32 pipelined multiplier     1/2
+  4-clocks    16x16 standard multiplier      4/4
+  5-clocks    16x16 pipelined multiplier     4/5
+
+MAC operation
+CONFIG_IU_MUL_MAC
+  If you say Y here, the SPARC V8e UMAC/SMAC (multiply-accumulate)
+  instructions will be enabled. The instructions implement a
+  single-cycle 16x16->32 bits multiply with a 40-bits accumulator.
+  The details of these instructions can be found in the LEON manual,
+  This option is only available when 16x16 multiplier is used.
+
+Multiplier structure
+CONFIG_IU_MUL_INFERRED
+  Structure options for the integer multiplier. The multiplier
+  can be implemented with the following structures:
+
+  * Inferred by the synthesis tool
+  * Generated using Module Generators from NTNU
+  * Using technology specific netlists (TechSpec)
+  * Using Synopsys Designware (DW02_mult and DW_mult_pipe)
+
+Branch prediction
+CONFIG_IU_BP
+  Enabling branch prediction will improve performance with
+  up to 20%, depending on application. The timing and area
+  overhead are minor, so it is recommended to always enable
+  this option.
+
+Single vector trapping
+CONFIG_IU_SVT
+  Single-vector trapping is a SPARC V8e option to reduce code-size
+  in small applications. If enabled, the processor will jump to
+  the address of trap 0 (tt = 0x00) for all traps. No trap table
+  is then needed. The trap type is present in %psr.tt and must
+  be decoded by the O/S. Saves 4 Kbyte of code, but increases
+  trap and interrupt overhead. Currently, the only O/S supporting
+  this option is eCos. To enable SVT, the O/S must also set bit 13
+  in %asr17.
+
+Load latency
+CONFIG_IU_LDELAY
+  Defines the pipeline load delay (= pipeline cycles before the data
+  from a load instruction is available for the next instruction).
+  One cycle gives best performance, but might create a critical path
+  on targets with slow (data) cache memories. A 2-cycle delay can
+  improve timing but will reduce performance with about 5%.
+
+  Note that the load delay must be 1 to support the CASA instruction.
+
+Reset address
+CONFIG_IU_RSTADDR
+  By default, a SPARC processor starts execution at address 0.
+  With this option, any 4-kbyte aligned reset start address can be
+  choosen. Keep at 0 unless you really know what you are doing.
+
+No tagged arithmetic
+CONFIG_NOTAG
+  Say Y here to disable tagged arithmetic and the CASA instructions.
+  This will save some area in minimal systems that do not need
+  these features.
+
+Power-down
+CONFIG_PWD
+  Say Y here to enable the power-down feature of the processor.
+  Might reduce the maximum frequency slightly on FPGA targets.
+  For details on the power-down operation, see the LEON3 manual.
+
+Hardware watchpoints
+CONFIG_IU_WATCHPOINTS
+  The processor can have up to 4 hardware watchpoints, allowing to
+  create both data and instruction breakpoints at any memory location,
+  also in PROM. Each watchpoint will use approximately 500 gates.
+  Use 0 to disable the watchpoint function.
+
+Floating-point enable
+CONFIG_FPU_ENABLE
+  Say Y here to enable the floating-point interface for the MEIKO
+  or GRFPU. Note that no FPU's are provided with the GPL version
+  of GRLIB. Both the Gaisler GRFPU and the Meiko FPU are commercial
+  cores and must be obtained separately.
+
+FPU selection
+CONFIG_FPU_GRFPU
+  Select between Gaisler Research's GRFPU and GRFPU-lite FPUs or the Sun
+  Meiko FPU core. All cores  are fully IEEE-754 compatible and support
+  all SPARC FPU instructions.
+
+GRFPU Multiplier
+CONFIG_FPU_GRFPU_INFMUL
+  On FPGA targets choose inferred multiplier. For ASIC implementations
+  choose between Synopsys Design Ware (DW) multiplier or Module
+  Generator (ModGen) multiplier. The DW multiplier gives better results
+  (smaller area and better timing) but requires a DW license.
+  The ModGen multiplier is part of GRLIB and does not require a license.
+  The Technology Specific multiplier option selects a pre-designed
+  multiplier using technology specific macrocells when available, else
+  an inferred multiplier is used.
+
+Shared GRFPU
+CONFIG_FPU_GRFPU_SH
+  If enabled multiple CPU cores will share one GRFPU.
+
+GRFPC Configuration
+CONFIG_FPU_GRFPC0
+  Configures the GRFPU-LITE controller.
+
+  In simple configuration controller executes FP instructions
+  in parallel with  integer instructions. FP operands are fetched
+  in the register file stage and the result is written in the write
+  stage. This option uses least area resources.
+
+  Data forwarding configuration gives ~ 10 % higher FP performance than
+  the simple configuration by adding data forwarding between the pipeline
+  stages.
+
+  Non-blocking controller allows FP load and store instructions to
+  execute in parallel with FP instructions. The performance increase is
+  ~ 20 % for FP applications. This option uses most logic resources and
+  is suitable for ASIC implementations.
+
+Floating-point netlist
+CONFIG_FPU_NETLIST
+  Say Y here to use a VHDL netlist of the GRFPU-Lite. This is
+  only available in certain versions of grlib.
+
+Enable Instruction cache
+CONFIG_ICACHE_ENABLE
+  The instruction cache should always be enabled to allow
+  maximum performance. Some low-end system might want to
+  save area and disable the cache, but this will reduce
+  the performance with a factor of 2 - 3.
+
+Enable Data cache
+CONFIG_DCACHE_ENABLE
+  The data cache should always be enabled to allow
+  maximum performance. Some low-end system might want to
+  save area and disable the cache, but this will reduce
+  the performance with a factor of 2 at least.
+
+Instruction cache associativity
+CONFIG_ICACHE_ASSO1
+  The instruction cache can be implemented as a multi-way cache with
+  1 - 4 ways. Higher associativity usually increases the cache hit
+  rate and thereby the performance. The downside is higher power
+  consumption and increased gate-count for tag comparators.
+
+  Note that a 1-way cache is effectively a direct-mapped cache.
+
+Instruction cache way size
+CONFIG_ICACHE_SZ1
+  The size of each way in the instuction cache (kbytes). Valid values
+  are 1 - 64 in binary steps. Note that the full range is only supported
+  by the generic and virtex2 targets. Most target packages are limited
+  to 2 - 16 kbyte. Large way size gives higher performance but might
+  affect the maximum frequency (on ASIC targets). The total instruction
+  cache size is the number of way multiplied with the way size.
+
+Instruction cache line size
+CONFIG_ICACHE_LZ16
+  The instruction cache line size. Can be set to either 16 or 32
+  bytes per line. Instruction caches typically benefit from larger
+  line sizes, but on small caches it migh be better with 16 bytes/line
+  to limit eviction miss rate.
+
+Instruction cache replacement algorithm
+CONFIG_ICACHE_ALGORND
+  Cache replacement algorithm for caches with 2 - 4 ways. The 'random'
+  algorithm selects the way to evict randomly. The least-recently-replaced
+  (LRR) algorithm evicts the way least recently replaced. The least-
+  recently-used (LRU) algorithm evicts the way least recently accessed.
+  The random algorithm uses a simple 1- or 2-bit counter to select
+  the eviction way and has low area overhead. The LRR scheme uses one
+  extra bit in the tag ram and has therefore also low area overhead.
+  However, the LRR scheme can only be used with 2-way caches. The LRU
+  scheme has typically the best performance but also highest area overhead.
+  A 2-way LRU uses 1 flip-flop per line, a 3-way LRU uses 3 flip-flops
+  per line, and a 4-way LRU uses 5 flip-flops per line to store the access
+  history.
+
+Instruction cache locking
+CONFIG_ICACHE_LOCK
+  Say Y here to enable cache locking in the instruction cache.
+  Locking can be done on cache-line level, but will increase the
+  width of the tag ram with one bit. If you don't know what
+  locking is good for, it is safe to say N.
+
+Data cache associativity
+CONFIG_DCACHE_ASSO1
+  The data cache can be implemented as a multi-way cache with
+  1 - 4 ways. Higher associativity usually increases the cache hit
+  rate and thereby the performance. The downside is higher power
+  consumption and increased gate-count for tag comparators.
+
+  Note that a 1-way cache is effectively a direct-mapped cache.
+
+Data cache way size
+CONFIG_DCACHE_SZ1
+  The size of each way in the data cache (kbytes). Valid values are
+  1 - 64 in binary steps. Note that the full range is only supported
+  by the generic and virtex2 targets. Most target packages are limited
+  to 2 - 16 kbyte. A large cache gives higher performance but the
+  data cache is timing critical an a too large setting might affect
+  the maximum frequency (on ASIC targets). The total data cache size
+  is the number of way multiplied with the way size.
+
+Data cache line size
+CONFIG_DCACHE_LZ16
+  The data cache line size. Can be set to either 16 or 32 bytes per
+  line. A smaller line size gives better associativity and higher
+  cache hit rate, but requires a larger tag memory.
+
+Data cache replacement algorithm
+CONFIG_DCACHE_ALGORND
+  See the explanation for instruction cache replacement algorithm.
+
+Data cache locking
+CONFIG_DCACHE_LOCK
+  Say Y here to enable cache locking in the data cache.
+  Locking can be done on cache-line level, but will increase the
+  width of the tag ram with one bit. If you don't know what
+  locking is good for, it is safe to say N.
+
+Data cache snooping
+CONFIG_DCACHE_SNOOP
+  Say Y here to enable data cache snooping on the AHB bus.
+
+  With snooping, AHB writes by other masters to data that is in the
+  data cache will be automatically detected and the cache line will
+  be marked as invalid. This simplifies software design in systems
+  with DMA units or multiple processors accessing the same memory.
+  It is a requirement (together with separate snoop tags) to run
+  Linux on more than one CPU.
+
+  Depending on the separate snoop tags option, snooping will be
+  implemented using either dual-port (common tags) or two-port
+  RAMs (separate tags). A workaround if dual port RAMs are
+  not available for the target technology is to use separate
+  snoop tags even if it is not needed otherwise.
+
+Separate snoop tags
+CONFIG_DCACHE_SNOOP_SEPTAG
+  Enable a separate memory to store the data tags used for snooping.
+  This is necessary when snooping support is wanted in systems
+  with MMU, typically for SMP systems. In this case, the snoop
+  tags will contain the physical tag address while the normal
+  tags contain the virtual tag address.
+
+  When separate snoop tags are enabled, the tag RAMs will be implemented
+  using two-port RAMs instead of dual-port RAMs. A workaround if
+  dual port RAMs are not available for the target technology is
+  therefore to use separate snoop tags even if it is not needed.
+
+Fixed cacheability map
+CONFIG_CACHE_FIXED
+  If this variable is 0, the cacheable memory regions are defined
+  by the AHB plug&play information (default). To overriden the
+  plug&play settings, this variable can be set to indicate which
+  areas should be cached. The value is treated as a 16-bit hex value
+  with each bit defining if a 256 Mbyte segment should be cached or not.
+  The right-most (LSB) bit defines the cacheability of AHB address
+  0 - 256 MByte, while the left-most bit (MSB) defines AHB address
+  3840 - 4096 MByte. If the bit is set, the corresponding area is
+  cacheable. A value of 00F3 defines address 0 - 0x20000000 and
+  0x40000000 - 0x80000000 as cacheable.
+
+Local data ram
+CONFIG_DCACHE_LRAM
+  Say Y here to add a local ram to the data cache controller.
+  Accesses to the ram (load/store) will be performed at 0 waitstates
+  and store data will never be written back to the AHB bus.
+
+Size of local data ram
+CONFIG_DCACHE_LRAM_SZ1
+  Defines the size of the local data ram in Kbytes. Note that most
+  technology libraries do not support larger rams than 16 Kbyte.
+
+Start address of local data ram
+CONFIG_DCACHE_LRSTART
+  Defines the 8 MSB bits of start address of the local data ram.
+  By default set to 8f (start address = 0x8f000000), but any value
+  (except 0) is possible. Note that the local data ram 'shadows'
+  a 16 Mbyte block of the address space.
+
+MMU enable
+CONFIG_MMU_ENABLE
+  Say Y here to enable the Memory Management Unit.
+
+MMU split icache/dcache table lookaside buffer
+CONFIG_MMU_COMBINED
+  Select "combined" for a combined icache/dcache table lookaside buffer,
+  "split" for a split icache/dcache table lookaside buffer
+
+MMU tlb replacement scheme
+CONFIG_MMU_REPARRAY
+  Select "LRU" to use the "least recently used" algorithm for TLB
+  replacement, or "Increment" for a simple incremental replacement
+  scheme.
+
+Combined i/dcache tlb
+CONFIG_MMU_I2
+  Select the number of entries for the instruction TLB, or the
+  combined icache/dcache TLB if such is used.
+
+Split tlb, dcache
+CONFIG_MMU_D2
+  Select the number of entries for the dcache TLB.
+
+Fast writebuffer
+CONFIG_MMU_FASTWB
+  Only selectable if split tlb is enabled. In case fast writebuffer is
+  enabled the tlb hit will be made concurrent to the cache hit. This
+  leads to higher store performance, but increased power and area.
+
+MMU pagesize
+CONFIG_MMU_PAGE_4K
+  The deafult SPARC V8 SRMMU page size is 4 Kbyte. This limits the
+  cache way size to 4 Kbyte, and total data cache size to 16 Kbyte,
+  when the MMU is used. To increase the maximum data cache size,
+  the MMU pages size can be increased to up 32 Kbyte. This will
+  give a maximum data cache size of 128 Kbyte.
+
+  Note that an MMU page size different than 4 Kbyte will require
+  a special linux tool-chain if glibc is used. If you don't know
+  what you are doing, stay with 4 Kbyte ...
+
+DSU enable
+CONFIG_DSU_ENABLE
+  The debug support unit (DSU) allows non-intrusive debugging and tracing
+  of both executed instructions and AHB transfers. If you want to enable
+  the DSU, say Y here and select the configuration below.
+
+Trace buffer enable
+CONFIG_DSU_TRACEBUF
+  Say Y to enable the trace buffer. The buffer is not necessary for
+  debugging, only for tracing instructions and data transfers.
+
+Enable instruction tracing
+CONFIG_DSU_ITRACE
+  If you say Y here, an instruction trace buffer will be implemented
+  in each processor. The trace buffer will trace executed instructions
+  and their results, and place them in a circular buffer. The buffer
+  can be read out by any AHB master, and in particular by the debug
+  communication link.
+
+Size of trace buffer
+CONFIG_DSU_ITRACESZ1
+  Select the buffer size (in kbytes) for the instruction trace buffer.
+  Each line in the buffer needs 16 bytes. A 128-entry buffer will thus
+  need 2 kbyte.
+
+Enable AHB tracing
+CONFIG_DSU_ATRACE
+  If you say Y here, an AHB trace buffer will be implemented in the
+  debug support unit processor. The AHB buffer will trace all transfers
+  on the AHB bus and save them in a circular buffer. The trace buffer
+  can be read out by any AHB master, and in particular by the debug
+  communication link.
+
+Size of trace buffer
+CONFIG_DSU_ATRACESZ1
+  Select the buffer size (in kbytes) for the AHB trace buffer.
+  Each line in the buffer needs 16 bytes. A 128-entry buffer will thus
+  need 2 kbyte.
+
+
+LEON3FT enable
+CONFIG_LEON3FT_EN
+  Say Y here to use the fault-tolerant LEON3FT core instead of the
+  standard non-FT LEON3.
+
+IU Register file protection
+CONFIG_IUFT_NONE
+  Select the FT implementation in the LEON3FT integer unit
+  register file. The options include parity, parity with
+  sparing, 7-bit BCH and TMR.
+
+FPU Register file protection
+CONFIG_FPUFT_NONE
+  Say Y to enable SEU protection of the FPU register file.
+  The GRFPU-Lite will be protected with parity, PDMR and TMR.
+  The GRFPU can use PDMR or TMR only.
+
+Cache memory error injection
+CONFIG_RF_ERRINJ
+  Say Y here to enable error injection in to the IU/FPU regfiles.
+  Affects only simulation.
+
+Cache memory protection
+CONFIG_CACHE_FT_EN
+  Enable SEU error-correction in the cache memories.
+
+Cache memory error injection
+CONFIG_CACHE_ERRINJ
+  Say Y here to enable error injection in to the cache memories.
+  Affects only simulation.
+
+Leon3ft netlist
+CONFIG_LEON3_NETLIST
+  Say Y here to use a VHDL netlist of the LEON3FT. This is
+  only available in certain versions of grlib.
+
+IU assembly printing
+CONFIG_IU_DISAS
+  Enable printing of executed instructions to the console.
+
+IU assembly printing in netlist
+CONFIG_IU_DISAS_NET
+  Enable printing of executed instructions to the console also
+  when simulating a netlist. NOTE: with this option enabled, it
+  will not be possible to pass place&route.
+
+32-bit program counters
+CONFIG_DEBUG_PC32
+  Since the LSB 2 bits of the program counters always are zero, they are
+  normally not implemented. If you say Y here, the program counters will
+  be implemented with full 32 bits, making debugging of the VHDL model
+  much easier. Turn of this option for synthesis or you will be wasting
+  area.
+CONFIG_AHB_DEFMST
+  Sets the default AHB master (see AMBA 2.0 specification for definition).
+  Should not be set to a value larger than the number of AHB masters - 1.
+  For highest processor performance, leave it at 0.
+
+Default AHB master
+CONFIG_AHB_RROBIN
+  Say Y here to enable round-robin arbitration of the AHB bus. A N will
+  select fixed priority, with the master with the highest bus index having
+  the highest priority.
+
+Support AHB split-transactions
+CONFIG_AHB_SPLIT
+  Say Y here to enable AHB split-transaction support in the AHB arbiter.
+  Unless you actually have an AHB slave that can generate AHB split
+  responses, say N and save some gates.
+
+Enable full PnP decoding
+CONFIG_AHB_FPNPEN
+  Say Y here to enable full decoding of the PnP configuration records in
+  in the AHB arbiter. When disabled the user-defined registers in the
+  PnP configuration records are not mapped in the configuration area.
+
+IO area start address
+CONFIG_AHB_IOADDR
+  Selects the MSB adddress (HADDR[31:20]) of the AHB IO area, as defined 
+  in the plug&play extentions of the AMBA bus. Should be kept to FFF 
+  unless you really know what you are doing.
+
+APB bridge address          
+CONFIG_APB_HADDR
+  Selects the MSB adddress (HADDR[31:20]) of the APB bridge. Should be
+  kept at 800 for software compatibility. 
+
+AHB monitor                 
+CONFIG_AHB_MON
+  Say Y to enable the AHB bus monitor. The monitor will check for
+  illegal AHB transactions during simulation. It has no impact on
+  synthesis.
+
+Report AHB errors
+CONFIG_AHB_MONERR
+  Print out detected AHB violations on console.
+
+Report AHB warnings
+CONFIG_AHB_MONWAR
+  Print out detected AHB warnings on console.
+
+Write trace to console
+CONFIG_AHB_DTRACE
+  Say yes here to write a trace of all AHB transfers to the
+  simulator console. Has not impact on final netlist.
+
+DSU enable
+CONFIG_DSU_UART
+  Say Y to enable the AHB uart (serial-to-AHB). This is the most
+  commonly used debug communication link.
+
+JTAG Enable
+CONFIG_DSU_JTAG
+  Say Y to enable the JTAG debug link (JTAG-to-AHB). Debugging is done 
+  with GRMON through the boards JTAG chain at speeds of up to 800 kbits/s. 
+
+  The TAP controller can be implemented in custom macros on
+  Altera, Actel Proasic/3 and Xilinx devices. The commercial
+  GRLIB also includes a generic TAP controller in VHDL.
+
+  Supported JTAG cables are Xilinx Parallel Cable III and IV, 
+  Xilinx Platform cables (USB), and Altera parallel and USB cables,
+  Amontech JTAG key, various FTDI chip based USB/JTAG devices, and
+  Actel Flash Pro 3/4 cable.
+
+Ethernet DSU enable
+CONFIG_DSU_ETH
+  Say Y to enable the Ethernet Debug Communication Link (EDCL). The link
+  provides a DSU gateway between ethernet and the AHB bus. Debugging is
+  done at 10 or 100 Mbit/s, using the GRMON debug monitor. You must
+  enable the GRETH Ethernet MAC for this option to become active.
+
+Size of EDCL trace buffer
+CONFIG_DSU_ETHSZ1
+  Select the buffer size (in kbytes) for the EDCL. 1 or 2 kbyte is
+  usually enough, while a larger buffer will increase the transfer rate.
+  When operating at 100 Mbit, use a buffer size of at least 8 kbyte for
+  maximum throughput.
+
+MSB IP address
+CONFIG_DSU_IPMSB
+  Set the MSB 16 bits of the IP address of the EDCL.
+
+LSB IP address
+CONFIG_DSU_IPLSB
+  Set the LSB 16 bits of the IP address of the EDCL.
+
+MSB ethernet address
+CONFIG_DSU_ETHMSB
+  Set the MSB 24 bits of the ethernet address of the EDCL.
+
+LSB ethernet address
+CONFIG_DSU_ETHLSB
+  Set the LSB 24 bits of the ethernet address of the EDCL.
+
+Programmable MAC/IP address
+CONFIG_DSU_ETH_PROG
+  Say Y to make the LSB 4 bits of the EDCL MAC and IP address
+  configurable using the ethi.edcladdr inputs.
+Leon2 memory controller
+CONFIG_MCTRL_LEON2
+  Say Y here to enable the LEON2 memory controller. The controller
+  can access PROM, I/O, SRAM and SDRAM. The bus width for PROM
+  and SRAM is programmable to 8-, 16- or 32-bits.
+
+8-bit memory support
+CONFIG_MCTRL_8BIT
+  If you say Y here, the PROM/SRAM memory controller will support
+  8-bit mode, i.e. operate from 8-bit devices as if they were 32-bit.
+  Say N to save a few hundred gates.
+
+16-bit memory support
+CONFIG_MCTRL_16BIT
+  If you say Y here, the PROM/SRAM memory controller will support
+  16-bit mode, i.e. operate from 16-bit devices as if they were 32-bit.
+  Say N to save a few hundred gates.
+
+Write strobe feedback
+CONFIG_MCTRL_WFB
+  If you say Y here, the PROM/SRAM write strobes (WRITEN, WEN) will
+  be used to enable the data bus drivers during write cycles. This
+  will guarantee that the data is still valid on the rising edge of
+  the write strobe. If you say N, the write strobes and the data bus
+  drivers will be clocked on the rising edge, potentially creating
+  a hold time problem in external memory or I/O. However, in all
+  practical cases, there is enough capacitance in the data bus lines
+  to keep the value stable for a few (many?) nano-seconds after the
+  buffers have been disabled, making it safe to say N and remove a 
+  combinational path in the netlist that might be difficult to 
+  analyze.
+
+Write strobe feedback
+CONFIG_MCTRL_5CS
+  If you say Y here, the 5th (RAMSN[4]) SRAM chip select signal will
+  be enabled. If you don't intend to use it, say N and save some gates.
+
+SDRAM controller enable
+CONFIG_MCTRL_SDRAM
+  Say Y here to enabled the PC100/PC133 SDRAM controller. If you don't
+  intend to use SDRAM, say N and save about 1 kgates.
+
+SDRAM controller inverted clock
+CONFIG_MCTRL_SDRAM_INVCLK
+  If you say Y here, the SDRAM controller output signals will be delayed
+  with 1/2 clock in respect to the SDRAM clock. This will allow the used
+  of an SDRAM clock which in not strictly in phase with the internal 
+  clock. This option will limit the SDRAM frequency to 40 - 50 MHz.
+
+  On FPGA targets without SDRAM clock synchronizations through PLL/DLL, 
+  say Y. On ASIC targets, say N and tell your foundry to balance the 
+  SDRAM clock output.
+
+SDRAM separate address buses
+CONFIG_MCTRL_SDRAM_SEPBUS
+  Say Y here if your SDRAM is connected through separate address
+  and data buses (SA & SD). This is the case on the GR-CPCI-XC2V6000
+  board, but not on the GR-PCI-XC2V3000 or Avnet XCV1500E boards.
+
+64-bit data bus
+CONFIG_MCTRL_SDRAM_BUS64
+  Say Y here to enable 64-bit SDRAM data bus.
+
+Page burst enable
+CONFIG_MCTRL_PAGE
+  Say Y here to enable SDRAM page burst operation. This will implement
+  read operations using page bursts rather than 8-word bursts and save
+  about 500 gates (100 LUTs). Note that not all SDRAM supports page 
+  burst, so use this option with care.
+
+Programmable page burst enable
+CONFIG_MCTRL_PROGPAGE
+  Say Y here to enable programmable SDRAM page burst operation. This
+  will allow to dynamically enable/disable page burst by setting
+  bit 17 in MCFG2.
+
+On-chip rom
+CONFIG_AHBROM_ENABLE
+  Say Y here to add a block on on-chip rom to the AHB bus. The ram
+  provides 0-waitstates read access,  burst support, and 8-, 16- 
+  and 32-bit data size. The rom will be syntheised into block rams
+  on Xilinx and Altera FPGA devices, and into gates on ASIC 
+  technologies. GRLIB includes a utility to automatically create
+  the rom VHDL model (ahbrom.vhd) from an ELF file. Refer to the GRLIB
+  documentation for details.
+
+On-chip rom address
+CONFIG_AHBROM_START
+  Set the start address of AHB ROM (HADDR[31:20]). The ROM will occupy
+  a 1 Mbyte slot at the selected address. Default is 000, corresponding
+  to AHB address 0x00000000. When address 0x0 is selected, the rom area
+  of any other memory controller is set to 0x10000000 to avoid conflicts.
+
+Enable pipeline register for on-chip rom
+CONFIG_AHBROM_PIPE
+  Say Y here to add a data pipeline register to the on-chip rom.
+  This should be done when the rom is implemenented in (ASIC) gates,
+  or in logic cells on FPGAs. Do not use this option when the rom is
+  implemented in block rams. If enabled, the rom will operate with 
+  one waitstate.
+
+On-chip ram
+CONFIG_AHBRAM_ENABLE
+  Say Y here to add a block on on-chip ram to the AHB bus. The ram
+  provides 0-waitstates read access and 0/1 waitstates write access.
+  All AHB burst types are supported, as well as 8-, 16- and 32-bit
+  data size.
+
+On-chip ram size
+CONFIG_AHBRAM_SZ1
+  Set the size of the on-chip AHB ram. The ram is infered/instantiated
+  as four byte-wide ram slices to allow byte and half-word write
+  accesses. It is therefore essential that the target package can
+  infer byte-wide rams. This is currently supported on the generic,
+  virtex, virtex2, proasic and axellerator targets.
+
+On-chip ram address
+CONFIG_AHBRAM_START
+  Set the start address of AHB RAM (HADDR[31:20]). The RAM will occupy
+  a 1 Mbyte slot at the selected address. Default is A00, corresponding
+  to AHB address 0xA0000000.
+
+On-chip ram pipeline stage
+CONFIG_AHBRAM_PIPE
+  Set this option to add an extra pipeline stage to the read data of the 
+  on-chip RAM. This can improve timing, especially when the memory is 
+  large, at the cost of adding an additional cycle delay on read.
+Gaisler Ethernet MAC enable
+CONFIG_GRETH_ENABLE
+  Say Y here to enable the Gaisler Research Ethernet MAC . The MAC has 
+  one AHB master interface to read and write packets to memory, and one
+  APB slave interface for accessing the control registers. 
+
+Gaisler Ethernet 1G MAC enable
+CONFIG_GRETH_GIGA
+  Say Y here to enable the Gaisler Research 1000 Mbit Ethernet MAC . 
+  The 1G MAC is only available in the commercial version of GRLIB,
+  so do NOT enable it if you are using the GPL version.
+
+CONFIG_GRETH_FIFO4
+  Set the depth of the receive and transmit FIFOs in the MAC core.
+  The MAC core will perform AHB burst read/writes with half the
+  size of the FIFO depth.
+
+CONFIG_GRETH_FT
+  Enable fault-tolerance (parity with sparing) for internal RAM
+  in Ethernet core. Note that FT for EDCL buffer is enabled via
+  separate setting.
+
+CONFIG_GRETH_EDCLFT
+  Enable protection for EDCL buffer. This is typically not used as
+  the EDCL debug link is not used in harsh environments.
+UART1 enable
+CONFIG_UART1_ENABLE
+  Say Y here to enable UART1, or the console UART. This is needed to
+  get any print-out from LEON3 systems regardless of operating system.
+
+UART1 FIFO
+CONFIG_UA1_FIFO1
+  The UART has configurable transmitt and receive FIFO's, which can
+  be set to 1 - 32 bytes. Use 1 for minimum area, or 8 - 32 for
+  maximum throughput.
+
+
+LEON3 interrupt controller
+CONFIG_IRQ3_ENABLE
+  Say Y here to enable the LEON3 interrupt controller. This is needed
+  if you want to be able to receive interrupts. Operating systems like
+  Linux, RTEMS and eCos needs this option to be enabled. If you intend
+  to use the Bare-C run-time and not use interrupts, you could disable
+  the interrupt controller and save about 500 gates.
+
+LEON3 interrupt controller broadcast
+CONFIG_IRQ3_BROADCAST_ENABLE
+  If enabled the broadcast register is used to determine which
+  interrupt should be sent to all cpus instead of just the first
+  one that consumes it.
+
+Secondary interrupts
+CONFIG_IRQ3_SEC
+  The interrupt controller handles 15 interrupts by default (1 - 15).
+  These correspond to the 15 SPARC asyncronous traps (0x11 - 0x1F),
+  and AMBA interrupts 1 - 15. This option will enable 16 additional
+  (secondary) interrupts, corresponding to AMBA interrupts 16 - 31.
+  The secondary interrupts will be multiplexed onto one of the first
+  15 interrupts. The total number of handled interrupts can then
+  be up to 30 (14 primary and 16 secondary).
+
+Number of interrupts
+CONFIG_IRQ3_NSEC
+  Defines which of the first 15 interrupts should be used for the
+  secondary (16 - 31) interrupts. Interrupt 15 should be avoided
+  since it is not maskable by the processor.
+Timer module enable
+CONFIG_GPT_ENABLE
+  Say Y here to enable the Modular Timer Unit. The timer unit consists
+  of one common scaler and up to 7 independent timers. The timer unit
+  is needed for Linux, RTEMS, eCos and the Bare-C run-times.
+
+Timer module enable
+CONFIG_GPT_NTIM
+  Set the number of timers in the timer unit (1 - 7).
+
+Scaler width
+CONFIG_GPT_SW
+  Set the width if the common pre-scaler (2 - 16 bits). The scaler
+  is used to divide the system clock down to 1 MHz, so 8 bits should
+  be sufficient for most implementations (allows clocks up to 256 MHz).
+
+Timer width
+CONFIG_GPT_TW
+  Set the width if the timers (2 - 32 bits). 32 bits is recommended
+  for the Bare-C run-time, lower values (e.g. 16 bits) can work with
+  RTEMS and Linux.
+
+Timer Interrupt
+CONFIG_GPT_IRQ
+  Set the interrupt number for the first timer. Remaining timers will
+  have incrementing interrupts, unless the separate-interrupts option
+  below is disabled.
+
+Watchdog enable
+CONFIG_GPT_WDOGEN
+  Say Y here to enable the watchdog functionality in the timer unit.
+
+Watchdog time-out value
+CONFIG_GPT_WDOG
+  This value will be loaded in the watchdog timer at reset.
+
+UART debugging
+CONFIG_DEBUG_UART
+  During simulation, the output from the UARTs is printed on the
+  simulator console. Since the ratio between the system clock and
+  UART baud-rate is quite high, simulating UART output will be very
+  slow. If you say Y here, the UARTs will print a character as soon
+  as it is stored in the transmitter data register. The transmitter
+  ready flag will be permanently set, speeding up simulation. However,
+  the output on the UART tx line will be garbled.  Has not impact on
+  synthesis, but will cause the LEON test bench to fail.
+
+FPU register tracing
+CONFIG_DEBUG_FPURF
+  If you say Y here, all writes to the floating-point unit register file
+  will be printed on the simulator console.
+
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.in b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.in
new file mode 100644
index 0000000..7bec1f7
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.in
@@ -0,0 +1,65 @@
+#
+# LEON3 configuration written in linux configuration language
+#
+# Written by Jiri Gaisler, Gaisler Research
+#
+# Comments and bug reports to jiri@gaisler.com
+#
+#
+
+#define_bool CONFIG_MCTRL_RMW y
+
+mainmenu_name "LEON3MP Design Configuration"
+
+mainmenu_option next_comment
+  comment 'Synthesis      '
+  source lib/techmap/gencomp/tech.in
+endmenu
+
+mainmenu_option next_comment
+  comment 'Clock generation'
+  source lib/techmap/clocks/clkgen.in
+endmenu
+
+source lib/gaisler/leon3/leon3.in
+source lib/grlib/amba/amba.in
+
+mainmenu_option next_comment
+  comment 'Debug Link           '
+  source lib/gaisler/uart/dcom.in
+  source lib/gaisler/jtag/jtag.in
+  source lib/gaisler/net/edcl.in
+endmenu
+
+mainmenu_option next_comment
+comment 'Memory controllers                '  
+  source lib/esa/memoryctrl/mctrl.in
+endmenu
+
+mainmenu_option next_comment
+comment 'Peripherals             '
+
+  mainmenu_option next_comment
+  comment 'On-chip RAM/ROM                 '
+    source lib/gaisler/misc/ahbrom.in
+    source lib/gaisler/misc/ahbram.in
+  endmenu
+
+  mainmenu_option next_comment
+  comment 'Ethernet             '
+    source lib/gaisler/greth/greth.in
+  endmenu
+
+  mainmenu_option next_comment
+  comment 'UARTs, timers and irq control         '
+    source lib/gaisler/uart/uart1.in
+    source lib/gaisler/irqmp/irqmp.in
+    source lib/gaisler/misc/gptimer.in
+  endmenu
+
+endmenu
+
+mainmenu_option next_comment
+comment 'VHDL Debugging        '
+  source lib/grlib/util/debug.in
+endmenu
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd
new file mode 100644
index 0000000..6afa9ea
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd
@@ -0,0 +1,161 @@
+-----------------------------------------------------------------------------
+-- LEON3 Demonstration design test bench configuration
+------------------------------------------------------------------------------
+--  This file is a part of the GRLIB VHDL IP LIBRARY
+--  Copyright (C) 2003 - 2008, Gaisler Research
+--  Copyright (C) 2008 - 2014, Aeroflex Gaisler
+--  Copyright (C) 2014 Martin Wilson <mrw@trimetix.co.uk>
+--
+--  This program is free software; you can redistribute it and/or modify
+--  it under the terms of the GNU General Public License as published by
+--  the Free Software Foundation; either version 2 of the License, or
+--  (at your option) any later version.
+--
+--  This program is distributed in the hope that it will be useful,
+--  but WITHOUT ANY WARRANTY; without even the implied warranty of
+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+--  GNU General Public License for more details.
+--
+--  You should have received a copy of the GNU General Public License
+--  along with this program; if not, write to the Free Software
+--  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 
+------------------------------------------------------------------------------
+
+library techmap;
+use techmap.gencomp.all;
+package config is
+-- board options
+-- Technology and synthesis options
+  constant CFG_FABTECH : integer := spartan3;
+  constant CFG_MEMTECH : integer := spartan3;
+  constant CFG_PADTECH : integer := spartan3;
+  constant CFG_NOASYNC : integer := 0;
+  constant CFG_SCAN : integer := 0;
+-- Clock generator
+  constant CFG_CLKTECH : integer := spartan3;
+  constant CFG_CLKMUL : integer := (4);
+  constant CFG_CLKDIV : integer := (2);
+  constant CFG_OCLKDIV : integer := 1;
+  constant CFG_OCLKBDIV : integer := 0;
+  constant CFG_OCLKCDIV : integer := 0;
+  constant CFG_PCIDLL : integer := 0;
+  constant CFG_PCISYSCLK: integer := 0;
+  constant CFG_CLK_NOFB : integer := 0;
+-- LEON3 processor core
+  constant CFG_LEON3 : integer := 1;
+  constant CFG_NCPU : integer := (1);
+  constant CFG_NWIN : integer := (8);
+  constant CFG_V8 : integer := 2 + 4*0;
+  constant CFG_MAC : integer := 0;
+  constant CFG_BP : integer := 1;
+  constant CFG_SVT : integer := 0;
+  constant CFG_RSTADDR : integer := 16#00000#;
+  constant CFG_LDDEL : integer := (1);
+  constant CFG_NOTAG : integer := 0;
+  constant CFG_NWP : integer := (2);
+  constant CFG_PWD : integer := 1*2;
+  constant CFG_FPU : integer := 0 + 16*0 + 32*0;
+  constant CFG_GRFPUSH : integer := 0;
+  constant CFG_ICEN : integer := 1;
+  constant CFG_ISETS : integer := 2;
+  constant CFG_ISETSZ : integer := 2;
+  constant CFG_ILINE : integer := 8;
+  constant CFG_IREPL : integer := 0;
+  constant CFG_ILOCK : integer := 0;
+  constant CFG_ILRAMEN : integer := 0;
+  constant CFG_ILRAMADDR: integer := 16#8E#;
+  constant CFG_ILRAMSZ : integer := 1;
+  constant CFG_DCEN : integer := 1;
+  constant CFG_DSETS : integer := 1;
+  constant CFG_DSETSZ : integer := 4;
+  constant CFG_DLINE : integer := 4;
+  constant CFG_DREPL : integer := 0;
+  constant CFG_DLOCK : integer := 0;
+  constant CFG_DSNOOP : integer := 1*2 + 4*1;
+  constant CFG_DFIXED : integer := 16#0#;
+  constant CFG_DLRAMEN : integer := 0;
+  constant CFG_DLRAMADDR: integer := 16#8F#;
+  constant CFG_DLRAMSZ : integer := 1;
+  constant CFG_MMUEN : integer := 1;
+  constant CFG_ITLBNUM : integer := 8;
+  constant CFG_DTLBNUM : integer := 2;
+  constant CFG_TLB_TYPE : integer := 1 + 0*2;
+  constant CFG_TLB_REP : integer := 1;
+  constant CFG_MMU_PAGE : integer := 0;
+  constant CFG_DSU : integer := 1;
+  constant CFG_ITBSZ : integer := 0;
+  constant CFG_ATBSZ : integer := 0;
+  constant CFG_LEON3FT_EN : integer := 0;
+  constant CFG_IUFT_EN : integer := 0;
+  constant CFG_FPUFT_EN : integer := 0;
+  constant CFG_RF_ERRINJ : integer := 0;
+  constant CFG_CACHE_FT_EN : integer := 0;
+  constant CFG_CACHE_ERRINJ : integer := 0;
+  constant CFG_LEON3_NETLIST: integer := 0;
+  constant CFG_DISAS : integer := 0 + 0;
+  constant CFG_PCLOW : integer := 0;
+-- AMBA settings
+  constant CFG_DEFMST : integer := (0);
+  constant CFG_RROBIN : integer := 1;
+  constant CFG_SPLIT : integer := 0;
+  constant CFG_FPNPEN : integer := 0;
+  constant CFG_AHBIO : integer := 16#FFF#;
+  constant CFG_APBADDR : integer := 16#800#;
+  constant CFG_AHB_MON : integer := 0;
+  constant CFG_AHB_MONERR : integer := 0;
+  constant CFG_AHB_MONWAR : integer := 0;
+  constant CFG_AHB_DTRACE : integer := 0;
+-- DSU UART
+  constant CFG_AHB_UART : integer := 0;
+-- JTAG based DSU interface
+  constant CFG_AHB_JTAG : integer := 1;
+-- Ethernet DSU
+  constant CFG_DSU_ETH : integer := 0 + 0 + 0;
+  constant CFG_ETH_BUF : integer := 1;
+  constant CFG_ETH_IPM : integer := 16#C0A8#;
+  constant CFG_ETH_IPL : integer := 16#0033#;
+  constant CFG_ETH_ENM : integer := 16#020000#;
+  constant CFG_ETH_ENL : integer := 16#000009#;
+-- LEON2 memory controller
+  constant CFG_MCTRL_LEON2 : integer := 1;
+  constant CFG_MCTRL_RAM8BIT : integer := 0;
+  constant CFG_MCTRL_RAM16BIT : integer := 1;
+  constant CFG_MCTRL_5CS : integer := 0;
+  constant CFG_MCTRL_SDEN : integer := 1;
+  constant CFG_MCTRL_SEPBUS : integer := 0;
+  constant CFG_MCTRL_INVCLK : integer := 0;
+  constant CFG_MCTRL_SD64 : integer := 0;
+  constant CFG_MCTRL_PAGE : integer := 0 + 0;
+-- AHB ROM
+  constant CFG_AHBROMEN : integer := 0;
+  constant CFG_AHBROPIP : integer := 0;
+  constant CFG_AHBRODDR : integer := 16#000#;
+  constant CFG_ROMADDR : integer := 16#000#;
+  constant CFG_ROMMASK : integer := 16#E00# + 16#000#;
+-- AHB RAM
+  constant CFG_AHBRAMEN : integer := 0;
+  constant CFG_AHBRSZ : integer := 1;
+  constant CFG_AHBRADDR : integer := 16#A00#;
+  constant CFG_AHBRPIPE : integer := 0;
+-- Gaisler Ethernet core
+  constant CFG_GRETH : integer := 1;
+  constant CFG_GRETH1G : integer := 0;
+  constant CFG_ETH_FIFO : integer := 8;
+-- UART 1
+  constant CFG_UART1_ENABLE : integer := 1;
+  constant CFG_UART1_FIFO : integer := 8;
+-- LEON3 interrupt controller
+  constant CFG_IRQ3_ENABLE : integer := 1;
+  constant CFG_IRQ3_NSEC : integer := 0;
+-- Modular timer
+  constant CFG_GPT_ENABLE : integer := 1;
+  constant CFG_GPT_NTIM : integer := (2);
+  constant CFG_GPT_SW : integer := (8);
+  constant CFG_GPT_TW : integer := (32);
+  constant CFG_GPT_IRQ : integer := (8);
+  constant CFG_GPT_SEPIRQ : integer := 1;
+  constant CFG_GPT_WDOGEN : integer := 0;
+  constant CFG_GPT_WDOG : integer := 16#0#;
+-- GRLIB debugging
+  constant CFG_DUART : integer := 1;
+end;
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd.h b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd.h
new file mode 100644
index 0000000..4c267fc
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd.h
@@ -0,0 +1,150 @@
+-- Technology and synthesis options
+  constant CFG_FABTECH 	: integer := CONFIG_SYN_TECH;
+  constant CFG_MEMTECH  : integer := CFG_RAM_TECH;
+  constant CFG_PADTECH 	: integer := CFG_PAD_TECH;
+  constant CFG_NOASYNC 	: integer := CONFIG_SYN_NO_ASYNC;
+  constant CFG_SCAN 	: integer := CONFIG_SYN_SCAN;
+
+-- Clock generator
+  constant CFG_CLKTECH 	: integer := CFG_CLK_TECH;
+  constant CFG_CLKMUL   : integer := CONFIG_CLK_MUL;
+  constant CFG_CLKDIV   : integer := CONFIG_CLK_DIV;
+  constant CFG_OCLKDIV  : integer := CONFIG_OCLK_DIV;
+  constant CFG_OCLKBDIV : integer := CONFIG_OCLKB_DIV;
+  constant CFG_OCLKCDIV : integer := CONFIG_OCLKC_DIV;
+  constant CFG_PCIDLL   : integer := CONFIG_PCI_CLKDLL;
+  constant CFG_PCISYSCLK: integer := CONFIG_PCI_SYSCLK;
+  constant CFG_CLK_NOFB : integer := CONFIG_CLK_NOFB;
+
+-- LEON3 processor core
+  constant CFG_LEON3  	: integer := CONFIG_LEON3;
+  constant CFG_NCPU 	: integer := CONFIG_PROC_NUM;
+  constant CFG_NWIN 	: integer := CONFIG_IU_NWINDOWS;
+  constant CFG_V8   	: integer := CFG_IU_V8 + 4*CFG_IU_MUL_STRUCT;
+  constant CFG_MAC  	: integer := CONFIG_IU_MUL_MAC;
+  constant CFG_BP   	: integer := CONFIG_IU_BP;
+  constant CFG_SVT  	: integer := CONFIG_IU_SVT;
+  constant CFG_RSTADDR 	: integer := 16#CONFIG_IU_RSTADDR#;
+  constant CFG_LDDEL	: integer := CONFIG_IU_LDELAY;
+  constant CFG_NOTAG	: integer := CONFIG_NOTAG;
+  constant CFG_NWP  	: integer := CONFIG_IU_WATCHPOINTS;
+  constant CFG_PWD 	: integer := CONFIG_PWD*2;
+  constant CFG_FPU 	: integer := CONFIG_FPU + 16*CONFIG_FPU_NETLIST + 32*CONFIG_FPU_GRFPU_SHARED;
+  constant CFG_GRFPUSH  : integer := CONFIG_FPU_GRFPU_SHARED;
+  constant CFG_ICEN  	: integer := CONFIG_ICACHE_ENABLE;
+  constant CFG_ISETS	: integer := CFG_IU_ISETS;
+  constant CFG_ISETSZ	: integer := CFG_ICACHE_SZ;
+  constant CFG_ILINE 	: integer := CFG_ILINE_SZ;
+  constant CFG_IREPL 	: integer := CFG_ICACHE_ALGORND;
+  constant CFG_ILOCK 	: integer := CONFIG_ICACHE_LOCK;
+  constant CFG_ILRAMEN	: integer := CONFIG_ICACHE_LRAM;
+  constant CFG_ILRAMADDR: integer := 16#CONFIG_ICACHE_LRSTART#;
+  constant CFG_ILRAMSZ	: integer := CFG_ILRAM_SIZE;
+  constant CFG_DCEN  	: integer := CONFIG_DCACHE_ENABLE;
+  constant CFG_DSETS	: integer := CFG_IU_DSETS;
+  constant CFG_DSETSZ	: integer := CFG_DCACHE_SZ;
+  constant CFG_DLINE 	: integer := CFG_DLINE_SZ;
+  constant CFG_DREPL 	: integer := CFG_DCACHE_ALGORND;
+  constant CFG_DLOCK 	: integer := CONFIG_DCACHE_LOCK;
+  constant CFG_DSNOOP	: integer := CONFIG_DCACHE_SNOOP*2 + 4*CONFIG_DCACHE_SNOOP_SEPTAG;
+  constant CFG_DFIXED	: integer := 16#CONFIG_CACHE_FIXED#;
+  constant CFG_DLRAMEN	: integer := CONFIG_DCACHE_LRAM;
+  constant CFG_DLRAMADDR: integer := 16#CONFIG_DCACHE_LRSTART#;
+  constant CFG_DLRAMSZ	: integer := CFG_DLRAM_SIZE;
+  constant CFG_MMUEN    : integer := CONFIG_MMUEN;
+  constant CFG_ITLBNUM  : integer := CONFIG_ITLBNUM;
+  constant CFG_DTLBNUM  : integer := CONFIG_DTLBNUM;
+  constant CFG_TLB_TYPE : integer := CONFIG_TLB_TYPE + CFG_MMU_FASTWB*2;
+  constant CFG_TLB_REP  : integer := CONFIG_TLB_REP;
+  constant CFG_MMU_PAGE : integer := CONFIG_MMU_PAGE;
+  constant CFG_DSU   	: integer := CONFIG_DSU_ENABLE;
+  constant CFG_ITBSZ 	: integer := CFG_DSU_ITB;
+  constant CFG_ATBSZ 	: integer := CFG_DSU_ATB;
+  constant CFG_LEON3FT_EN   : integer := CONFIG_LEON3FT_EN;
+  constant CFG_IUFT_EN      : integer := CONFIG_IUFT_EN;
+  constant CFG_FPUFT_EN     : integer := CONFIG_FPUFT;
+  constant CFG_RF_ERRINJ    : integer := CONFIG_RF_ERRINJ;	
+  constant CFG_CACHE_FT_EN  : integer := CONFIG_CACHE_FT_EN;
+  constant CFG_CACHE_ERRINJ : integer := CONFIG_CACHE_ERRINJ;	
+  constant CFG_LEON3_NETLIST: integer := CONFIG_LEON3_NETLIST;	
+  constant CFG_DISAS    : integer := CONFIG_IU_DISAS + CONFIG_IU_DISAS_NET;
+  constant CFG_PCLOW    : integer := CFG_DEBUG_PC32;
+
+-- AMBA settings
+  constant CFG_DEFMST  	  : integer := CONFIG_AHB_DEFMST;
+  constant CFG_RROBIN  	  : integer := CONFIG_AHB_RROBIN;
+  constant CFG_SPLIT   	  : integer := CONFIG_AHB_SPLIT;
+  constant CFG_FPNPEN  	  : integer := CONFIG_AHB_FPNPEN;
+  constant CFG_AHBIO   	  : integer := 16#CONFIG_AHB_IOADDR#;
+  constant CFG_APBADDR 	  : integer := 16#CONFIG_APB_HADDR#;
+  constant CFG_AHB_MON 	  : integer := CONFIG_AHB_MON;
+  constant CFG_AHB_MONERR : integer := CONFIG_AHB_MONERR;
+  constant CFG_AHB_MONWAR : integer := CONFIG_AHB_MONWAR;
+  constant CFG_AHB_DTRACE : integer := CONFIG_AHB_DTRACE;
+
+-- DSU UART
+  constant CFG_AHB_UART	: integer := CONFIG_DSU_UART;
+
+-- JTAG based DSU interface
+  constant CFG_AHB_JTAG	: integer := CONFIG_DSU_JTAG;
+
+-- Ethernet DSU
+  constant CFG_DSU_ETH	: integer := CONFIG_DSU_ETH + CONFIG_DSU_ETH_PROG + CONFIG_DSU_ETH_DIS;
+  constant CFG_ETH_BUF 	: integer := CFG_DSU_ETHB;
+  constant CFG_ETH_IPM 	: integer := 16#CONFIG_DSU_IPMSB#;
+  constant CFG_ETH_IPL 	: integer := 16#CONFIG_DSU_IPLSB#;
+  constant CFG_ETH_ENM 	: integer := 16#CONFIG_DSU_ETHMSB#;
+  constant CFG_ETH_ENL 	: integer := 16#CONFIG_DSU_ETHLSB#;
+
+-- LEON2 memory controller
+  constant CFG_MCTRL_LEON2    : integer := CONFIG_MCTRL_LEON2;
+  constant CFG_MCTRL_RAM8BIT  : integer := CONFIG_MCTRL_8BIT;
+  constant CFG_MCTRL_RAM16BIT : integer := CONFIG_MCTRL_16BIT;
+  constant CFG_MCTRL_5CS      : integer := CONFIG_MCTRL_5CS;
+  constant CFG_MCTRL_SDEN     : integer := CONFIG_MCTRL_SDRAM;
+  constant CFG_MCTRL_SEPBUS   : integer := CONFIG_MCTRL_SDRAM_SEPBUS;
+  constant CFG_MCTRL_INVCLK   : integer := CONFIG_MCTRL_SDRAM_INVCLK;
+  constant CFG_MCTRL_SD64     : integer := CONFIG_MCTRL_SDRAM_BUS64;
+  constant CFG_MCTRL_PAGE     : integer := CONFIG_MCTRL_PAGE + CONFIG_MCTRL_PROGPAGE;
+
+-- AHB ROM
+  constant CFG_AHBROMEN	: integer := CONFIG_AHBROM_ENABLE;
+  constant CFG_AHBROPIP	: integer := CONFIG_AHBROM_PIPE;
+  constant CFG_AHBRODDR	: integer := 16#CONFIG_AHBROM_START#;
+  constant CFG_ROMADDR	: integer := 16#CONFIG_ROM_START#;
+  constant CFG_ROMMASK	: integer := 16#E00# + 16#CONFIG_ROM_START#;
+
+-- AHB RAM
+  constant CFG_AHBRAMEN	: integer := CONFIG_AHBRAM_ENABLE;
+  constant CFG_AHBRSZ	: integer := CFG_AHBRAMSZ;
+  constant CFG_AHBRADDR	: integer := 16#CONFIG_AHBRAM_START#;
+  constant CFG_AHBRPIPE : integer := CONFIG_AHBRAM_PIPE;
+-- Gaisler Ethernet core
+  constant CFG_GRETH   	    : integer := CONFIG_GRETH_ENABLE;
+  constant CFG_GRETH1G	    : integer := CONFIG_GRETH_GIGA;
+  constant CFG_ETH_FIFO     : integer := CFG_GRETH_FIFO;
+#ifdef CONFIG_LEON3FT_PRESENT
+  constant CFG_GRETH_FT     : integer := CONFIG_GRETH_FT;
+  constant CFG_GRETH_EDCLFT : integer := CONFIG_GRETH_EDCLFT;
+#endif
+-- UART 1
+  constant CFG_UART1_ENABLE : integer := CONFIG_UART1_ENABLE;
+  constant CFG_UART1_FIFO   : integer := CFG_UA1_FIFO;
+
+-- LEON3 interrupt controller
+  constant CFG_IRQ3_ENABLE  : integer := CONFIG_IRQ3_ENABLE;
+  constant CFG_IRQ3_NSEC    : integer := CONFIG_IRQ3_NSEC;
+
+-- Modular timer
+  constant CFG_GPT_ENABLE   : integer := CONFIG_GPT_ENABLE;
+  constant CFG_GPT_NTIM     : integer := CONFIG_GPT_NTIM;
+  constant CFG_GPT_SW       : integer := CONFIG_GPT_SW;
+  constant CFG_GPT_TW       : integer := CONFIG_GPT_TW;
+  constant CFG_GPT_IRQ      : integer := CONFIG_GPT_IRQ;
+  constant CFG_GPT_SEPIRQ   : integer := CONFIG_GPT_SEPIRQ;
+  constant CFG_GPT_WDOGEN   : integer := CONFIG_GPT_WDOGEN;
+  constant CFG_GPT_WDOG     : integer := 16#CONFIG_GPT_WDOG#;
+
+-- GRLIB debugging
+  constant CFG_DUART    : integer := CONFIG_DEBUG_UART;
+
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd.in b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd.in
new file mode 100644
index 0000000..be8645a
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/config.vhd.in
@@ -0,0 +1,18 @@
+#include "config.h"
+#include "tkconfig.h"
+-----------------------------------------------------------------------------
+--  LEON3 Demonstration design test bench configuration
+--  Copyright (C) 2009 Aeroflex Gaisler
+------------------------------------------------------------------------------
+
+
+library techmap;
+use techmap.gencomp.all;
+
+package config is
+
+-- board options
+
+#include "config.vhd.h"
+
+end;
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/defconfig b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/defconfig
new file mode 100644
index 0000000..8200f35
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/defconfig
@@ -0,0 +1,285 @@
+#
+# Automatically generated make config: don't edit
+#
+
+#
+# Synthesis      
+#
+# CONFIG_SYN_INFERRED is not set
+# CONFIG_SYN_STRATIX is not set
+# CONFIG_SYN_STRATIXII is not set
+# CONFIG_SYN_STRATIXIII is not set
+# CONFIG_SYN_STRATIXIV is not set
+# CONFIG_SYN_CYCLONEIII is not set
+# CONFIG_SYN_ALTERA is not set
+# CONFIG_SYN_AXCEL is not set
+# CONFIG_SYN_AXDSP is not set
+# CONFIG_SYN_PROASIC is not set
+# CONFIG_SYN_PROASICPLUS is not set
+# CONFIG_SYN_PROASIC3 is not set
+# CONFIG_SYN_PROASIC3E is not set
+# CONFIG_SYN_PROASIC3L is not set
+# CONFIG_SYN_IGLOO is not set
+# CONFIG_SYN_FUSION is not set
+# CONFIG_SYN_UT025CRH is not set
+# CONFIG_SYN_UT130HBD is not set
+# CONFIG_SYN_UT90NHBD is not set
+# CONFIG_SYN_ATC18 is not set
+# CONFIG_SYN_ATC18RHA is not set
+# CONFIG_SYN_CMOS9SF is not set
+# CONFIG_SYN_CUSTOM1 is not set
+# CONFIG_SYN_EASIC90 is not set
+# CONFIG_SYN_EASIC45 is not set
+# CONFIG_SYN_IHP25 is not set
+# CONFIG_SYN_IHP25RH is not set
+# CONFIG_SYN_LATTICE is not set
+# CONFIG_SYN_ECLIPSE is not set
+# CONFIG_SYN_PEREGRINE is not set
+# CONFIG_SYN_RH_LIB18T is not set
+# CONFIG_SYN_RHUMC is not set
+# CONFIG_SYN_SAED32 is not set
+# CONFIG_SYN_DARE is not set
+# CONFIG_SYN_SMIC13 is not set
+# CONFIG_SYN_TM65GPLUS is not set
+# CONFIG_SYN_TSMC90 is not set
+# CONFIG_SYN_UMC is not set
+# CONFIG_SYN_ARTIX7 is not set
+# CONFIG_SYN_KINTEX7 is not set
+CONFIG_SYN_SPARTAN3=y
+# CONFIG_SYN_SPARTAN3E is not set
+# CONFIG_SYN_SPARTAN6 is not set
+# CONFIG_SYN_VIRTEXE is not set
+# CONFIG_SYN_VIRTEX2 is not set
+# CONFIG_SYN_VIRTEX4 is not set
+# CONFIG_SYN_VIRTEX5 is not set
+# CONFIG_SYN_VIRTEX6 is not set
+# CONFIG_SYN_VIRTEX7 is not set
+# CONFIG_SYN_ZYNQ7000 is not set
+# CONFIG_SYN_INFER_RAM is not set
+# CONFIG_SYN_INFER_PADS is not set
+# CONFIG_SYN_NO_ASYNC is not set
+# CONFIG_SYN_SCAN is not set
+
+#
+# Clock generation
+#
+# CONFIG_CLK_INFERRED is not set
+# CONFIG_CLK_HCLKBUF is not set
+# CONFIG_CLK_UT130HBD is not set
+# CONFIG_CLK_ALTDLL is not set
+# CONFIG_CLK_LATDLL is not set
+# CONFIG_CLK_PRO3PLL is not set
+# CONFIG_CLK_PRO3EPLL is not set
+# CONFIG_CLK_PRO3LPLL is not set
+# CONFIG_CLK_FUSPLL is not set
+# CONFIG_CLK_LIB18T is not set
+# CONFIG_CLK_RHUMC is not set
+# CONFIG_CLK_DARE is not set
+# CONFIG_CLK_SAED32 is not set
+# CONFIG_CLK_EASIC45 is not set
+# CONFIG_CLK_CLKPLLE2 is not set
+# CONFIG_CLK_CLKDLL is not set
+CONFIG_CLK_DCM=y
+CONFIG_CLK_MUL=4
+CONFIG_CLK_DIV=2
+# CONFIG_PCI_CLKDLL is not set
+# CONFIG_CLK_NOFB is not set
+# CONFIG_PCI_SYSCLK is not set
+
+#
+# Processor            
+#
+CONFIG_LEON3=y
+CONFIG_PROC_NUM=1
+# CONFIG_LEON3_MIN is not set
+# CONFIG_LEON3_GP is not set
+# CONFIG_LEON3_HP is not set
+CONFIG_LEON3_CUSTOM=y
+
+#
+# Integer unit                                           
+#
+CONFIG_IU_NWINDOWS=8
+CONFIG_IU_V8MULDIV=y
+# CONFIG_IU_MUL_LATENCY_2 is not set
+# CONFIG_IU_MUL_LATENCY_4 is not set
+CONFIG_IU_MUL_LATENCY_5=y
+# CONFIG_IU_MUL_MAC is not set
+CONFIG_IU_MUL_INFERRED=y
+# CONFIG_IU_MUL_MODGEN is not set
+# CONFIG_IU_MUL_TECHSPEC is not set
+# CONFIG_IU_MUL_DW is not set
+CONFIG_IU_BP=y
+# CONFIG_IU_SVT is not set
+# CONFIG_NOTAG is not set
+CONFIG_IU_LDELAY=1
+CONFIG_IU_WATCHPOINTS=2
+CONFIG_PWD=y
+CONFIG_IU_RSTADDR=00000
+
+#
+# Floating-point unit
+#
+# CONFIG_FPU_ENABLE is not set
+
+#
+# Cache system
+#
+CONFIG_ICACHE_ENABLE=y
+# CONFIG_ICACHE_ASSO1 is not set
+CONFIG_ICACHE_ASSO2=y
+# CONFIG_ICACHE_ASSO3 is not set
+# CONFIG_ICACHE_ASSO4 is not set
+# CONFIG_ICACHE_SZ1 is not set
+CONFIG_ICACHE_SZ2=y
+# CONFIG_ICACHE_SZ4 is not set
+# CONFIG_ICACHE_SZ8 is not set
+# CONFIG_ICACHE_SZ16 is not set
+# CONFIG_ICACHE_SZ32 is not set
+# CONFIG_ICACHE_SZ64 is not set
+# CONFIG_ICACHE_SZ128 is not set
+# CONFIG_ICACHE_SZ256 is not set
+# CONFIG_ICACHE_LZ16 is not set
+CONFIG_ICACHE_LZ32=y
+# CONFIG_ICACHE_ALGORND is not set
+# CONFIG_ICACHE_ALGODIR is not set
+# CONFIG_ICACHE_ALGOLRR is not set
+CONFIG_ICACHE_ALGOLRU=y
+# CONFIG_ICACHE_LOCK is not set
+CONFIG_DCACHE_ENABLE=y
+CONFIG_DCACHE_ASSO1=y
+# CONFIG_DCACHE_ASSO2 is not set
+# CONFIG_DCACHE_ASSO3 is not set
+# CONFIG_DCACHE_ASSO4 is not set
+# CONFIG_DCACHE_SZ1 is not set
+# CONFIG_DCACHE_SZ2 is not set
+CONFIG_DCACHE_SZ4=y
+# CONFIG_DCACHE_SZ8 is not set
+# CONFIG_DCACHE_SZ16 is not set
+# CONFIG_DCACHE_SZ32 is not set
+# CONFIG_DCACHE_SZ64 is not set
+# CONFIG_DCACHE_SZ128 is not set
+# CONFIG_DCACHE_SZ256 is not set
+CONFIG_DCACHE_LZ16=y
+# CONFIG_DCACHE_LZ32 is not set
+CONFIG_DCACHE_SNOOP=y
+CONFIG_DCACHE_SNOOP_SEPTAG=y
+CONFIG_CACHE_FIXED=0
+
+#
+# MMU
+#
+CONFIG_MMU_ENABLE=y
+CONFIG_MMU_COMBINED=y
+# CONFIG_MMU_SPLIT is not set
+# CONFIG_MMU_REPARRAY is not set
+CONFIG_MMU_REPINCREMENT=y
+# CONFIG_MMU_I2 is not set
+# CONFIG_MMU_I4 is not set
+CONFIG_MMU_I8=y
+# CONFIG_MMU_I16 is not set
+# CONFIG_MMU_I32 is not set
+# CONFIG_MMU_I64 is not set
+CONFIG_MMU_PAGE_4K=y
+# CONFIG_MMU_PAGE_8K is not set
+# CONFIG_MMU_PAGE_16K is not set
+# CONFIG_MMU_PAGE_32K is not set
+# CONFIG_MMU_PAGE_PROG is not set
+
+#
+# Debug Support Unit        
+#
+CONFIG_DSU_ENABLE=y
+# CONFIG_DSU_ITRACE is not set
+# CONFIG_DSU_ATRACE is not set
+
+#
+# Fault-tolerance  
+#
+
+#
+# VHDL debug settings       
+#
+CONFIG_IU_DISAS=y
+# CONFIG_IU_DISAS_NET is not set
+CONFIG_DEBUG_PC32=y
+
+#
+# AMBA configuration
+#
+CONFIG_AHB_DEFMST=0
+CONFIG_AHB_RROBIN=y
+# CONFIG_AHB_SPLIT is not set
+# CONFIG_AHB_FPNPEN is not set
+CONFIG_AHB_IOADDR=FFF
+CONFIG_APB_HADDR=800
+# CONFIG_AHB_MON is not set
+# CONFIG_AHB_DTRACE is not set
+
+#
+# Debug Link           
+#
+# CONFIG_DSU_UART is not set
+CONFIG_DSU_JTAG=y
+# CONFIG_DSU_ETH is not set
+
+#
+# Memory controllers                
+#
+
+#
+# Leon2 memory controller        
+#
+CONFIG_MCTRL_LEON2=y
+# CONFIG_MCTRL_8BIT is not set
+CONFIG_MCTRL_16BIT=y
+# CONFIG_MCTRL_5CS is not set
+CONFIG_MCTRL_SDRAM=y
+# CONFIG_MCTRL_SDRAM_SEPBUS is not set
+# CONFIG_MCTRL_PAGE is not set
+
+#
+# Peripherals             
+#
+
+#
+# On-chip RAM/ROM                 
+#
+# CONFIG_AHBROM_ENABLE is not set
+# CONFIG_AHBRAM_ENABLE is not set
+
+#
+# Ethernet             
+#
+CONFIG_GRETH_ENABLE=y
+# CONFIG_GRETH_GIGA is not set
+# CONFIG_GRETH_FIFO4 is not set
+CONFIG_GRETH_FIFO8=y
+# CONFIG_GRETH_FIFO16 is not set
+# CONFIG_GRETH_FIFO32 is not set
+# CONFIG_GRETH_FIFO64 is not set
+
+#
+# UARTs, timers and irq control         
+#
+CONFIG_UART1_ENABLE=y
+# CONFIG_UA1_FIFO1 is not set
+# CONFIG_UA1_FIFO2 is not set
+# CONFIG_UA1_FIFO4 is not set
+CONFIG_UA1_FIFO8=y
+# CONFIG_UA1_FIFO16 is not set
+# CONFIG_UA1_FIFO32 is not set
+CONFIG_IRQ3_ENABLE=y
+# CONFIG_IRQ3_SEC is not set
+CONFIG_GPT_ENABLE=y
+CONFIG_GPT_NTIM=2
+CONFIG_GPT_SW=8
+CONFIG_GPT_TW=32
+CONFIG_GPT_IRQ=8
+CONFIG_GPT_SEPIRQ=y
+# CONFIG_GPT_WDOGEN is not set
+
+#
+# VHDL Debugging        
+#
+CONFIG_DEBUG_UART=y
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/lconfig.tk b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/lconfig.tk
new file mode 100644
index 0000000..48fadd9
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/lconfig.tk
@@ -0,0 +1,5991 @@
+# FILE: header.tk
+# This file is boilerplate TCL/TK function definitions for 'make xconfig'.
+#
+# CHANGES
+# =======
+#
+# 8 January 1999, Michael Elizabeth Chastain, <mec@shout.net>
+# - Remove unused do_cmd function (part of the 2.0 sound support).
+# - Arrange buttons in three columns for better screen fitting.
+# - Add CONSTANT_Y, CONSTANT_M, CONSTANT_N for commands like:
+#     dep_tristate 'foo' CONFIG_FOO m
+#
+# 23 January 1999, Michael Elizabeth Chastain, <mec@shout.net>
+# - Shut vfix the hell up.
+#
+# 24 January 1999, Michael Elizabeth Chastain, <mec@shout.net>
+# - Improve the exit message (Jeff Ronne).
+
+#
+# This is a handy replacement for ".widget cget" that requires neither tk4
+# nor additional source code uglification.
+#
+proc cget { w option } {
+	return "[lindex [$w configure $option] 4]"
+}
+
+#
+# Function to compensate for broken config.in scripts like the sound driver,
+# which make dependencies on variables that are never even conditionally
+# defined.
+#
+proc vfix { var } {
+	global $var
+	if [ catch {eval concat $$var} ] {
+		set $var 4
+	}
+}
+
+#
+# Constant values used by certain dep_tristate commands.
+#
+set CONSTANT_Y 1
+set CONSTANT_M 2
+set CONSTANT_N 0
+set CONSTANT_E 4
+
+#
+# Create a "reference" object to steal colors from.
+#
+button .ref
+
+#
+# On monochrome displays, -disabledforeground is blank by default; that's
+# bad.  Fill it with -foreground instead.
+#
+if { [cget .ref -disabledforeground] == "" } {
+	.ref configure -disabledforeground [cget .ref -foreground]
+}
+
+
+#
+# Define some macros we will need to parse the config.in file.
+#
+
+proc mainmenu_name { text } {
+	wm title . "$text"
+}
+
+proc menu_option { w menu_num text } {
+	global menus_per_column
+	global processed_top_level
+	set processed_top_level [expr $processed_top_level + 1]
+	if { $processed_top_level <= $menus_per_column } then {
+	    set myframe left
+	} elseif { $processed_top_level <= [expr 2 * $menus_per_column] } then {
+	    set myframe middle
+	} else {
+	    set myframe right
+	} 
+	button .f0.x$menu_num -anchor w -text "$text" \
+	    -command "$w .$w \"$text\""
+	pack .f0.x$menu_num -pady 0 -side top -fill x -in .f0.$myframe
+}
+
+proc load_configfile { w title func } {
+	catch {destroy $w}
+	toplevel $w -class Dialog
+	global loadfile
+	frame $w.x
+	label $w.bm -bitmap questhead
+	pack  $w.bm -pady 10 -side top -padx 10
+	label $w.x.l -text "Enter filename:" -relief raised
+	entry $w.x.x -width 35 -relief sunken -borderwidth 2 \
+		-textvariable loadfile
+	pack $w.x.l $w.x.x -anchor w -side left
+	pack $w.x -side top -pady 10
+	wm title $w "$title" 
+
+	set oldFocus [focus]
+	frame $w.f
+	button $w.f.back -text "OK" -width 20 \
+		-command "destroy $w; focus $oldFocus;$func .fileio"
+	button $w.f.canc -text "Cancel" \
+		-width 20 -command "destroy $w; focus $oldFocus"
+	pack $w.f.back $w.f.canc -side left -pady 10 -padx 45
+	pack $w.f -pady 10 -side bottom -padx 10 -anchor w
+	focus $w
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	wm geometry $w +$winx+$winy
+}
+
+bind all <Alt-q> {maybe_exit .maybe}
+
+proc maybe_exit { w } {
+	catch {destroy $w}
+	toplevel $w -class Dialog
+	label $w.bm -bitmap questhead
+	pack  $w.bm -pady 10 -side top -padx 10
+	message $w.m -width 400 -aspect 300 \
+		-text "Changes will be lost.  Are you sure?" -relief flat
+	pack  $w.m -pady 10 -side top -padx 10
+	wm title $w "Are you sure?" 
+
+	set oldFocus [focus]
+	frame $w.f
+	button $w.f.back -text "OK" -width 20 \
+		-command "exit 1"
+	button $w.f.canc -text "Cancel" \
+		-width 20 -command "destroy $w; focus $oldFocus"
+	pack $w.f.back $w.f.canc -side left -pady 10 -padx 45
+	pack $w.f -pady 10 -side bottom -padx 10 -anchor w
+  	bind $w <Return> "exit 1"
+    	bind $w <Escape> "destroy $w; focus $oldFocus"
+	focus $w
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	wm geometry $w +$winx+$winy
+}
+
+proc read_config_file { w } {
+	global loadfile
+	if { [string length $loadfile] != 0 && [file readable $loadfile] == 1 } then {
+		read_config $loadfile
+	} else {
+		catch {destroy $w}
+		toplevel $w -class Dialog
+		message $w.m -width 400 -aspect 300 -text \
+			"Unable to read file $loadfile" \
+			 -relief raised 
+		label $w.bm -bitmap error
+		pack $w.bm $w.m -pady 10 -side top -padx 10
+		wm title $w "Xconfig Internal Error" 
+
+		set oldFocus [focus]
+		frame $w.f
+		button $w.f.back -text "Bummer" \
+			-width 10 -command "destroy $w; focus $oldFocus"
+		pack $w.f.back -side bottom -pady 10 -anchor s
+		pack $w.f -pady 10 -side top -padx 10 -anchor s
+		focus $w
+		global winx; global winy
+		set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+		wm geometry $w +$winx+$winy
+	}
+}
+
+proc write_config_file  { w } {
+	global loadfile
+	if { [string length $loadfile] != 0 
+    		&& ([file writable $loadfile] == 1 || ([file exists $loadfile] == 0 && [file writable [file dirname $loadfile]] == 1)) } then {
+		writeconfig $loadfile .null
+	} else {
+		catch {destroy $w}
+		toplevel $w -class Dialog
+		message $w.m -width 400 -aspect 300 -text \
+			"Unable to write file $loadfile" \
+			 -relief raised 
+		label $w.bm -bitmap error
+		pack $w.bm $w.m -pady 10 -side top -padx 10
+		wm title $w "Xconfig Internal Error" 
+
+		set oldFocus [focus]
+		frame $w.f
+		button $w.f.back -text "OK" \
+			-width 10 -command "destroy $w; focus $oldFocus"
+		pack $w.f.back -side bottom -pady 10 -anchor s
+		pack $w.f -pady 10 -side top -padx 10 -anchor s
+		focus $w
+		global winx; global winy
+		set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+		wm geometry $w +$winx+$winy
+	}
+}
+
+proc read_config { filename } {
+	set file1 [open $filename r]
+	clear_choices
+	while { [gets $file1 line] >= 0} {
+		if [regexp {([0-9A-Za-z_]+)=([ynm])} $line foo var value] {
+			if { $value == "y" } then { set cmd "global $var; set $var 1" }
+			if { $value == "n" } then { set cmd "global $var; set $var 0" }
+			if { $value == "m" } then { set cmd "global $var; set $var 2" }
+			eval $cmd
+		}
+		if [regexp {# ([0-9A-Za-z_]+) is not set} $line foo var] {
+			set cmd "global $var; set $var 0"
+			eval $cmd
+		}
+		if [regexp {([0-9A-Za-z_]+)=([0-9A-Fa-f]+)} $line foo var value] {
+			set cmd "global $var; set $var $value"
+			eval $cmd
+		}
+		if [regexp {([0-9A-Za-z_]+)="([^"]*)"} $line foo var value] {
+			set cmd "global $var; set $var \"$value\""
+			eval $cmd
+		}
+	}
+	close $file1
+	update_choices
+	update_mainmenu
+}
+proc write_comment { file1 file2 text } {
+    	puts $file1 ""
+	puts $file1 "#"
+	puts $file1 "# $text"
+	puts $file1 "#"
+	puts $file2 "/*"
+	puts $file2 " * $text"
+	puts $file2 " */"
+}
+
+proc effective_dep { deplist } {
+	global CONFIG_MODULES
+	set depend 1
+	foreach i $deplist {
+		if {$i == 0} then {set depend 0}
+		if {$i == 2 && $depend == 1} then {set depend 2}
+	}
+	if {$depend == 2 && $CONFIG_MODULES == 0} then {set depend 0}
+	return $depend
+}
+
+proc sync_tristate { var dep } {
+	global CONFIG_MODULES
+	if {$dep == 0 && ($var == 1 || $var == 2)} then {
+		set var 0
+	} elseif {$dep == 2 && $var == 1} then {
+		set var 2
+	} elseif {$var == 2 && $CONFIG_MODULES == 0} then {
+		if {$dep == 1} then {set var 1} else {set var 0}
+	}
+	return $var
+}
+
+proc sync_bool { var dep modset } {
+	set var [sync_tristate $var $dep]
+	if {$dep == 2 && $var == 2} then {
+		set var $modset
+	}
+	return $var
+}
+
+proc write_tristate { file1 file2 varname variable deplist modset } {
+	set variable [sync_tristate $variable [effective_dep $deplist]]
+	if { $variable == 2 } \
+		then { set variable $modset }
+	if { $variable == 1 } \
+		then { puts $file1 "$varname=y"; \
+		       puts $file2 "#define $varname 1" } \
+	elseif { $variable == 2 } \
+		then { puts $file1 "$varname=m"; \
+		       puts $file2 "#undef  $varname"; \
+		       puts $file2 "#define ${varname}_MODULE 1" } \
+	elseif { $variable == 0 } \
+		then { puts $file1 "# $varname is not set"; \
+		       puts $file2 "#undef  $varname"} \
+	else { \
+	    puts stdout "ERROR - Attempting to write value for unconfigured variable ($varname)." \
+	}
+}
+
+proc write_int { file1 file2 varname variable dep } {
+	if { $dep == 0 } \
+		then { puts $file1 "# $varname is not set"; \
+		       puts $file2 "#undef  $varname"} \
+	else {
+		puts $file1 "$varname=$variable"; \
+		puts $file2 "#define $varname ($variable)"; \
+	}
+}
+
+proc write_hex { file1 file2 varname variable dep } {
+	if { $dep == 0 } \
+		then { puts $file1 "# $varname is not set"; \
+		       puts $file2 "#undef  $varname"} \
+	else {
+		puts $file1 "$varname=$variable"; \
+		puts -nonewline $file2 "#define $varname "; \
+		puts $file2 [exec echo $variable | sed s/^0\[xX\]//]; \
+	}
+}
+
+proc write_string { file1 file2 varname variable dep } {
+	if { $dep == 0 } \
+		then { puts $file1 "# $varname is not set"; \
+		       puts $file2 "#undef  $varname"} \
+	else {
+		puts $file1 "$varname=\"$variable\""; \
+		puts $file2 "#define $varname \"$variable\""; \
+	}
+}
+
+proc option_name {w mnum line text helpidx} {
+	button $w.x$line.l -text "$text" -relief groove -anchor w
+	$w.x$line.l configure -activefore [cget $w.x$line.l -fg] \
+				-activeback [cget $w.x$line.l -bg]
+	button $w.x$line.help -text "Help" -relief raised \
+		-command "dohelp .dohelp $helpidx .menu$mnum"
+	pack $w.x$line.help -side right -fill y
+	pack $w.x$line.l -side right -fill both -expand on
+}
+
+proc toggle_switch2 {w mnum line text variable} {
+	frame $w.x$line -relief sunken
+	radiobutton $w.x$line.y -text "y" -variable $variable -value 1 \
+		-relief groove -width 2 -command "update_active"
+#	radiobutton $w.x$line.m -text "-"  -variable $variable -value 2 \
+#		-relief groove -width 2 -command "update_active"
+	radiobutton $w.x$line.n -text "n"  -variable $variable -value 0 \
+		-relief groove -width 2 -command "update_active"
+
+	option_name $w $mnum $line $text $variable
+
+	pack $w.x$line.n $w.x$line.y -side right -fill y
+}
+
+proc toggle_switch3 {w mnum line text variable} {
+	frame $w.x$line -relief sunken
+	radiobutton $w.x$line.y -text "y" -variable $variable -value 1 \
+		-relief groove -width 2 -command "update_active"
+	radiobutton $w.x$line.m -text "m"  -variable $variable -value 2 \
+		-relief groove -width 2 -command "update_active"
+	radiobutton $w.x$line.n -text "n"  -variable $variable -value 0 \
+		-relief groove -width 2 -command "update_active"
+
+	option_name $w $mnum $line $text $variable
+
+	global CONFIG_MODULES
+	if {($CONFIG_MODULES == 0)} then {
+		$w.x$line.m configure -state disabled
+	}
+	pack $w.x$line.n $w.x$line.m $w.x$line.y -side right -fill y
+}
+
+proc bool {w mnum line text variable} {
+	toggle_switch2 $w $mnum $line $text $variable
+#	$w.x$line.m configure -state disabled
+	pack $w.x$line -anchor w -fill both -expand on
+}
+
+proc tristate {w mnum line text variable } {
+	toggle_switch3 $w $mnum $line $text $variable
+	pack $w.x$line -anchor w -fill both -expand on
+}
+
+proc dep_tristate {w mnum line text variable } {
+	tristate $w $mnum $line $text $variable
+}
+
+proc dep_bool {w mnum line text variable } {
+	bool $w $mnum $line $text $variable
+}
+
+proc int { w mnum line text variable } {
+	frame $w.x$line
+	entry $w.x$line.x -width 11 -relief sunken -borderwidth 2 \
+		-textvariable $variable
+	option_name $w $mnum $line $text $variable
+	pack $w.x$line.x -anchor w -side right -fill y
+	pack $w.x$line -anchor w -fill both -expand on
+}
+
+proc hex { w mnum line text variable } {
+	int $w $mnum $line $text $variable
+}
+
+proc istring { w mnum line text variable } {
+	frame $w.x$line
+	entry $w.x$line.x -width 18 -relief sunken -borderwidth 2 \
+		-textvariable $variable
+	option_name $w $mnum $line $text $variable
+	pack $w.x$line.x -anchor w -side right -fill y
+	pack $w.x$line -anchor w -fill both -expand on
+}
+
+proc minimenu { w mnum line text variable helpidx } {
+	frame $w.x$line
+	menubutton $w.x$line.x -textvariable $variable -menu \
+		$w.x$line.x.menu -relief raised \
+		-anchor w
+	option_name $w $mnum $line $text $helpidx
+	pack $w.x$line.x -anchor w -side right -fill y
+	pack $w.x$line -anchor w -fill both -expand on
+}
+
+proc menusplit {w m n} {
+	if { $n > 2 } then {
+		update idletasks
+		set menuoptsize [expr [$m yposition 2] - [$m yposition 1]]   
+		set maxsize [winfo screenheight $w]
+		set splitpoint [expr $maxsize * 4 / 5 / $menuoptsize - 1]
+		for {set i [expr $splitpoint + 1]} {$i <= $n} {incr i $splitpoint} {
+			$m entryconfigure $i -columnbreak 1
+		}
+	}
+}
+
+proc menutitle {text menu w} {
+	wm title $w "$text"
+}
+
+proc submenu { w mnum line text subnum } {
+	frame $w.x$line
+	button $w.x$line.l -text "" -width 9 -relief groove
+	$w.x$line.l configure -activefore [cget $w.x$line.l -fg] \
+		-activeback [cget $w.x$line.l -bg] -state disabled
+	button $w.x$line.m -text "$text" -relief raised -anchor w \
+		-command "catch {destroy .menu$subnum}; menu$subnum .menu$subnum \"$text\""
+	pack $w.x$line.l -side left -fill both
+	pack $w.x$line.m -anchor w -side right -fill both -expand on
+	pack $w.x$line -anchor w -fill both -expand on
+}
+
+proc comment {w mnum line text } {
+	frame $w.x$line
+	button $w.x$line.l -text "" -width 15 -relief groove
+	$w.x$line.l configure -activefore [cget $w.x$line.l -fg] \
+		-activeback [cget $w.x$line.l -bg] -state disabled
+	button $w.x$line.m -text "$text" -relief groove -anchor w
+	$w.x$line.m configure -activefore [cget $w.x$line.m -fg] \
+		-activeback [cget $w.x$line.m -bg]
+	pack $w.x$line.l -side left -fill both
+	pack $w.x$line.m -anchor w -side right -fill both -expand on
+	pack $w.x$line -anchor w -fill both -expand on
+}
+
+proc readhelp {tag fn}  {
+	set message ""
+	set b 0
+	if { [file readable $fn] == 1} then {
+		set fhandle [open $fn r]
+		while {[gets $fhandle inline] >= 0} {
+			if { $b == 0 } {
+				if { [regexp $tag $inline ] } {
+					set b 1
+					set message "$inline:\n"
+				}
+			} else {
+				if { [regexp {^[^ \t]} $inline]} {
+					break
+				}
+				set message "$message\n$inline"
+			}
+		}
+		close $fhandle
+	}
+	return $message
+}
+
+proc dohelp {w var parent}  {
+	catch {destroy $w}
+	toplevel $w -class Dialog
+
+	set filefound 0
+	set found 0
+	set lineno 0
+
+	if { [file readable config.help] == 1} then {
+		set filefound 1
+		# First escape sed regexp special characters in var:
+		set var [exec echo "$var" | sed s/\[\]\[\/.^$*\]/\\\\&/g]
+		# Now pick out right help text:
+		set message [readhelp $var config.help]
+		set found [expr [string length "$message"] > 0]
+	}
+
+	frame $w.f1
+	pack $w.f1 -fill both -expand on
+
+	# Do the OK button
+	#
+	set oldFocus [focus]
+	frame $w.f2
+	button $w.f2.ok -text "OK" \
+		-width 10 -command "destroy $w; catch {focus $oldFocus}"
+	pack $w.f2.ok -side bottom -pady 6 -anchor n
+	pack $w.f2 -side bottom -padx 10 -anchor s
+
+	scrollbar $w.f1.vscroll -command "$w.f1.canvas yview"
+	pack $w.f1.vscroll -side right -fill y
+
+	canvas $w.f1.canvas -relief flat -borderwidth 0 \
+		-yscrollcommand "$w.f1.vscroll set"
+	frame $w.f1.f
+	pack $w.f1.canvas -side right -fill y -expand on
+
+	if { $found == 0 } then {
+		if { $filefound == 0 } then {
+		message $w.f1.f.m -width 750 -aspect 300 -relief flat -text \
+			"No help available - unable to open file config.help."
+		} else {
+		message $w.f1.f.m -width 400 -aspect 300 -relief flat -text \
+			"No help available for $var"
+		}
+		label $w.f1.bm -bitmap error
+		wm title $w "RTFM"
+	} else {
+		text $w.f1.f.m -width 73 -relief flat -wrap word
+		$w.f1.f.m insert 0.0 $message
+		$w.f1.f.m conf -state disabled -height [$w.f1.f.m index end]
+
+		label $w.f1.bm -bitmap info
+		wm title $w "Configuration help" 
+	}
+	pack $w.f1.f.m -side left
+	pack $w.f1.bm $w.f1.f -side left -padx 10
+
+	focus $w
+	set winx [expr [winfo x $parent]+20]
+	set winy [expr [winfo y $parent]+20]
+	wm geometry $w +$winx+$winy
+	set sizok [expr [winfo reqheight $w.f2.ok] + 12]
+	set maxy [expr [winfo screenheight .] * 3 / 4]
+	set canvtotal [winfo reqheight $w.f1.f.m]
+	if [expr $sizok + $canvtotal < $maxy] {
+		set sizy $canvtotal
+	} else {
+		set sizy [expr $maxy - $sizok]
+	}
+	$w.f1.canvas configure -height $sizy -width [winfo reqwidth $w.f1.f.m] \
+		-scrollregion "0 0 [winfo reqwidth $w.f1.f.m] \
+			[winfo reqheight $w.f1.f.m]"
+	$w.f1.canvas create window 0 0 -anchor nw -window $w.f1.f
+	update idletasks
+
+	set maxy [winfo screenheight .]
+	if [expr $sizok + $canvtotal < $maxy] {
+		set sizy [expr $sizok + $canvtotal]
+	} else {
+		set sizy $maxy
+	}
+	wm maxsize $w [winfo width $w] $sizy
+}
+
+bind all <Alt-s> { catch {exec cp -f .config .config.old}; \
+		writeconfig .config config.h; wrapup .wrap }
+
+proc wrapup {w }  {
+	catch {destroy $w}
+	toplevel $w -class Dialog
+
+	global CONFIG_MODVERSIONS; vfix CONFIG_MODVERSIONS
+	message $w.m -width 460 -aspect 300 -relief raised -text \
+		"End of design configuration. "
+	label $w.bm -bitmap info
+	pack $w.bm $w.m -pady 10 -side top -padx 10
+	wm title $w "LEON build instructions" 
+
+	set oldFocus [focus]
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 10 -command "exit 2"
+	pack $w.f.back -side bottom -pady 10 -anchor s
+	pack $w.f -pady 10 -side top -padx 10 -anchor s
+	focus $w
+        bind $w <Return> "exit 2"
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	wm geometry $w +$winx+$winy
+
+}
+
+proc unregister_active {num} {
+	global active_menus
+	set index [lsearch -exact $active_menus $num]
+	if {$index != -1} then {set active_menus [lreplace $active_menus $index $index]}
+}
+
+proc update_active {} {
+	global active_menus total_menus
+	set max 0
+	if {[llength $active_menus] > 0} then {
+		set max [lindex $active_menus end]
+		update_define [toplevel_menu [lindex $active_menus 0]] $max 0
+	}
+	foreach i $active_menus {
+		if {[winfo exists .menu$i] == 0} then {
+			unregister_active $i
+		} else {
+			update_menu$i
+		}
+	}
+	update_define [expr $max + 1] $total_menus 1
+	update_mainmenu
+}
+
+proc configure_entry {w option items} {
+	foreach i $items {
+		$w.$i configure -state $option
+	}
+}
+
+proc validate_int {name val default} {
+	if {([exec echo $val | sed s/^-//g | tr -d \[:digit:\] ] != "")} then {
+		global $name; set $name $default
+	}
+}
+
+proc validate_hex {name val default} {
+	if {([exec echo $val | tr -d \[:xdigit:\] ] != "")} then {
+		global $name; set $name $default
+	}
+}
+
+proc update_define {first last allow_update} {
+	for {set i $first} {$i <= $last} {incr i} {
+		update_define_menu$i
+		if {$allow_update == 1} then update
+	}
+}
+
+#
+# Next set up the particulars for the top level menu, and define a few
+# buttons which we will stick down at the bottom.
+#
+
+frame .f0 
+frame .f0.left
+frame .f0.middle
+frame .f0.right
+
+set active_menus [list]
+set processed_top_level 0
+set ARCH sparc
+set menus_per_column 4
+set total_menus 19
+
+proc toplevel_menu {num} {
+	if {$num == 4} then {return 3}
+	if {$num == 5} then {return 3}
+	if {$num == 6} then {return 3}
+	if {$num == 7} then {return 3}
+	if {$num == 8} then {return 3}
+	if {$num == 9} then {return 3}
+	if {$num == 10} then {return 3}
+	if {$num == 14} then {return 13}
+	if {$num == 16} then {return 15}
+	if {$num == 17} then {return 15}
+	if {$num == 18} then {return 15}
+	return $num
+}
+
+mainmenu_name "LEON3MP Design Configuration"
+menu_option menu1 1 "Synthesis      "
+proc menu1 {w title} {
+	set oldFocus [focus]
+	catch {destroy $w; unregister_active 1}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 1]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Synthesis      "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Synthesis      " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 1; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 1; menu2 .menu2 \"$title\""
+	frame $w.f
+	button $w.f.back -text "Main Menu" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 1"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 1; menu0 .menu0 \"$title\""
+	$w.f.prev configure -state disabled
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	global tmpvar_0
+	minimenu $w.config.f 1 0 "Target technology                           " tmpvar_0 CONFIG_SYN_INFERRED
+	menu $w.config.f.x0.x.menu -tearoffcommand "menutitle \"Target technology                           \""
+	$w.config.f.x0.x.menu add radiobutton -label "Inferred" -variable tmpvar_0 -value "Inferred" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Altera-Stratix" -variable tmpvar_0 -value "Altera-Stratix" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Altera-StratixII" -variable tmpvar_0 -value "Altera-StratixII" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Altera-StratixIII" -variable tmpvar_0 -value "Altera-StratixIII" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Altera-StratixIV" -variable tmpvar_0 -value "Altera-StratixIV" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Altera-CycloneIII" -variable tmpvar_0 -value "Altera-CycloneIII" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Altera-Others" -variable tmpvar_0 -value "Altera-Others" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-Axcelerator" -variable tmpvar_0 -value "Actel-Axcelerator" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-Axcelerator-DSP" -variable tmpvar_0 -value "Actel-Axcelerator-DSP" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-Proasic" -variable tmpvar_0 -value "Actel-Proasic" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-ProasicPlus" -variable tmpvar_0 -value "Actel-ProasicPlus" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-Proasic3" -variable tmpvar_0 -value "Actel-Proasic3" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-Proasic3E" -variable tmpvar_0 -value "Actel-Proasic3E" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-Proasic3L" -variable tmpvar_0 -value "Actel-Proasic3L" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-IGLOO/p/L" -variable tmpvar_0 -value "Actel-IGLOO/p/L" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-Fusion" -variable tmpvar_0 -value "Actel-Fusion" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Aeroflex-UT025CRH" -variable tmpvar_0 -value "Aeroflex-UT025CRH" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Aeroflex-UT130HBD" -variable tmpvar_0 -value "Aeroflex-UT130HBD" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Aeroflex-UT90NHBD" -variable tmpvar_0 -value "Aeroflex-UT90NHBD" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Atmel-ATC18" -variable tmpvar_0 -value "Atmel-ATC18" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Atmel-ATC18RHA" -variable tmpvar_0 -value "Atmel-ATC18RHA" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "IBM-CMOS9SF" -variable tmpvar_0 -value "IBM-CMOS9SF" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Custom1" -variable tmpvar_0 -value "Custom1" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "eASIC90" -variable tmpvar_0 -value "eASIC90" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "eASIC45" -variable tmpvar_0 -value "eASIC45" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "IHP25" -variable tmpvar_0 -value "IHP25" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "IHP25RH" -variable tmpvar_0 -value "IHP25RH" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Lattice-EC/ECP/XP" -variable tmpvar_0 -value "Lattice-EC/ECP/XP" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Quicklogic-Eclipse" -variable tmpvar_0 -value "Quicklogic-Eclipse" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Peregrine" -variable tmpvar_0 -value "Peregrine" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "RH-LIB18T" -variable tmpvar_0 -value "RH-LIB18T" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "RH-UMC" -variable tmpvar_0 -value "RH-UMC" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "SAED32" -variable tmpvar_0 -value "SAED32" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "DARE" -variable tmpvar_0 -value "DARE" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "SMIC130" -variable tmpvar_0 -value "SMIC130" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "TM65Gplus" -variable tmpvar_0 -value "TM65Gplus" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "TSMC90" -variable tmpvar_0 -value "TSMC90" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "UMC180" -variable tmpvar_0 -value "UMC180" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Artix7" -variable tmpvar_0 -value "Xilinx-Artix7" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Kintex7" -variable tmpvar_0 -value "Xilinx-Kintex7" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Spartan3" -variable tmpvar_0 -value "Xilinx-Spartan3" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Spartan3E" -variable tmpvar_0 -value "Xilinx-Spartan3E" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Spartan6" -variable tmpvar_0 -value "Xilinx-Spartan6" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-VirtexE" -variable tmpvar_0 -value "Xilinx-VirtexE" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Virtex2" -variable tmpvar_0 -value "Xilinx-Virtex2" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Virtex4" -variable tmpvar_0 -value "Xilinx-Virtex4" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Virtex5" -variable tmpvar_0 -value "Xilinx-Virtex5" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Virtex6" -variable tmpvar_0 -value "Xilinx-Virtex6" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Virtex7" -variable tmpvar_0 -value "Xilinx-Virtex7" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-Zynq7000" -variable tmpvar_0 -value "Xilinx-Zynq7000" -command "update_active"
+	menusplit $w $w.config.f.x0.x.menu 50
+	global tmpvar_1
+	minimenu $w.config.f 1 1 "Memory Library                           " tmpvar_1 CONFIG_MEM_INFERRED
+	menu $w.config.f.x1.x.menu -tearoffcommand "menutitle \"Memory Library                           \""
+	$w.config.f.x1.x.menu add radiobutton -label "Inferred" -variable tmpvar_1 -value "Inferred" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "UMC18" -variable tmpvar_1 -value "UMC18" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "RH-UMC" -variable tmpvar_1 -value "RH-UMC" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "SAED32" -variable tmpvar_1 -value "SAED32" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "DARE" -variable tmpvar_1 -value "DARE" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "Artisan" -variable tmpvar_1 -value "Artisan" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "Custom1" -variable tmpvar_1 -value "Custom1" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "EASIC45" -variable tmpvar_1 -value "EASIC45" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "Virage" -variable tmpvar_1 -value "Virage" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "Virage-TSMC90" -variable tmpvar_1 -value "Virage-TSMC90" -command "update_active"
+	menusplit $w $w.config.f.x1.x.menu 10
+	bool $w.config.f 1 2 "Infer RAM" CONFIG_SYN_INFER_RAM
+	bool $w.config.f 1 3 "Infer pads" CONFIG_SYN_INFER_PADS
+	bool $w.config.f 1 4 "Disable asynchronous reset" CONFIG_SYN_NO_ASYNC
+	bool $w.config.f 1 5 "Enable scan support       " CONFIG_SYN_SCAN
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu1 {} {
+	global CONFIG_SYN_INFERRED
+	global CONFIG_SYN_CUSTOM1
+	global CONFIG_SYN_ATC18
+	global CONFIG_SYN_TSMC90
+	global CONFIG_SYN_EASIC45
+	global CONFIG_SYN_UMC
+	global CONFIG_SYN_RHUMC
+	global CONFIG_SYN_DARE
+	global CONFIG_SYN_SAED32
+	global CONFIG_SYN_ARTISAN
+	if {($CONFIG_SYN_INFERRED == 1 || $CONFIG_SYN_CUSTOM1 == 1 || $CONFIG_SYN_ATC18 == 1 || $CONFIG_SYN_TSMC90 == 1 || $CONFIG_SYN_EASIC45 == 1 || $CONFIG_SYN_UMC == 1 || $CONFIG_SYN_RHUMC == 1 || $CONFIG_SYN_DARE == 1 || $CONFIG_SYN_SAED32 == 1 || $CONFIG_SYN_ARTISAN == 1)} then {configure_entry .menu1.config.f.x1 normal {x l}} else {configure_entry .menu1.config.f.x1 disabled {x l}}
+	global CONFIG_SYN_INFER_RAM
+	if {($CONFIG_SYN_INFERRED != 1)} then {
+	configure_entry .menu1.config.f.x2 normal {n l y}} else {configure_entry .menu1.config.f.x2 disabled {y n l}}
+	global CONFIG_SYN_INFER_PADS
+	if {($CONFIG_SYN_INFERRED != 1)} then {
+	configure_entry .menu1.config.f.x3 normal {n l y}} else {configure_entry .menu1.config.f.x3 disabled {y n l}}
+}
+
+
+proc update_define_menu1 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global tmpvar_0
+	global CONFIG_SYN_INFERRED
+	if {$tmpvar_0 == "Inferred"} then {set CONFIG_SYN_INFERRED 1} else {set CONFIG_SYN_INFERRED 0}
+	global CONFIG_SYN_STRATIX
+	if {$tmpvar_0 == "Altera-Stratix"} then {set CONFIG_SYN_STRATIX 1} else {set CONFIG_SYN_STRATIX 0}
+	global CONFIG_SYN_STRATIXII
+	if {$tmpvar_0 == "Altera-StratixII"} then {set CONFIG_SYN_STRATIXII 1} else {set CONFIG_SYN_STRATIXII 0}
+	global CONFIG_SYN_STRATIXIII
+	if {$tmpvar_0 == "Altera-StratixIII"} then {set CONFIG_SYN_STRATIXIII 1} else {set CONFIG_SYN_STRATIXIII 0}
+	global CONFIG_SYN_STRATIXIV
+	if {$tmpvar_0 == "Altera-StratixIV"} then {set CONFIG_SYN_STRATIXIV 1} else {set CONFIG_SYN_STRATIXIV 0}
+	global CONFIG_SYN_CYCLONEIII
+	if {$tmpvar_0 == "Altera-CycloneIII"} then {set CONFIG_SYN_CYCLONEIII 1} else {set CONFIG_SYN_CYCLONEIII 0}
+	global CONFIG_SYN_ALTERA
+	if {$tmpvar_0 == "Altera-Others"} then {set CONFIG_SYN_ALTERA 1} else {set CONFIG_SYN_ALTERA 0}
+	global CONFIG_SYN_AXCEL
+	if {$tmpvar_0 == "Actel-Axcelerator"} then {set CONFIG_SYN_AXCEL 1} else {set CONFIG_SYN_AXCEL 0}
+	global CONFIG_SYN_AXDSP
+	if {$tmpvar_0 == "Actel-Axcelerator-DSP"} then {set CONFIG_SYN_AXDSP 1} else {set CONFIG_SYN_AXDSP 0}
+	global CONFIG_SYN_PROASIC
+	if {$tmpvar_0 == "Actel-Proasic"} then {set CONFIG_SYN_PROASIC 1} else {set CONFIG_SYN_PROASIC 0}
+	global CONFIG_SYN_PROASICPLUS
+	if {$tmpvar_0 == "Actel-ProasicPlus"} then {set CONFIG_SYN_PROASICPLUS 1} else {set CONFIG_SYN_PROASICPLUS 0}
+	global CONFIG_SYN_PROASIC3
+	if {$tmpvar_0 == "Actel-Proasic3"} then {set CONFIG_SYN_PROASIC3 1} else {set CONFIG_SYN_PROASIC3 0}
+	global CONFIG_SYN_PROASIC3E
+	if {$tmpvar_0 == "Actel-Proasic3E"} then {set CONFIG_SYN_PROASIC3E 1} else {set CONFIG_SYN_PROASIC3E 0}
+	global CONFIG_SYN_PROASIC3L
+	if {$tmpvar_0 == "Actel-Proasic3L"} then {set CONFIG_SYN_PROASIC3L 1} else {set CONFIG_SYN_PROASIC3L 0}
+	global CONFIG_SYN_IGLOO
+	if {$tmpvar_0 == "Actel-IGLOO/p/L"} then {set CONFIG_SYN_IGLOO 1} else {set CONFIG_SYN_IGLOO 0}
+	global CONFIG_SYN_FUSION
+	if {$tmpvar_0 == "Actel-Fusion"} then {set CONFIG_SYN_FUSION 1} else {set CONFIG_SYN_FUSION 0}
+	global CONFIG_SYN_UT025CRH
+	if {$tmpvar_0 == "Aeroflex-UT025CRH"} then {set CONFIG_SYN_UT025CRH 1} else {set CONFIG_SYN_UT025CRH 0}
+	global CONFIG_SYN_UT130HBD
+	if {$tmpvar_0 == "Aeroflex-UT130HBD"} then {set CONFIG_SYN_UT130HBD 1} else {set CONFIG_SYN_UT130HBD 0}
+	global CONFIG_SYN_UT90NHBD
+	if {$tmpvar_0 == "Aeroflex-UT90NHBD"} then {set CONFIG_SYN_UT90NHBD 1} else {set CONFIG_SYN_UT90NHBD 0}
+	global CONFIG_SYN_ATC18
+	if {$tmpvar_0 == "Atmel-ATC18"} then {set CONFIG_SYN_ATC18 1} else {set CONFIG_SYN_ATC18 0}
+	global CONFIG_SYN_ATC18RHA
+	if {$tmpvar_0 == "Atmel-ATC18RHA"} then {set CONFIG_SYN_ATC18RHA 1} else {set CONFIG_SYN_ATC18RHA 0}
+	global CONFIG_SYN_CMOS9SF
+	if {$tmpvar_0 == "IBM-CMOS9SF"} then {set CONFIG_SYN_CMOS9SF 1} else {set CONFIG_SYN_CMOS9SF 0}
+	global CONFIG_SYN_CUSTOM1
+	if {$tmpvar_0 == "Custom1"} then {set CONFIG_SYN_CUSTOM1 1} else {set CONFIG_SYN_CUSTOM1 0}
+	global CONFIG_SYN_EASIC90
+	if {$tmpvar_0 == "eASIC90"} then {set CONFIG_SYN_EASIC90 1} else {set CONFIG_SYN_EASIC90 0}
+	global CONFIG_SYN_EASIC45
+	if {$tmpvar_0 == "eASIC45"} then {set CONFIG_SYN_EASIC45 1} else {set CONFIG_SYN_EASIC45 0}
+	global CONFIG_SYN_IHP25
+	if {$tmpvar_0 == "IHP25"} then {set CONFIG_SYN_IHP25 1} else {set CONFIG_SYN_IHP25 0}
+	global CONFIG_SYN_IHP25RH
+	if {$tmpvar_0 == "IHP25RH"} then {set CONFIG_SYN_IHP25RH 1} else {set CONFIG_SYN_IHP25RH 0}
+	global CONFIG_SYN_LATTICE
+	if {$tmpvar_0 == "Lattice-EC/ECP/XP"} then {set CONFIG_SYN_LATTICE 1} else {set CONFIG_SYN_LATTICE 0}
+	global CONFIG_SYN_ECLIPSE
+	if {$tmpvar_0 == "Quicklogic-Eclipse"} then {set CONFIG_SYN_ECLIPSE 1} else {set CONFIG_SYN_ECLIPSE 0}
+	global CONFIG_SYN_PEREGRINE
+	if {$tmpvar_0 == "Peregrine"} then {set CONFIG_SYN_PEREGRINE 1} else {set CONFIG_SYN_PEREGRINE 0}
+	global CONFIG_SYN_RH_LIB18T
+	if {$tmpvar_0 == "RH-LIB18T"} then {set CONFIG_SYN_RH_LIB18T 1} else {set CONFIG_SYN_RH_LIB18T 0}
+	global CONFIG_SYN_RHUMC
+	if {$tmpvar_0 == "RH-UMC"} then {set CONFIG_SYN_RHUMC 1} else {set CONFIG_SYN_RHUMC 0}
+	global CONFIG_SYN_SAED32
+	if {$tmpvar_0 == "SAED32"} then {set CONFIG_SYN_SAED32 1} else {set CONFIG_SYN_SAED32 0}
+	global CONFIG_SYN_DARE
+	if {$tmpvar_0 == "DARE"} then {set CONFIG_SYN_DARE 1} else {set CONFIG_SYN_DARE 0}
+	global CONFIG_SYN_SMIC13
+	if {$tmpvar_0 == "SMIC130"} then {set CONFIG_SYN_SMIC13 1} else {set CONFIG_SYN_SMIC13 0}
+	global CONFIG_SYN_TM65GPLUS
+	if {$tmpvar_0 == "TM65Gplus"} then {set CONFIG_SYN_TM65GPLUS 1} else {set CONFIG_SYN_TM65GPLUS 0}
+	global CONFIG_SYN_TSMC90
+	if {$tmpvar_0 == "TSMC90"} then {set CONFIG_SYN_TSMC90 1} else {set CONFIG_SYN_TSMC90 0}
+	global CONFIG_SYN_UMC
+	if {$tmpvar_0 == "UMC180"} then {set CONFIG_SYN_UMC 1} else {set CONFIG_SYN_UMC 0}
+	global CONFIG_SYN_ARTIX7
+	if {$tmpvar_0 == "Xilinx-Artix7"} then {set CONFIG_SYN_ARTIX7 1} else {set CONFIG_SYN_ARTIX7 0}
+	global CONFIG_SYN_KINTEX7
+	if {$tmpvar_0 == "Xilinx-Kintex7"} then {set CONFIG_SYN_KINTEX7 1} else {set CONFIG_SYN_KINTEX7 0}
+	global CONFIG_SYN_SPARTAN3
+	if {$tmpvar_0 == "Xilinx-Spartan3"} then {set CONFIG_SYN_SPARTAN3 1} else {set CONFIG_SYN_SPARTAN3 0}
+	global CONFIG_SYN_SPARTAN3E
+	if {$tmpvar_0 == "Xilinx-Spartan3E"} then {set CONFIG_SYN_SPARTAN3E 1} else {set CONFIG_SYN_SPARTAN3E 0}
+	global CONFIG_SYN_SPARTAN6
+	if {$tmpvar_0 == "Xilinx-Spartan6"} then {set CONFIG_SYN_SPARTAN6 1} else {set CONFIG_SYN_SPARTAN6 0}
+	global CONFIG_SYN_VIRTEXE
+	if {$tmpvar_0 == "Xilinx-VirtexE"} then {set CONFIG_SYN_VIRTEXE 1} else {set CONFIG_SYN_VIRTEXE 0}
+	global CONFIG_SYN_VIRTEX2
+	if {$tmpvar_0 == "Xilinx-Virtex2"} then {set CONFIG_SYN_VIRTEX2 1} else {set CONFIG_SYN_VIRTEX2 0}
+	global CONFIG_SYN_VIRTEX4
+	if {$tmpvar_0 == "Xilinx-Virtex4"} then {set CONFIG_SYN_VIRTEX4 1} else {set CONFIG_SYN_VIRTEX4 0}
+	global CONFIG_SYN_VIRTEX5
+	if {$tmpvar_0 == "Xilinx-Virtex5"} then {set CONFIG_SYN_VIRTEX5 1} else {set CONFIG_SYN_VIRTEX5 0}
+	global CONFIG_SYN_VIRTEX6
+	if {$tmpvar_0 == "Xilinx-Virtex6"} then {set CONFIG_SYN_VIRTEX6 1} else {set CONFIG_SYN_VIRTEX6 0}
+	global CONFIG_SYN_VIRTEX7
+	if {$tmpvar_0 == "Xilinx-Virtex7"} then {set CONFIG_SYN_VIRTEX7 1} else {set CONFIG_SYN_VIRTEX7 0}
+	global CONFIG_SYN_ZYNQ7000
+	if {$tmpvar_0 == "Xilinx-Zynq7000"} then {set CONFIG_SYN_ZYNQ7000 1} else {set CONFIG_SYN_ZYNQ7000 0}
+	global tmpvar_1
+	global CONFIG_MEM_INFERRED
+	if {$tmpvar_1 == "Inferred"} then {set CONFIG_MEM_INFERRED 1} else {set CONFIG_MEM_INFERRED 0}
+	global CONFIG_MEM_UMC
+	if {$tmpvar_1 == "UMC18"} then {set CONFIG_MEM_UMC 1} else {set CONFIG_MEM_UMC 0}
+	global CONFIG_MEM_RHUMC
+	if {$tmpvar_1 == "RH-UMC"} then {set CONFIG_MEM_RHUMC 1} else {set CONFIG_MEM_RHUMC 0}
+	global CONFIG_MEM_SAED32
+	if {$tmpvar_1 == "SAED32"} then {set CONFIG_MEM_SAED32 1} else {set CONFIG_MEM_SAED32 0}
+	global CONFIG_MEM_DARE
+	if {$tmpvar_1 == "DARE"} then {set CONFIG_MEM_DARE 1} else {set CONFIG_MEM_DARE 0}
+	global CONFIG_MEM_ARTISAN
+	if {$tmpvar_1 == "Artisan"} then {set CONFIG_MEM_ARTISAN 1} else {set CONFIG_MEM_ARTISAN 0}
+	global CONFIG_MEM_CUSTOM1
+	if {$tmpvar_1 == "Custom1"} then {set CONFIG_MEM_CUSTOM1 1} else {set CONFIG_MEM_CUSTOM1 0}
+	global CONFIG_MEM_EASIC45
+	if {$tmpvar_1 == "EASIC45"} then {set CONFIG_MEM_EASIC45 1} else {set CONFIG_MEM_EASIC45 0}
+	global CONFIG_MEM_VIRAGE
+	if {$tmpvar_1 == "Virage"} then {set CONFIG_MEM_VIRAGE 1} else {set CONFIG_MEM_VIRAGE 0}
+	global CONFIG_MEM_VIRAGE90
+	if {$tmpvar_1 == "Virage-TSMC90"} then {set CONFIG_MEM_VIRAGE90 1} else {set CONFIG_MEM_VIRAGE90 0}
+	global CONFIG_SYN_INFER_RAM
+	if {($CONFIG_SYN_INFERRED != 1)} then {
+	set CONFIG_SYN_INFER_RAM [expr $CONFIG_SYN_INFER_RAM&15]} else {set CONFIG_SYN_INFER_RAM [expr $CONFIG_SYN_INFER_RAM|16]}
+	global CONFIG_SYN_INFER_PADS
+	if {($CONFIG_SYN_INFERRED != 1)} then {
+	set CONFIG_SYN_INFER_PADS [expr $CONFIG_SYN_INFER_PADS&15]} else {set CONFIG_SYN_INFER_PADS [expr $CONFIG_SYN_INFER_PADS|16]}
+}
+
+
+menu_option menu2 2 "Clock generation"
+proc menu2 {w title} {
+	set oldFocus [focus]
+	catch {destroy $w; unregister_active 2}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 2]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Clock generation"  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Clock generation" 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 2; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 2; menu3 .menu3 \"$title\""
+	frame $w.f
+	button $w.f.back -text "Main Menu" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 2"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 2; menu1 .menu1 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 2; menu1 .menu1 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	global tmpvar_2
+	minimenu $w.config.f 2 0 "Clock generator                     " tmpvar_2 CONFIG_CLK_INFERRED
+	menu $w.config.f.x0.x.menu -tearoffcommand "menutitle \"Clock generator                     \""
+	$w.config.f.x0.x.menu add radiobutton -label "Inferred" -variable tmpvar_2 -value "Inferred" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Actel-HCLKBUF" -variable tmpvar_2 -value "Actel-HCLKBUF" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Aeroflex-UT130HBD" -variable tmpvar_2 -value "Aeroflex-UT130HBD" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Altera-ALTPLL" -variable tmpvar_2 -value "Altera-ALTPLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Lattice-EXPLL" -variable tmpvar_2 -value "Lattice-EXPLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Proasic3-PLL" -variable tmpvar_2 -value "Proasic3-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Proasic3E-PLL" -variable tmpvar_2 -value "Proasic3E-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Proasic3L-PLL" -variable tmpvar_2 -value "Proasic3L-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Fusion-PLL" -variable tmpvar_2 -value "Fusion-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "RH-LIB18T-PLL" -variable tmpvar_2 -value "RH-LIB18T-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "RHUMC-PLL" -variable tmpvar_2 -value "RHUMC-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "DARE-PLL" -variable tmpvar_2 -value "DARE-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "SAED32-PLL" -variable tmpvar_2 -value "SAED32-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "EASIC45-PLL" -variable tmpvar_2 -value "EASIC45-PLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-PLLE2" -variable tmpvar_2 -value "Xilinx-PLLE2" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-CLKDLL" -variable tmpvar_2 -value "Xilinx-CLKDLL" -command "update_active"
+	$w.config.f.x0.x.menu add radiobutton -label "Xilinx-DCM" -variable tmpvar_2 -value "Xilinx-DCM" -command "update_active"
+	menusplit $w $w.config.f.x0.x.menu 17
+	int $w.config.f 2 1 "Clock multiplication factor (allowed values are tech dependent)" CONFIG_CLK_MUL
+	int $w.config.f 2 2 "Clock division factor (allowed values are tech dependent)" CONFIG_CLK_DIV
+	int $w.config.f 2 3 "Outout division factor (1 - 32)" CONFIG_OCLK_DIV
+	int $w.config.f 2 4 "Outout division factor, 2nd clk (0 - 32, see help)" CONFIG_OCLKB_DIV
+	int $w.config.f 2 5 "Outout division factor, 3rd clk (0 - 32, see help)" CONFIG_OCLKC_DIV
+	bool $w.config.f 2 6 "Enable Xilinx CLKDLL for PCI clock" CONFIG_PCI_CLKDLL
+	bool $w.config.f 2 7 "Disable external feedback for SDRAM clock" CONFIG_CLK_NOFB
+	bool $w.config.f 2 8 "Use PCI clock as system clock" CONFIG_PCI_SYSCLK
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu2 {} {
+	global CONFIG_CLK_DCM
+	global CONFIG_CLK_ALTDLL
+	global CONFIG_CLK_LATDLL
+	global CONFIG_CLK_PRO3PLL
+	global CONFIG_CLK_PRO3EPLL
+	global CONFIG_CLK_PRO3LPLL
+	global CONFIG_CLK_CLKDLL
+	global CONFIG_CLK_LIB18T
+	global CONFIG_CLK_FUSPLL
+	global CONFIG_CLK_CLKPLLE2
+	global CONFIG_CLK_MUL
+	if {($CONFIG_CLK_DCM == 1 || $CONFIG_CLK_ALTDLL == 1 || $CONFIG_CLK_LATDLL == 1 || $CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_LIB18T == 1 || $CONFIG_CLK_FUSPLL == 1 || $CONFIG_CLK_CLKPLLE2 == 1)} then {.menu2.config.f.x1.x configure -state normal -foreground [ cget .ref -foreground ]; .menu2.config.f.x1.l configure -state normal; } else {.menu2.config.f.x1.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu2.config.f.x1.l configure -state disabled}
+	global CONFIG_CLK_DIV
+	if {($CONFIG_CLK_DCM == 1 || $CONFIG_CLK_ALTDLL == 1 || $CONFIG_CLK_LATDLL == 1 || $CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_LIB18T == 1 || $CONFIG_CLK_FUSPLL == 1 || $CONFIG_CLK_CLKPLLE2 == 1)} then {.menu2.config.f.x2.x configure -state normal -foreground [ cget .ref -foreground ]; .menu2.config.f.x2.l configure -state normal; } else {.menu2.config.f.x2.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu2.config.f.x2.l configure -state disabled}
+	global CONFIG_OCLK_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {.menu2.config.f.x3.x configure -state normal -foreground [ cget .ref -foreground ]; .menu2.config.f.x3.l configure -state normal; } else {.menu2.config.f.x3.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu2.config.f.x3.l configure -state disabled}
+	global CONFIG_OCLKB_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {.menu2.config.f.x4.x configure -state normal -foreground [ cget .ref -foreground ]; .menu2.config.f.x4.l configure -state normal; } else {.menu2.config.f.x4.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu2.config.f.x4.l configure -state disabled}
+	global CONFIG_OCLKC_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {.menu2.config.f.x5.x configure -state normal -foreground [ cget .ref -foreground ]; .menu2.config.f.x5.l configure -state normal; } else {.menu2.config.f.x5.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu2.config.f.x5.l configure -state disabled}
+	global CONFIG_PCI_CLKDLL
+	if {($CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_DCM == 1)} then {
+	configure_entry .menu2.config.f.x6 normal {n l y}} else {configure_entry .menu2.config.f.x6 disabled {y n l}}
+	global CONFIG_CLK_NOFB
+	if {($CONFIG_CLK_DCM == 1)} then {
+	configure_entry .menu2.config.f.x7 normal {n l y}} else {configure_entry .menu2.config.f.x7 disabled {y n l}}
+	global CONFIG_PCI_ENABLE
+	global CONFIG_PCI_SYSCLK
+	if {($CONFIG_PCI_ENABLE != 1)} then {
+	configure_entry .menu2.config.f.x8 normal {n l y}} else {configure_entry .menu2.config.f.x8 disabled {y n l}}
+}
+
+
+proc update_define_menu2 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global tmpvar_2
+	global CONFIG_CLK_INFERRED
+	if {$tmpvar_2 == "Inferred"} then {set CONFIG_CLK_INFERRED 1} else {set CONFIG_CLK_INFERRED 0}
+	global CONFIG_CLK_HCLKBUF
+	if {$tmpvar_2 == "Actel-HCLKBUF"} then {set CONFIG_CLK_HCLKBUF 1} else {set CONFIG_CLK_HCLKBUF 0}
+	global CONFIG_CLK_UT130HBD
+	if {$tmpvar_2 == "Aeroflex-UT130HBD"} then {set CONFIG_CLK_UT130HBD 1} else {set CONFIG_CLK_UT130HBD 0}
+	global CONFIG_CLK_ALTDLL
+	if {$tmpvar_2 == "Altera-ALTPLL"} then {set CONFIG_CLK_ALTDLL 1} else {set CONFIG_CLK_ALTDLL 0}
+	global CONFIG_CLK_LATDLL
+	if {$tmpvar_2 == "Lattice-EXPLL"} then {set CONFIG_CLK_LATDLL 1} else {set CONFIG_CLK_LATDLL 0}
+	global CONFIG_CLK_PRO3PLL
+	if {$tmpvar_2 == "Proasic3-PLL"} then {set CONFIG_CLK_PRO3PLL 1} else {set CONFIG_CLK_PRO3PLL 0}
+	global CONFIG_CLK_PRO3EPLL
+	if {$tmpvar_2 == "Proasic3E-PLL"} then {set CONFIG_CLK_PRO3EPLL 1} else {set CONFIG_CLK_PRO3EPLL 0}
+	global CONFIG_CLK_PRO3LPLL
+	if {$tmpvar_2 == "Proasic3L-PLL"} then {set CONFIG_CLK_PRO3LPLL 1} else {set CONFIG_CLK_PRO3LPLL 0}
+	global CONFIG_CLK_FUSPLL
+	if {$tmpvar_2 == "Fusion-PLL"} then {set CONFIG_CLK_FUSPLL 1} else {set CONFIG_CLK_FUSPLL 0}
+	global CONFIG_CLK_LIB18T
+	if {$tmpvar_2 == "RH-LIB18T-PLL"} then {set CONFIG_CLK_LIB18T 1} else {set CONFIG_CLK_LIB18T 0}
+	global CONFIG_CLK_RHUMC
+	if {$tmpvar_2 == "RHUMC-PLL"} then {set CONFIG_CLK_RHUMC 1} else {set CONFIG_CLK_RHUMC 0}
+	global CONFIG_CLK_DARE
+	if {$tmpvar_2 == "DARE-PLL"} then {set CONFIG_CLK_DARE 1} else {set CONFIG_CLK_DARE 0}
+	global CONFIG_CLK_SAED32
+	if {$tmpvar_2 == "SAED32-PLL"} then {set CONFIG_CLK_SAED32 1} else {set CONFIG_CLK_SAED32 0}
+	global CONFIG_CLK_EASIC45
+	if {$tmpvar_2 == "EASIC45-PLL"} then {set CONFIG_CLK_EASIC45 1} else {set CONFIG_CLK_EASIC45 0}
+	global CONFIG_CLK_CLKPLLE2
+	if {$tmpvar_2 == "Xilinx-PLLE2"} then {set CONFIG_CLK_CLKPLLE2 1} else {set CONFIG_CLK_CLKPLLE2 0}
+	global CONFIG_CLK_CLKDLL
+	if {$tmpvar_2 == "Xilinx-CLKDLL"} then {set CONFIG_CLK_CLKDLL 1} else {set CONFIG_CLK_CLKDLL 0}
+	global CONFIG_CLK_DCM
+	if {$tmpvar_2 == "Xilinx-DCM"} then {set CONFIG_CLK_DCM 1} else {set CONFIG_CLK_DCM 0}
+	global CONFIG_CLK_MUL
+	if {($CONFIG_CLK_DCM == 1 || $CONFIG_CLK_ALTDLL == 1 || $CONFIG_CLK_LATDLL == 1 || $CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_LIB18T == 1 || $CONFIG_CLK_FUSPLL == 1 || $CONFIG_CLK_CLKPLLE2 == 1)} then {validate_int CONFIG_CLK_MUL "$CONFIG_CLK_MUL" 2}
+	global CONFIG_CLK_DIV
+	if {($CONFIG_CLK_DCM == 1 || $CONFIG_CLK_ALTDLL == 1 || $CONFIG_CLK_LATDLL == 1 || $CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_LIB18T == 1 || $CONFIG_CLK_FUSPLL == 1 || $CONFIG_CLK_CLKPLLE2 == 1)} then {validate_int CONFIG_CLK_DIV "$CONFIG_CLK_DIV" 2}
+	global CONFIG_OCLK_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {validate_int CONFIG_OCLK_DIV "$CONFIG_OCLK_DIV" 1}
+	global CONFIG_OCLKB_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {validate_int CONFIG_OCLKB_DIV "$CONFIG_OCLKB_DIV" 0}
+	global CONFIG_OCLKC_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {validate_int CONFIG_OCLKC_DIV "$CONFIG_OCLKC_DIV" 0}
+	global CONFIG_PCI_CLKDLL
+	if {($CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_DCM == 1)} then {
+	set CONFIG_PCI_CLKDLL [expr $CONFIG_PCI_CLKDLL&15]} else {set CONFIG_PCI_CLKDLL [expr $CONFIG_PCI_CLKDLL|16]}
+	global CONFIG_CLK_NOFB
+	if {($CONFIG_CLK_DCM == 1)} then {
+	set CONFIG_CLK_NOFB [expr $CONFIG_CLK_NOFB&15]} else {set CONFIG_CLK_NOFB [expr $CONFIG_CLK_NOFB|16]}
+	global CONFIG_PCI_ENABLE
+	global CONFIG_PCI_SYSCLK
+	if {($CONFIG_PCI_ENABLE != 1)} then {
+	set CONFIG_PCI_SYSCLK [expr $CONFIG_PCI_SYSCLK&15]} else {set CONFIG_PCI_SYSCLK [expr $CONFIG_PCI_SYSCLK|16]}
+}
+
+
+menu_option menu3 3 "Processor            "
+proc menu3 {w title} {
+	set oldFocus [focus]
+	catch {destroy $w; unregister_active 3}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 3]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Processor            "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Processor            " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 3; break"
+	set nextscript "catch {focus $oldFocus}; menu4 .menu4 \"$title\""
+	frame $w.f
+	button $w.f.back -text "Main Menu" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 3"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 3; menu2 .menu2 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 3; menu2 .menu2 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 3 0 "Enable LEON3 SPARC V8 Processor" CONFIG_LEON3
+	int $w.config.f 3 1 "Number of processors" CONFIG_PROC_NUM
+	global tmpvar_3
+	minimenu $w.config.f 3 2 "Force values from example configuration (see help)" tmpvar_3 CONFIG_LEON3_MIN
+	menu $w.config.f.x2.x.menu -tearoffcommand "menutitle \"Force values from example configuration (see help)\""
+	$w.config.f.x2.x.menu add radiobutton -label "Minimal-configuration" -variable tmpvar_3 -value "Minimal-configuration" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "General-purpose-cfg" -variable tmpvar_3 -value "General-purpose-cfg" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "High-Performance-cfg" -variable tmpvar_3 -value "High-Performance-cfg" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "Custom-configuration" -variable tmpvar_3 -value "Custom-configuration" -command "update_active"
+	menusplit $w $w.config.f.x2.x.menu 4
+	submenu $w.config.f 3 3 "Integer unit                                           " 4
+	submenu $w.config.f 3 4 "Floating-point unit" 5
+	submenu $w.config.f 3 5 "Cache system" 6
+	submenu $w.config.f 3 6 "MMU" 7
+	submenu $w.config.f 3 7 "Debug Support Unit        " 8
+	submenu $w.config.f 3 8 "Fault-tolerance  " 9
+	submenu $w.config.f 3 9 "VHDL debug settings       " 10
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu3 {} {
+	global CONFIG_LEON3
+	global CONFIG_PROC_NUM
+	if {($CONFIG_LEON3 == 1)} then {.menu3.config.f.x1.x configure -state normal -foreground [ cget .ref -foreground ]; .menu3.config.f.x1.l configure -state normal; } else {.menu3.config.f.x1.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu3.config.f.x1.l configure -state disabled}
+	if {($CONFIG_LEON3 == 1)} then {configure_entry .menu3.config.f.x2 normal {x l}} else {configure_entry .menu3.config.f.x2 disabled {x l}}
+	global CONFIG_LEON3_CUSTOM
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {configure_entry .menu3.config.f.x3 normal {m}} else {configure_entry .menu3.config.f.x3 disabled {m}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {configure_entry .menu3.config.f.x4 normal {m}} else {configure_entry .menu3.config.f.x4 disabled {m}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {configure_entry .menu3.config.f.x5 normal {m}} else {configure_entry .menu3.config.f.x5 disabled {m}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {configure_entry .menu3.config.f.x6 normal {m}} else {configure_entry .menu3.config.f.x6 disabled {m}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {configure_entry .menu3.config.f.x7 normal {m}} else {configure_entry .menu3.config.f.x7 disabled {m}}
+	if {($CONFIG_LEON3 == 1)} then {configure_entry .menu3.config.f.x8 normal {m}} else {configure_entry .menu3.config.f.x8 disabled {m}}
+	if {($CONFIG_LEON3 == 1)} then {configure_entry .menu3.config.f.x9 normal {m}} else {configure_entry .menu3.config.f.x9 disabled {m}}
+}
+
+
+proc update_define_menu3 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_IU_NWINDOWS
+	global CONFIG_IU_V8MULDIV
+	global CONFIG_IU_BP
+	global CONFIG_IU_SVT
+	global CONFIG_NOTAG
+	global CONFIG_IU_LDELAY
+	global CONFIG_IU_WATCHPOINTS
+	global CONFIG_PWD
+	global CONFIG_IU_RSTADDR
+	global CONFIG_FPU_ENABLE
+	global CONFIG_ICACHE_ENABLE
+	global CONFIG_ICACHE_ASSO1
+	global CONFIG_ICACHE_SZ2
+	global CONFIG_ICACHE_LZ16
+	global CONFIG_ICACHE_ALGORND
+	global CONFIG_ICACHE_LOCK
+	global CONFIG_DCACHE_ENABLE
+	global CONFIG_DCACHE_ASSO1
+	global CONFIG_DCACHE_SZ2
+	global CONFIG_DCACHE_LZ16
+	global CONFIG_DCACHE_ALGORND
+	global CONFIG_DCACHE_LOCK
+	global CONFIG_DCACHE_SNOOP
+	global CONFIG_CACHE_FIXED
+	global CONFIG_MMU_ENABLE
+	global CONFIG_DSU_ENABLE
+	global CONFIG_IU_MUL_LATENCY_5
+	global CONFIG_IU_MUL_MAC
+	global CONFIG_ICACHE_ASSO2
+	global CONFIG_ICACHE_SZ4
+	global CONFIG_ICACHE_LRAM
+	global CONFIG_DCACHE_ASSO2
+	global CONFIG_DCACHE_SZ4
+	global CONFIG_DCACHE_SNOOP_FAST
+	global CONFIG_DCACHE_SNOOP_SEPTAG
+	global CONFIG_DCACHE_LRAM
+	global CONFIG_MMU_SPLIT
+	global CONFIG_MMU_REPARRAY
+	global CONFIG_MMU_I8
+	global CONFIG_MMU_D8
+	global CONFIG_MMU_FASTWB
+	global CONFIG_MMU_PAGE_4K
+	global CONFIG_DSU_ITRACE
+	global CONFIG_DSU_ITRACESZ4
+	global CONFIG_DSU_ATRACESZ4
+	global CONFIG_IU_MUL_LATENCY_2
+	global CONFIG_FPU_GRFPU
+	global CONFIG_FPU_GRFPU_INFMUL
+	global CONFIG_ICACHE_ALGOLRU
+	global CONFIG_DCACHE_ALGOLRU
+	global CONFIG_MMU_I16
+	global CONFIG_MMU_D16
+	global CONFIG_LEON3
+	global CONFIG_PROC_NUM
+	if {($CONFIG_LEON3 == 1)} then {validate_int CONFIG_PROC_NUM "$CONFIG_PROC_NUM" 1}
+	global tmpvar_3
+	global CONFIG_LEON3_MIN
+	if {$tmpvar_3 == "Minimal-configuration"} then {set CONFIG_LEON3_MIN 1} else {set CONFIG_LEON3_MIN 0}
+	global CONFIG_LEON3_GP
+	if {$tmpvar_3 == "General-purpose-cfg"} then {set CONFIG_LEON3_GP 1} else {set CONFIG_LEON3_GP 0}
+	global CONFIG_LEON3_HP
+	if {$tmpvar_3 == "High-Performance-cfg"} then {set CONFIG_LEON3_HP 1} else {set CONFIG_LEON3_HP 0}
+	global CONFIG_LEON3_CUSTOM
+	if {$tmpvar_3 == "Custom-configuration"} then {set CONFIG_LEON3_CUSTOM 1} else {set CONFIG_LEON3_CUSTOM 0}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {set CONFIG_IU_NWINDOWS 8 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_IU_V8MULDIV $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_IU_BP $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_SVT $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_NOTAG $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {set CONFIG_IU_LDELAY 1 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {set CONFIG_IU_WATCHPOINTS 0 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_PWD $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {set CONFIG_IU_RSTADDR 00000 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_FPU_ENABLE $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ASSO1 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_SZ2 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_LZ16 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ALGORND $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_ICACHE_LOCK $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ASSO1 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SZ2 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_LZ16 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ALGORND $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_DCACHE_LOCK $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_DCACHE_SNOOP $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {set CONFIG_CACHE_FIXED 0 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_MMU_ENABLE $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {	global CONSTANT_N
+set CONFIG_DSU_ENABLE $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {set CONFIG_IU_NWINDOWS 8 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_V8MULDIV $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_MUL_LATENCY_5 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_N
+set CONFIG_IU_MUL_MAC $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_BP $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_SVT $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_N
+set CONFIG_NOTAG $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {set CONFIG_IU_LDELAY 1 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {set CONFIG_IU_WATCHPOINTS 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_PWD $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {set CONFIG_IU_RSTADDR 00000 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_N
+set CONFIG_FPU_ENABLE $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ASSO2 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_SZ4 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_LZ16 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ALGORND $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_N
+set CONFIG_ICACHE_LOCK $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_N
+set CONFIG_ICACHE_LRAM $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ASSO2 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SZ4 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_LZ16 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ALGORND $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_N
+set CONFIG_DCACHE_LOCK $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SNOOP $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SNOOP_FAST $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SNOOP_SEPTAG $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {set CONFIG_CACHE_FIXED 0 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_N
+set CONFIG_DCACHE_LRAM $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_SPLIT $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_REPARRAY $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_I8 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_D8 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_FASTWB $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_PAGE_4K $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DSU_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DSU_ITRACE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DSU_ITRACESZ4 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {	global CONSTANT_Y
+set CONFIG_DSU_ATRACESZ4 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {set CONFIG_IU_NWINDOWS 8 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_V8MULDIV $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_MUL_LATENCY_2 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_N
+set CONFIG_IU_MUL_MAC $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_BP $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_IU_SVT $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_N
+set CONFIG_NOTAG $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {set CONFIG_IU_LDELAY 1 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {set CONFIG_IU_WATCHPOINTS 4 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_PWD $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {set CONFIG_IU_RSTADDR 00000 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_FPU_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_FPU_GRFPU $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_FPU_GRFPU_INFMUL $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ASSO2 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_SZ4 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_LZ16 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_ICACHE_ALGOLRU $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_N
+set CONFIG_ICACHE_LOCK $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_N
+set CONFIG_ICACHE_LRAM $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ASSO2 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SZ4 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_LZ16 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_ALGOLRU $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_N
+set CONFIG_DCACHE_LOCK $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SNOOP $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SNOOP_FAST $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DCACHE_SNOOP_SEPTAG $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {set CONFIG_CACHE_FIXED 0 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_N
+set CONFIG_DCACHE_LRAM $CONSTANT_N }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_SPLIT $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_REPARRAY $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_I16 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_D16 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_FASTWB $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_MMU_PAGE_4K $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DSU_ENABLE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DSU_ITRACE $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DSU_ITRACESZ4 $CONSTANT_Y }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {	global CONSTANT_Y
+set CONFIG_DSU_ATRACESZ4 $CONSTANT_Y }
+}
+
+
+proc menu4 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu3}
+	catch {destroy $w; unregister_active 4}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 4]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Integer unit                                           "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Integer unit                                           " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 4; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 4; menu5 .menu5 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 4"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 4; menu3 .menu3 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 4; menu3 .menu3 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	int $w.config.f 4 0 "SPARC register windows" CONFIG_IU_NWINDOWS
+	bool $w.config.f 4 1 "SPARC V8 MUL/DIV instructions" CONFIG_IU_V8MULDIV
+	global tmpvar_4
+	minimenu $w.config.f 4 2 "Hardware multiplier latency" tmpvar_4 CONFIG_IU_MUL_LATENCY_2
+	menu $w.config.f.x2.x.menu -tearoffcommand "menutitle \"Hardware multiplier latency\""
+	$w.config.f.x2.x.menu add radiobutton -label "2-cycles" -variable tmpvar_4 -value "2-cycles" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "4-cycles" -variable tmpvar_4 -value "4-cycles" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "5-cycles" -variable tmpvar_4 -value "5-cycles" -command "update_active"
+	menusplit $w $w.config.f.x2.x.menu 3
+	bool $w.config.f 4 3 "SPARC V8e SMAC/UMAC instructions     " CONFIG_IU_MUL_MAC
+	global tmpvar_5
+	minimenu $w.config.f 4 4 "Multipler structure        " tmpvar_5 CONFIG_IU_MUL_INFERRED
+	menu $w.config.f.x4.x.menu -tearoffcommand "menutitle \"Multipler structure        \""
+	$w.config.f.x4.x.menu add radiobutton -label "Inferred" -variable tmpvar_5 -value "Inferred" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "NTNU_Modgen" -variable tmpvar_5 -value "NTNU_Modgen" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "TechSpec" -variable tmpvar_5 -value "TechSpec" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "Designware" -variable tmpvar_5 -value "Designware" -command "update_active"
+	menusplit $w $w.config.f.x4.x.menu 4
+	bool $w.config.f 4 5 "Branch prediction     " CONFIG_IU_BP
+	bool $w.config.f 4 6 "Single-vector trapping" CONFIG_IU_SVT
+	bool $w.config.f 4 7 "Disable tagged ADD/SUB and CASA" CONFIG_NOTAG
+	int $w.config.f 4 8 "Load delay" CONFIG_IU_LDELAY
+	int $w.config.f 4 9 "Hardware watchpoints" CONFIG_IU_WATCHPOINTS
+	bool $w.config.f 4 10 "Enable power-down mode " CONFIG_PWD
+	hex $w.config.f 4 11 " Reset start address (addr\[31:12\]) " CONFIG_IU_RSTADDR
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "Processor            "}
+	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu4 {} {
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_IU_NWINDOWS
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {.menu4.config.f.x0.x configure -state normal -foreground [ cget .ref -foreground ]; .menu4.config.f.x0.l configure -state normal; } else {.menu4.config.f.x0.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu4.config.f.x0.l configure -state disabled}
+	global CONFIG_IU_V8MULDIV
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu4.config.f.x1 normal {n l y}} else {configure_entry .menu4.config.f.x1 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_IU_V8MULDIV == 1)} then {configure_entry .menu4.config.f.x2 normal {x l}} else {configure_entry .menu4.config.f.x2 disabled {x l}}
+	global CONFIG_IU_MUL_LATENCY_4
+	global CONFIG_IU_MUL_LATENCY_5
+	global CONFIG_IU_MUL_MAC
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_IU_V8MULDIV == 1) && ($CONFIG_IU_MUL_LATENCY_4 == 1 || $CONFIG_IU_MUL_LATENCY_5 == 1)} then {
+	configure_entry .menu4.config.f.x3 normal {n l y}} else {configure_entry .menu4.config.f.x3 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_IU_V8MULDIV == 1)} then {configure_entry .menu4.config.f.x4 normal {x l}} else {configure_entry .menu4.config.f.x4 disabled {x l}}
+	global CONFIG_IU_BP
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu4.config.f.x5 normal {n l y}} else {configure_entry .menu4.config.f.x5 disabled {y n l}}
+	global CONFIG_IU_SVT
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu4.config.f.x6 normal {n l y}} else {configure_entry .menu4.config.f.x6 disabled {y n l}}
+	global CONFIG_NOTAG
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu4.config.f.x7 normal {n l y}} else {configure_entry .menu4.config.f.x7 disabled {y n l}}
+	global CONFIG_IU_LDELAY
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {.menu4.config.f.x8.x configure -state normal -foreground [ cget .ref -foreground ]; .menu4.config.f.x8.l configure -state normal; } else {.menu4.config.f.x8.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu4.config.f.x8.l configure -state disabled}
+	global CONFIG_IU_WATCHPOINTS
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {.menu4.config.f.x9.x configure -state normal -foreground [ cget .ref -foreground ]; .menu4.config.f.x9.l configure -state normal; } else {.menu4.config.f.x9.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu4.config.f.x9.l configure -state disabled}
+	global CONFIG_PWD
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu4.config.f.x10 normal {n l y}} else {configure_entry .menu4.config.f.x10 disabled {y n l}}
+	global CONFIG_IU_RSTADDR
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {.menu4.config.f.x11.x configure -state normal -foreground [ cget .ref -foreground ]; .menu4.config.f.x11.l configure -state normal; } else {.menu4.config.f.x11.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu4.config.f.x11.l configure -state disabled}
+}
+
+
+proc update_define_menu4 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_IU_NWINDOWS
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {validate_int CONFIG_IU_NWINDOWS "$CONFIG_IU_NWINDOWS" 8}
+	global CONFIG_IU_V8MULDIV
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_IU_V8MULDIV [expr $CONFIG_IU_V8MULDIV&15]} else {set CONFIG_IU_V8MULDIV [expr $CONFIG_IU_V8MULDIV|16]}
+	global tmpvar_4
+	global CONFIG_IU_MUL_LATENCY_2
+	if {$tmpvar_4 == "2-cycles"} then {set CONFIG_IU_MUL_LATENCY_2 1} else {set CONFIG_IU_MUL_LATENCY_2 0}
+	global CONFIG_IU_MUL_LATENCY_4
+	if {$tmpvar_4 == "4-cycles"} then {set CONFIG_IU_MUL_LATENCY_4 1} else {set CONFIG_IU_MUL_LATENCY_4 0}
+	global CONFIG_IU_MUL_LATENCY_5
+	if {$tmpvar_4 == "5-cycles"} then {set CONFIG_IU_MUL_LATENCY_5 1} else {set CONFIG_IU_MUL_LATENCY_5 0}
+	global CONFIG_IU_MUL_MAC
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_IU_V8MULDIV == 1) && ($CONFIG_IU_MUL_LATENCY_4 == 1 || $CONFIG_IU_MUL_LATENCY_5 == 1)} then {
+	set CONFIG_IU_MUL_MAC [expr $CONFIG_IU_MUL_MAC&15]} else {set CONFIG_IU_MUL_MAC [expr $CONFIG_IU_MUL_MAC|16]}
+	global tmpvar_5
+	global CONFIG_IU_MUL_INFERRED
+	if {$tmpvar_5 == "Inferred"} then {set CONFIG_IU_MUL_INFERRED 1} else {set CONFIG_IU_MUL_INFERRED 0}
+	global CONFIG_IU_MUL_MODGEN
+	if {$tmpvar_5 == "NTNU_Modgen"} then {set CONFIG_IU_MUL_MODGEN 1} else {set CONFIG_IU_MUL_MODGEN 0}
+	global CONFIG_IU_MUL_TECHSPEC
+	if {$tmpvar_5 == "TechSpec"} then {set CONFIG_IU_MUL_TECHSPEC 1} else {set CONFIG_IU_MUL_TECHSPEC 0}
+	global CONFIG_IU_MUL_DW
+	if {$tmpvar_5 == "Designware"} then {set CONFIG_IU_MUL_DW 1} else {set CONFIG_IU_MUL_DW 0}
+	global CONFIG_IU_BP
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_IU_BP [expr $CONFIG_IU_BP&15]} else {set CONFIG_IU_BP [expr $CONFIG_IU_BP|16]}
+	global CONFIG_IU_SVT
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_IU_SVT [expr $CONFIG_IU_SVT&15]} else {set CONFIG_IU_SVT [expr $CONFIG_IU_SVT|16]}
+	global CONFIG_NOTAG
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_NOTAG [expr $CONFIG_NOTAG&15]} else {set CONFIG_NOTAG [expr $CONFIG_NOTAG|16]}
+	global CONFIG_IU_LDELAY
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {validate_int CONFIG_IU_LDELAY "$CONFIG_IU_LDELAY" 1}
+	global CONFIG_IU_WATCHPOINTS
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {validate_int CONFIG_IU_WATCHPOINTS "$CONFIG_IU_WATCHPOINTS" 0}
+	global CONFIG_PWD
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_PWD [expr $CONFIG_PWD&15]} else {set CONFIG_PWD [expr $CONFIG_PWD|16]}
+	global CONFIG_IU_RSTADDR
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {validate_hex CONFIG_IU_RSTADDR "$CONFIG_IU_RSTADDR" 00000}
+}
+
+
+proc menu5 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu3}
+	catch {destroy $w; unregister_active 5}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 5]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Floating-point unit"  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Floating-point unit" 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 5; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 5; menu6 .menu6 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 5"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 5; menu4 .menu4 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 5; menu4 .menu4 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 5 0 "Enable FPU                             " CONFIG_FPU_ENABLE
+	global tmpvar_6
+	minimenu $w.config.f 5 1 "FPU core" tmpvar_6 CONFIG_FPU_GRFPU
+	menu $w.config.f.x1.x.menu -tearoffcommand "menutitle \"FPU core\""
+	$w.config.f.x1.x.menu add radiobutton -label "GRFPU" -variable tmpvar_6 -value "GRFPU" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "GRFPU-LITE" -variable tmpvar_6 -value "GRFPU-LITE" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "Meiko" -variable tmpvar_6 -value "Meiko" -command "update_active"
+	menusplit $w $w.config.f.x1.x.menu 3
+	global tmpvar_7
+	minimenu $w.config.f 5 2 "GRFPU multiplier" tmpvar_7 CONFIG_FPU_GRFPU_INFMUL
+	menu $w.config.f.x2.x.menu -tearoffcommand "menutitle \"GRFPU multiplier\""
+	$w.config.f.x2.x.menu add radiobutton -label "Inferred" -variable tmpvar_7 -value "Inferred" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "DW" -variable tmpvar_7 -value "DW" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "ModGen" -variable tmpvar_7 -value "ModGen" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "TechSpec" -variable tmpvar_7 -value "TechSpec" -command "update_active"
+	menusplit $w $w.config.f.x2.x.menu 4
+	global tmpvar_8
+	minimenu $w.config.f 5 3 "GRFPU-LITE controller" tmpvar_8 CONFIG_FPU_GRFPC0
+	menu $w.config.f.x3.x.menu -tearoffcommand "menutitle \"GRFPU-LITE controller\""
+	$w.config.f.x3.x.menu add radiobutton -label "Simple" -variable tmpvar_8 -value "Simple" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "Data-forwarding" -variable tmpvar_8 -value "Data-forwarding" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "Non-blocking" -variable tmpvar_8 -value "Non-blocking" -command "update_active"
+	menusplit $w $w.config.f.x3.x.menu 3
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "Processor            "}
+	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu5 {} {
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_FPU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu5.config.f.x0 normal {n l y}} else {configure_entry .menu5.config.f.x0 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_FPU_ENABLE == 1)} then {configure_entry .menu5.config.f.x1 normal {x l}} else {configure_entry .menu5.config.f.x1 disabled {x l}}
+	global CONFIG_FPU_GRFPU
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_FPU_ENABLE == 1) && ($CONFIG_FPU_GRFPU == 1)} then {configure_entry .menu5.config.f.x2 normal {x l}} else {configure_entry .menu5.config.f.x2 disabled {x l}}
+	global CONFIG_FPU_GRFPULITE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_FPU_ENABLE == 1) && ($CONFIG_FPU_GRFPULITE == 1)} then {configure_entry .menu5.config.f.x3 normal {x l}} else {configure_entry .menu5.config.f.x3 disabled {x l}}
+}
+
+
+proc update_define_menu5 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_FPU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_FPU_ENABLE [expr $CONFIG_FPU_ENABLE&15]} else {set CONFIG_FPU_ENABLE [expr $CONFIG_FPU_ENABLE|16]}
+	global tmpvar_6
+	global CONFIG_FPU_GRFPU
+	if {$tmpvar_6 == "GRFPU"} then {set CONFIG_FPU_GRFPU 1} else {set CONFIG_FPU_GRFPU 0}
+	global CONFIG_FPU_GRFPULITE
+	if {$tmpvar_6 == "GRFPU-LITE"} then {set CONFIG_FPU_GRFPULITE 1} else {set CONFIG_FPU_GRFPULITE 0}
+	global CONFIG_FPU_MEIKO
+	if {$tmpvar_6 == "Meiko"} then {set CONFIG_FPU_MEIKO 1} else {set CONFIG_FPU_MEIKO 0}
+	global tmpvar_7
+	global CONFIG_FPU_GRFPU_INFMUL
+	if {$tmpvar_7 == "Inferred"} then {set CONFIG_FPU_GRFPU_INFMUL 1} else {set CONFIG_FPU_GRFPU_INFMUL 0}
+	global CONFIG_FPU_GRFPU_DWMUL
+	if {$tmpvar_7 == "DW"} then {set CONFIG_FPU_GRFPU_DWMUL 1} else {set CONFIG_FPU_GRFPU_DWMUL 0}
+	global CONFIG_FPU_GRFPU_MODGEN
+	if {$tmpvar_7 == "ModGen"} then {set CONFIG_FPU_GRFPU_MODGEN 1} else {set CONFIG_FPU_GRFPU_MODGEN 0}
+	global CONFIG_FPU_GRFPU_TECHSPEC
+	if {$tmpvar_7 == "TechSpec"} then {set CONFIG_FPU_GRFPU_TECHSPEC 1} else {set CONFIG_FPU_GRFPU_TECHSPEC 0}
+	global tmpvar_8
+	global CONFIG_FPU_GRFPC0
+	if {$tmpvar_8 == "Simple"} then {set CONFIG_FPU_GRFPC0 1} else {set CONFIG_FPU_GRFPC0 0}
+	global CONFIG_FPU_GRFPC1
+	if {$tmpvar_8 == "Data-forwarding"} then {set CONFIG_FPU_GRFPC1 1} else {set CONFIG_FPU_GRFPC1 0}
+	global CONFIG_FPU_GRFPC2
+	if {$tmpvar_8 == "Non-blocking"} then {set CONFIG_FPU_GRFPC2 1} else {set CONFIG_FPU_GRFPC2 0}
+}
+
+
+proc menu6 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu3}
+	catch {destroy $w; unregister_active 6}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 6]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Cache system"  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Cache system" 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 6; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 6; menu7 .menu7 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 6"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 6; menu5 .menu5 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 6; menu5 .menu5 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 6 0 "Enable instruction cache       " CONFIG_ICACHE_ENABLE
+	global tmpvar_9
+	minimenu $w.config.f 6 1 "Associativity (sets)            " tmpvar_9 CONFIG_ICACHE_ASSO1
+	menu $w.config.f.x1.x.menu -tearoffcommand "menutitle \"Associativity (sets)            \""
+	$w.config.f.x1.x.menu add radiobutton -label "1" -variable tmpvar_9 -value "1" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "2" -variable tmpvar_9 -value "2" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "3" -variable tmpvar_9 -value "3" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "4" -variable tmpvar_9 -value "4" -command "update_active"
+	menusplit $w $w.config.f.x1.x.menu 4
+	global tmpvar_10
+	minimenu $w.config.f 6 2 "Way size (kbytes/way)" tmpvar_10 CONFIG_ICACHE_SZ1
+	menu $w.config.f.x2.x.menu -tearoffcommand "menutitle \"Way size (kbytes/way)\""
+	$w.config.f.x2.x.menu add radiobutton -label "1" -variable tmpvar_10 -value "1" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "2" -variable tmpvar_10 -value "2" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "4" -variable tmpvar_10 -value "4" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "8" -variable tmpvar_10 -value "8" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "16" -variable tmpvar_10 -value "16" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "32" -variable tmpvar_10 -value "32" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "64" -variable tmpvar_10 -value "64" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "128" -variable tmpvar_10 -value "128" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "256" -variable tmpvar_10 -value "256" -command "update_active"
+	menusplit $w $w.config.f.x2.x.menu 9
+	global tmpvar_11
+	minimenu $w.config.f 6 3 "Line size (bytes/line)" tmpvar_11 CONFIG_ICACHE_LZ16
+	menu $w.config.f.x3.x.menu -tearoffcommand "menutitle \"Line size (bytes/line)\""
+	$w.config.f.x3.x.menu add radiobutton -label "16" -variable tmpvar_11 -value "16" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "32" -variable tmpvar_11 -value "32" -command "update_active"
+	menusplit $w $w.config.f.x3.x.menu 2
+	global tmpvar_12
+	minimenu $w.config.f 6 4 "Replacement alorithm" tmpvar_12 CONFIG_ICACHE_ALGORND
+	menu $w.config.f.x4.x.menu -tearoffcommand "menutitle \"Replacement alorithm\""
+	$w.config.f.x4.x.menu add radiobutton -label "Random" -variable tmpvar_12 -value "Random" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "Direct" -variable tmpvar_12 -value "Direct" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "LRR" -variable tmpvar_12 -value "LRR" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "LRU" -variable tmpvar_12 -value "LRU" -command "update_active"
+	menusplit $w $w.config.f.x4.x.menu 4
+	bool $w.config.f 6 5 "Cache locking      " CONFIG_ICACHE_LOCK
+	bool $w.config.f 6 6 "Enable local instruction RAM            " CONFIG_ICACHE_LRAM
+	global tmpvar_13
+	minimenu $w.config.f 6 7 "Local data RAM size (kbytes)" tmpvar_13 CONFIG_ICACHE_LRAM_SZ1
+	menu $w.config.f.x7.x.menu -tearoffcommand "menutitle \"Local data RAM size (kbytes)\""
+	$w.config.f.x7.x.menu add radiobutton -label "1" -variable tmpvar_13 -value "1" -command "update_active"
+	$w.config.f.x7.x.menu add radiobutton -label "2" -variable tmpvar_13 -value "2" -command "update_active"
+	$w.config.f.x7.x.menu add radiobutton -label "4" -variable tmpvar_13 -value "4" -command "update_active"
+	$w.config.f.x7.x.menu add radiobutton -label "8" -variable tmpvar_13 -value "8" -command "update_active"
+	$w.config.f.x7.x.menu add radiobutton -label "16" -variable tmpvar_13 -value "16" -command "update_active"
+	$w.config.f.x7.x.menu add radiobutton -label "32" -variable tmpvar_13 -value "32" -command "update_active"
+	$w.config.f.x7.x.menu add radiobutton -label "64" -variable tmpvar_13 -value "64" -command "update_active"
+	$w.config.f.x7.x.menu add radiobutton -label "128" -variable tmpvar_13 -value "128" -command "update_active"
+	$w.config.f.x7.x.menu add radiobutton -label "256" -variable tmpvar_13 -value "256" -command "update_active"
+	menusplit $w $w.config.f.x7.x.menu 9
+	hex $w.config.f 6 8 " Local instruction RAM start address (8 MSB) " CONFIG_ICACHE_LRSTART
+	bool $w.config.f 6 9 "Enable data cache       " CONFIG_DCACHE_ENABLE
+	global tmpvar_14
+	minimenu $w.config.f 6 10 "Associativity (sets)" tmpvar_14 CONFIG_DCACHE_ASSO1
+	menu $w.config.f.x10.x.menu -tearoffcommand "menutitle \"Associativity (sets)\""
+	$w.config.f.x10.x.menu add radiobutton -label "1" -variable tmpvar_14 -value "1" -command "update_active"
+	$w.config.f.x10.x.menu add radiobutton -label "2" -variable tmpvar_14 -value "2" -command "update_active"
+	$w.config.f.x10.x.menu add radiobutton -label "3" -variable tmpvar_14 -value "3" -command "update_active"
+	$w.config.f.x10.x.menu add radiobutton -label "4" -variable tmpvar_14 -value "4" -command "update_active"
+	menusplit $w $w.config.f.x10.x.menu 4
+	global tmpvar_15
+	minimenu $w.config.f 6 11 "Set size (kbytes/set)" tmpvar_15 CONFIG_DCACHE_SZ1
+	menu $w.config.f.x11.x.menu -tearoffcommand "menutitle \"Set size (kbytes/set)\""
+	$w.config.f.x11.x.menu add radiobutton -label "1" -variable tmpvar_15 -value "1" -command "update_active"
+	$w.config.f.x11.x.menu add radiobutton -label "2" -variable tmpvar_15 -value "2" -command "update_active"
+	$w.config.f.x11.x.menu add radiobutton -label "4" -variable tmpvar_15 -value "4" -command "update_active"
+	$w.config.f.x11.x.menu add radiobutton -label "8" -variable tmpvar_15 -value "8" -command "update_active"
+	$w.config.f.x11.x.menu add radiobutton -label "16" -variable tmpvar_15 -value "16" -command "update_active"
+	$w.config.f.x11.x.menu add radiobutton -label "32" -variable tmpvar_15 -value "32" -command "update_active"
+	$w.config.f.x11.x.menu add radiobutton -label "64" -variable tmpvar_15 -value "64" -command "update_active"
+	$w.config.f.x11.x.menu add radiobutton -label "128" -variable tmpvar_15 -value "128" -command "update_active"
+	$w.config.f.x11.x.menu add radiobutton -label "256" -variable tmpvar_15 -value "256" -command "update_active"
+	menusplit $w $w.config.f.x11.x.menu 9
+	global tmpvar_16
+	minimenu $w.config.f 6 12 "Line size (bytes/line)" tmpvar_16 CONFIG_DCACHE_LZ16
+	menu $w.config.f.x12.x.menu -tearoffcommand "menutitle \"Line size (bytes/line)\""
+	$w.config.f.x12.x.menu add radiobutton -label "16" -variable tmpvar_16 -value "16" -command "update_active"
+	$w.config.f.x12.x.menu add radiobutton -label "32" -variable tmpvar_16 -value "32" -command "update_active"
+	menusplit $w $w.config.f.x12.x.menu 2
+	global tmpvar_17
+	minimenu $w.config.f 6 13 "Replacement alorithm" tmpvar_17 CONFIG_DCACHE_ALGORND
+	menu $w.config.f.x13.x.menu -tearoffcommand "menutitle \"Replacement alorithm\""
+	$w.config.f.x13.x.menu add radiobutton -label "Random" -variable tmpvar_17 -value "Random" -command "update_active"
+	$w.config.f.x13.x.menu add radiobutton -label "Direct" -variable tmpvar_17 -value "Direct" -command "update_active"
+	$w.config.f.x13.x.menu add radiobutton -label "LRR" -variable tmpvar_17 -value "LRR" -command "update_active"
+	$w.config.f.x13.x.menu add radiobutton -label "LRU" -variable tmpvar_17 -value "LRU" -command "update_active"
+	menusplit $w $w.config.f.x13.x.menu 4
+	bool $w.config.f 6 14 "Cache locking      " CONFIG_DCACHE_LOCK
+	bool $w.config.f 6 15 "AHB snooping       " CONFIG_DCACHE_SNOOP
+	bool $w.config.f 6 16 "Separate snoop tags  " CONFIG_DCACHE_SNOOP_SEPTAG
+	hex $w.config.f 6 17 "Fixed cacheability map  " CONFIG_CACHE_FIXED
+	bool $w.config.f 6 18 "Enable local data RAM            " CONFIG_DCACHE_LRAM
+	global tmpvar_18
+	minimenu $w.config.f 6 19 "Local data RAM size (kbytes)" tmpvar_18 CONFIG_DCACHE_LRAM_SZ1
+	menu $w.config.f.x19.x.menu -tearoffcommand "menutitle \"Local data RAM size (kbytes)\""
+	$w.config.f.x19.x.menu add radiobutton -label "1" -variable tmpvar_18 -value "1" -command "update_active"
+	$w.config.f.x19.x.menu add radiobutton -label "2" -variable tmpvar_18 -value "2" -command "update_active"
+	$w.config.f.x19.x.menu add radiobutton -label "4" -variable tmpvar_18 -value "4" -command "update_active"
+	$w.config.f.x19.x.menu add radiobutton -label "8" -variable tmpvar_18 -value "8" -command "update_active"
+	$w.config.f.x19.x.menu add radiobutton -label "16" -variable tmpvar_18 -value "16" -command "update_active"
+	$w.config.f.x19.x.menu add radiobutton -label "32" -variable tmpvar_18 -value "32" -command "update_active"
+	$w.config.f.x19.x.menu add radiobutton -label "64" -variable tmpvar_18 -value "64" -command "update_active"
+	$w.config.f.x19.x.menu add radiobutton -label "128" -variable tmpvar_18 -value "128" -command "update_active"
+	$w.config.f.x19.x.menu add radiobutton -label "256" -variable tmpvar_18 -value "256" -command "update_active"
+	menusplit $w $w.config.f.x19.x.menu 9
+	hex $w.config.f 6 20 " Local data RAM start address (8 MSB) " CONFIG_DCACHE_LRSTART
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "Processor            "}
+	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu6 {} {
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_ICACHE_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu6.config.f.x0 normal {n l y}} else {configure_entry .menu6.config.f.x0 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1)} then {configure_entry .menu6.config.f.x1 normal {x l}} else {configure_entry .menu6.config.f.x1 disabled {x l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1)} then {configure_entry .menu6.config.f.x2 normal {x l}} else {configure_entry .menu6.config.f.x2 disabled {x l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1)} then {configure_entry .menu6.config.f.x3 normal {x l}} else {configure_entry .menu6.config.f.x3 disabled {x l}}
+	global CONFIG_ICACHE_ASSO1
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1) && ($CONFIG_ICACHE_ASSO1 != 1)} then {configure_entry .menu6.config.f.x4 normal {x l}} else {configure_entry .menu6.config.f.x4 disabled {x l}}
+	global CONFIG_ICACHE_LOCK
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1) && ($CONFIG_ICACHE_ASSO1 != 1)} then {
+	configure_entry .menu6.config.f.x5 normal {n l y}} else {configure_entry .menu6.config.f.x5 disabled {y n l}}
+	global CONFIG_MMU_ENABLE
+	global CONFIG_ICACHE_LRAM
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE != 1)} then {
+	configure_entry .menu6.config.f.x6 normal {n l y}} else {configure_entry .menu6.config.f.x6 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_LRAM == 1)} then {configure_entry .menu6.config.f.x7 normal {x l}} else {configure_entry .menu6.config.f.x7 disabled {x l}}
+	global CONFIG_ICACHE_LRSTART
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_LRAM == 1)} then {.menu6.config.f.x8.x configure -state normal -foreground [ cget .ref -foreground ]; .menu6.config.f.x8.l configure -state normal; } else {.menu6.config.f.x8.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu6.config.f.x8.l configure -state disabled}
+	global CONFIG_DCACHE_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu6.config.f.x9 normal {n l y}} else {configure_entry .menu6.config.f.x9 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {configure_entry .menu6.config.f.x10 normal {x l}} else {configure_entry .menu6.config.f.x10 disabled {x l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {configure_entry .menu6.config.f.x11 normal {x l}} else {configure_entry .menu6.config.f.x11 disabled {x l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {configure_entry .menu6.config.f.x12 normal {x l}} else {configure_entry .menu6.config.f.x12 disabled {x l}}
+	global CONFIG_DCACHE_ASSO1
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1) && ($CONFIG_DCACHE_ASSO1 != 1)} then {configure_entry .menu6.config.f.x13 normal {x l}} else {configure_entry .menu6.config.f.x13 disabled {x l}}
+	global CONFIG_DCACHE_LOCK
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1) && ($CONFIG_DCACHE_ASSO1 != 1)} then {
+	configure_entry .menu6.config.f.x14 normal {n l y}} else {configure_entry .menu6.config.f.x14 disabled {y n l}}
+	global CONFIG_DCACHE_SNOOP
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {
+	configure_entry .menu6.config.f.x15 normal {n l y}} else {configure_entry .menu6.config.f.x15 disabled {y n l}}
+	global CONFIG_DCACHE_SNOOP_SEPTAG
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1) && ($CONFIG_DCACHE_SNOOP == 1)} then {
+	configure_entry .menu6.config.f.x16 normal {n l y}} else {configure_entry .menu6.config.f.x16 disabled {y n l}}
+	global CONFIG_CACHE_FIXED
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1 || $CONFIG_DCACHE_ENABLE == 1)} then {.menu6.config.f.x17.x configure -state normal -foreground [ cget .ref -foreground ]; .menu6.config.f.x17.l configure -state normal; } else {.menu6.config.f.x17.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu6.config.f.x17.l configure -state disabled}
+	global CONFIG_DCACHE_LRAM
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE != 1)} then {
+	configure_entry .menu6.config.f.x18 normal {n l y}} else {configure_entry .menu6.config.f.x18 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_LRAM == 1)} then {configure_entry .menu6.config.f.x19 normal {x l}} else {configure_entry .menu6.config.f.x19 disabled {x l}}
+	global CONFIG_DCACHE_LRSTART
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_LRAM == 1)} then {.menu6.config.f.x20.x configure -state normal -foreground [ cget .ref -foreground ]; .menu6.config.f.x20.l configure -state normal; } else {.menu6.config.f.x20.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu6.config.f.x20.l configure -state disabled}
+}
+
+
+proc update_define_menu6 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_ICACHE_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_ICACHE_ENABLE [expr $CONFIG_ICACHE_ENABLE&15]} else {set CONFIG_ICACHE_ENABLE [expr $CONFIG_ICACHE_ENABLE|16]}
+	global tmpvar_9
+	global CONFIG_ICACHE_ASSO1
+	if {$tmpvar_9 == "1"} then {set CONFIG_ICACHE_ASSO1 1} else {set CONFIG_ICACHE_ASSO1 0}
+	global CONFIG_ICACHE_ASSO2
+	if {$tmpvar_9 == "2"} then {set CONFIG_ICACHE_ASSO2 1} else {set CONFIG_ICACHE_ASSO2 0}
+	global CONFIG_ICACHE_ASSO3
+	if {$tmpvar_9 == "3"} then {set CONFIG_ICACHE_ASSO3 1} else {set CONFIG_ICACHE_ASSO3 0}
+	global CONFIG_ICACHE_ASSO4
+	if {$tmpvar_9 == "4"} then {set CONFIG_ICACHE_ASSO4 1} else {set CONFIG_ICACHE_ASSO4 0}
+	global tmpvar_10
+	global CONFIG_ICACHE_SZ1
+	if {$tmpvar_10 == "1"} then {set CONFIG_ICACHE_SZ1 1} else {set CONFIG_ICACHE_SZ1 0}
+	global CONFIG_ICACHE_SZ2
+	if {$tmpvar_10 == "2"} then {set CONFIG_ICACHE_SZ2 1} else {set CONFIG_ICACHE_SZ2 0}
+	global CONFIG_ICACHE_SZ4
+	if {$tmpvar_10 == "4"} then {set CONFIG_ICACHE_SZ4 1} else {set CONFIG_ICACHE_SZ4 0}
+	global CONFIG_ICACHE_SZ8
+	if {$tmpvar_10 == "8"} then {set CONFIG_ICACHE_SZ8 1} else {set CONFIG_ICACHE_SZ8 0}
+	global CONFIG_ICACHE_SZ16
+	if {$tmpvar_10 == "16"} then {set CONFIG_ICACHE_SZ16 1} else {set CONFIG_ICACHE_SZ16 0}
+	global CONFIG_ICACHE_SZ32
+	if {$tmpvar_10 == "32"} then {set CONFIG_ICACHE_SZ32 1} else {set CONFIG_ICACHE_SZ32 0}
+	global CONFIG_ICACHE_SZ64
+	if {$tmpvar_10 == "64"} then {set CONFIG_ICACHE_SZ64 1} else {set CONFIG_ICACHE_SZ64 0}
+	global CONFIG_ICACHE_SZ128
+	if {$tmpvar_10 == "128"} then {set CONFIG_ICACHE_SZ128 1} else {set CONFIG_ICACHE_SZ128 0}
+	global CONFIG_ICACHE_SZ256
+	if {$tmpvar_10 == "256"} then {set CONFIG_ICACHE_SZ256 1} else {set CONFIG_ICACHE_SZ256 0}
+	global tmpvar_11
+	global CONFIG_ICACHE_LZ16
+	if {$tmpvar_11 == "16"} then {set CONFIG_ICACHE_LZ16 1} else {set CONFIG_ICACHE_LZ16 0}
+	global CONFIG_ICACHE_LZ32
+	if {$tmpvar_11 == "32"} then {set CONFIG_ICACHE_LZ32 1} else {set CONFIG_ICACHE_LZ32 0}
+	global tmpvar_12
+	global CONFIG_ICACHE_ALGORND
+	if {$tmpvar_12 == "Random"} then {set CONFIG_ICACHE_ALGORND 1} else {set CONFIG_ICACHE_ALGORND 0}
+	global CONFIG_ICACHE_ALGODIR
+	if {$tmpvar_12 == "Direct"} then {set CONFIG_ICACHE_ALGODIR 1} else {set CONFIG_ICACHE_ALGODIR 0}
+	global CONFIG_ICACHE_ALGOLRR
+	if {$tmpvar_12 == "LRR"} then {set CONFIG_ICACHE_ALGOLRR 1} else {set CONFIG_ICACHE_ALGOLRR 0}
+	global CONFIG_ICACHE_ALGOLRU
+	if {$tmpvar_12 == "LRU"} then {set CONFIG_ICACHE_ALGOLRU 1} else {set CONFIG_ICACHE_ALGOLRU 0}
+	global CONFIG_ICACHE_LOCK
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1) && ($CONFIG_ICACHE_ASSO1 != 1)} then {
+	set CONFIG_ICACHE_LOCK [expr $CONFIG_ICACHE_LOCK&15]} else {set CONFIG_ICACHE_LOCK [expr $CONFIG_ICACHE_LOCK|16]}
+	global CONFIG_MMU_ENABLE
+	global CONFIG_ICACHE_LRAM
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE != 1)} then {
+	set CONFIG_ICACHE_LRAM [expr $CONFIG_ICACHE_LRAM&15]} else {set CONFIG_ICACHE_LRAM [expr $CONFIG_ICACHE_LRAM|16]}
+	global tmpvar_13
+	global CONFIG_ICACHE_LRAM_SZ1
+	if {$tmpvar_13 == "1"} then {set CONFIG_ICACHE_LRAM_SZ1 1} else {set CONFIG_ICACHE_LRAM_SZ1 0}
+	global CONFIG_ICACHE_LRAM_SZ2
+	if {$tmpvar_13 == "2"} then {set CONFIG_ICACHE_LRAM_SZ2 1} else {set CONFIG_ICACHE_LRAM_SZ2 0}
+	global CONFIG_ICACHE_LRAM_SZ4
+	if {$tmpvar_13 == "4"} then {set CONFIG_ICACHE_LRAM_SZ4 1} else {set CONFIG_ICACHE_LRAM_SZ4 0}
+	global CONFIG_ICACHE_LRAM_SZ8
+	if {$tmpvar_13 == "8"} then {set CONFIG_ICACHE_LRAM_SZ8 1} else {set CONFIG_ICACHE_LRAM_SZ8 0}
+	global CONFIG_ICACHE_LRAM_SZ16
+	if {$tmpvar_13 == "16"} then {set CONFIG_ICACHE_LRAM_SZ16 1} else {set CONFIG_ICACHE_LRAM_SZ16 0}
+	global CONFIG_ICACHE_LRAM_SZ32
+	if {$tmpvar_13 == "32"} then {set CONFIG_ICACHE_LRAM_SZ32 1} else {set CONFIG_ICACHE_LRAM_SZ32 0}
+	global CONFIG_ICACHE_LRAM_SZ64
+	if {$tmpvar_13 == "64"} then {set CONFIG_ICACHE_LRAM_SZ64 1} else {set CONFIG_ICACHE_LRAM_SZ64 0}
+	global CONFIG_ICACHE_LRAM_SZ128
+	if {$tmpvar_13 == "128"} then {set CONFIG_ICACHE_LRAM_SZ128 1} else {set CONFIG_ICACHE_LRAM_SZ128 0}
+	global CONFIG_ICACHE_LRAM_SZ256
+	if {$tmpvar_13 == "256"} then {set CONFIG_ICACHE_LRAM_SZ256 1} else {set CONFIG_ICACHE_LRAM_SZ256 0}
+	global CONFIG_ICACHE_LRSTART
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_LRAM == 1)} then {validate_hex CONFIG_ICACHE_LRSTART "$CONFIG_ICACHE_LRSTART" 8e}
+	global CONFIG_DCACHE_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_DCACHE_ENABLE [expr $CONFIG_DCACHE_ENABLE&15]} else {set CONFIG_DCACHE_ENABLE [expr $CONFIG_DCACHE_ENABLE|16]}
+	global tmpvar_14
+	global CONFIG_DCACHE_ASSO1
+	if {$tmpvar_14 == "1"} then {set CONFIG_DCACHE_ASSO1 1} else {set CONFIG_DCACHE_ASSO1 0}
+	global CONFIG_DCACHE_ASSO2
+	if {$tmpvar_14 == "2"} then {set CONFIG_DCACHE_ASSO2 1} else {set CONFIG_DCACHE_ASSO2 0}
+	global CONFIG_DCACHE_ASSO3
+	if {$tmpvar_14 == "3"} then {set CONFIG_DCACHE_ASSO3 1} else {set CONFIG_DCACHE_ASSO3 0}
+	global CONFIG_DCACHE_ASSO4
+	if {$tmpvar_14 == "4"} then {set CONFIG_DCACHE_ASSO4 1} else {set CONFIG_DCACHE_ASSO4 0}
+	global tmpvar_15
+	global CONFIG_DCACHE_SZ1
+	if {$tmpvar_15 == "1"} then {set CONFIG_DCACHE_SZ1 1} else {set CONFIG_DCACHE_SZ1 0}
+	global CONFIG_DCACHE_SZ2
+	if {$tmpvar_15 == "2"} then {set CONFIG_DCACHE_SZ2 1} else {set CONFIG_DCACHE_SZ2 0}
+	global CONFIG_DCACHE_SZ4
+	if {$tmpvar_15 == "4"} then {set CONFIG_DCACHE_SZ4 1} else {set CONFIG_DCACHE_SZ4 0}
+	global CONFIG_DCACHE_SZ8
+	if {$tmpvar_15 == "8"} then {set CONFIG_DCACHE_SZ8 1} else {set CONFIG_DCACHE_SZ8 0}
+	global CONFIG_DCACHE_SZ16
+	if {$tmpvar_15 == "16"} then {set CONFIG_DCACHE_SZ16 1} else {set CONFIG_DCACHE_SZ16 0}
+	global CONFIG_DCACHE_SZ32
+	if {$tmpvar_15 == "32"} then {set CONFIG_DCACHE_SZ32 1} else {set CONFIG_DCACHE_SZ32 0}
+	global CONFIG_DCACHE_SZ64
+	if {$tmpvar_15 == "64"} then {set CONFIG_DCACHE_SZ64 1} else {set CONFIG_DCACHE_SZ64 0}
+	global CONFIG_DCACHE_SZ128
+	if {$tmpvar_15 == "128"} then {set CONFIG_DCACHE_SZ128 1} else {set CONFIG_DCACHE_SZ128 0}
+	global CONFIG_DCACHE_SZ256
+	if {$tmpvar_15 == "256"} then {set CONFIG_DCACHE_SZ256 1} else {set CONFIG_DCACHE_SZ256 0}
+	global tmpvar_16
+	global CONFIG_DCACHE_LZ16
+	if {$tmpvar_16 == "16"} then {set CONFIG_DCACHE_LZ16 1} else {set CONFIG_DCACHE_LZ16 0}
+	global CONFIG_DCACHE_LZ32
+	if {$tmpvar_16 == "32"} then {set CONFIG_DCACHE_LZ32 1} else {set CONFIG_DCACHE_LZ32 0}
+	global tmpvar_17
+	global CONFIG_DCACHE_ALGORND
+	if {$tmpvar_17 == "Random"} then {set CONFIG_DCACHE_ALGORND 1} else {set CONFIG_DCACHE_ALGORND 0}
+	global CONFIG_DCACHE_ALGODIR
+	if {$tmpvar_17 == "Direct"} then {set CONFIG_DCACHE_ALGODIR 1} else {set CONFIG_DCACHE_ALGODIR 0}
+	global CONFIG_DCACHE_ALGOLRR
+	if {$tmpvar_17 == "LRR"} then {set CONFIG_DCACHE_ALGOLRR 1} else {set CONFIG_DCACHE_ALGOLRR 0}
+	global CONFIG_DCACHE_ALGOLRU
+	if {$tmpvar_17 == "LRU"} then {set CONFIG_DCACHE_ALGOLRU 1} else {set CONFIG_DCACHE_ALGOLRU 0}
+	global CONFIG_DCACHE_LOCK
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1) && ($CONFIG_DCACHE_ASSO1 != 1)} then {
+	set CONFIG_DCACHE_LOCK [expr $CONFIG_DCACHE_LOCK&15]} else {set CONFIG_DCACHE_LOCK [expr $CONFIG_DCACHE_LOCK|16]}
+	global CONFIG_DCACHE_SNOOP
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {
+	set CONFIG_DCACHE_SNOOP [expr $CONFIG_DCACHE_SNOOP&15]} else {set CONFIG_DCACHE_SNOOP [expr $CONFIG_DCACHE_SNOOP|16]}
+	global CONFIG_DCACHE_SNOOP_SEPTAG
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1) && ($CONFIG_DCACHE_SNOOP == 1)} then {
+	set CONFIG_DCACHE_SNOOP_SEPTAG [expr $CONFIG_DCACHE_SNOOP_SEPTAG&15]} else {set CONFIG_DCACHE_SNOOP_SEPTAG [expr $CONFIG_DCACHE_SNOOP_SEPTAG|16]}
+	global CONFIG_CACHE_FIXED
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1 || $CONFIG_DCACHE_ENABLE == 1)} then {validate_hex CONFIG_CACHE_FIXED "$CONFIG_CACHE_FIXED" 0}
+	global CONFIG_DCACHE_LRAM
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE != 1)} then {
+	set CONFIG_DCACHE_LRAM [expr $CONFIG_DCACHE_LRAM&15]} else {set CONFIG_DCACHE_LRAM [expr $CONFIG_DCACHE_LRAM|16]}
+	global tmpvar_18
+	global CONFIG_DCACHE_LRAM_SZ1
+	if {$tmpvar_18 == "1"} then {set CONFIG_DCACHE_LRAM_SZ1 1} else {set CONFIG_DCACHE_LRAM_SZ1 0}
+	global CONFIG_DCACHE_LRAM_SZ2
+	if {$tmpvar_18 == "2"} then {set CONFIG_DCACHE_LRAM_SZ2 1} else {set CONFIG_DCACHE_LRAM_SZ2 0}
+	global CONFIG_DCACHE_LRAM_SZ4
+	if {$tmpvar_18 == "4"} then {set CONFIG_DCACHE_LRAM_SZ4 1} else {set CONFIG_DCACHE_LRAM_SZ4 0}
+	global CONFIG_DCACHE_LRAM_SZ8
+	if {$tmpvar_18 == "8"} then {set CONFIG_DCACHE_LRAM_SZ8 1} else {set CONFIG_DCACHE_LRAM_SZ8 0}
+	global CONFIG_DCACHE_LRAM_SZ16
+	if {$tmpvar_18 == "16"} then {set CONFIG_DCACHE_LRAM_SZ16 1} else {set CONFIG_DCACHE_LRAM_SZ16 0}
+	global CONFIG_DCACHE_LRAM_SZ32
+	if {$tmpvar_18 == "32"} then {set CONFIG_DCACHE_LRAM_SZ32 1} else {set CONFIG_DCACHE_LRAM_SZ32 0}
+	global CONFIG_DCACHE_LRAM_SZ64
+	if {$tmpvar_18 == "64"} then {set CONFIG_DCACHE_LRAM_SZ64 1} else {set CONFIG_DCACHE_LRAM_SZ64 0}
+	global CONFIG_DCACHE_LRAM_SZ128
+	if {$tmpvar_18 == "128"} then {set CONFIG_DCACHE_LRAM_SZ128 1} else {set CONFIG_DCACHE_LRAM_SZ128 0}
+	global CONFIG_DCACHE_LRAM_SZ256
+	if {$tmpvar_18 == "256"} then {set CONFIG_DCACHE_LRAM_SZ256 1} else {set CONFIG_DCACHE_LRAM_SZ256 0}
+	global CONFIG_DCACHE_LRSTART
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_LRAM == 1)} then {validate_hex CONFIG_DCACHE_LRSTART "$CONFIG_DCACHE_LRSTART" 8f}
+}
+
+
+proc menu7 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu3}
+	catch {destroy $w; unregister_active 7}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 7]]
+	message $w.m -width 400 -aspect 300 -text \
+		"MMU"  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "MMU" 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 7; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 7; menu8 .menu8 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 7"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 7; menu6 .menu6 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 7; menu6 .menu6 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 7 0 "Enable MMU       " CONFIG_MMU_ENABLE
+	global tmpvar_19
+	minimenu $w.config.f 7 1 "MMU type              " tmpvar_19 CONFIG_MMU_COMBINED
+	menu $w.config.f.x1.x.menu -tearoffcommand "menutitle \"MMU type              \""
+	$w.config.f.x1.x.menu add radiobutton -label "combined" -variable tmpvar_19 -value "combined" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "split" -variable tmpvar_19 -value "split" -command "update_active"
+	menusplit $w $w.config.f.x1.x.menu 2
+	global tmpvar_20
+	minimenu $w.config.f 7 2 "TLB replacement sheme              " tmpvar_20 CONFIG_MMU_REPARRAY
+	menu $w.config.f.x2.x.menu -tearoffcommand "menutitle \"TLB replacement sheme              \""
+	$w.config.f.x2.x.menu add radiobutton -label "LRU" -variable tmpvar_20 -value "LRU" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "Increment" -variable tmpvar_20 -value "Increment" -command "update_active"
+	menusplit $w $w.config.f.x2.x.menu 2
+	global tmpvar_21
+	minimenu $w.config.f 7 3 "Instruction (or combined) TLB entries" tmpvar_21 CONFIG_MMU_I2
+	menu $w.config.f.x3.x.menu -tearoffcommand "menutitle \"Instruction (or combined) TLB entries\""
+	$w.config.f.x3.x.menu add radiobutton -label "2" -variable tmpvar_21 -value "2" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "4" -variable tmpvar_21 -value "4" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "8" -variable tmpvar_21 -value "8" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "16" -variable tmpvar_21 -value "16" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "32" -variable tmpvar_21 -value "32" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "64" -variable tmpvar_21 -value "64" -command "update_active"
+	menusplit $w $w.config.f.x3.x.menu 6
+	global tmpvar_22
+	minimenu $w.config.f 7 4 "Data TLB entries" tmpvar_22 CONFIG_MMU_D2
+	menu $w.config.f.x4.x.menu -tearoffcommand "menutitle \"Data TLB entries\""
+	$w.config.f.x4.x.menu add radiobutton -label "2" -variable tmpvar_22 -value "2" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "4" -variable tmpvar_22 -value "4" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "8" -variable tmpvar_22 -value "8" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "16" -variable tmpvar_22 -value "16" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "32" -variable tmpvar_22 -value "32" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "64" -variable tmpvar_22 -value "64" -command "update_active"
+	menusplit $w $w.config.f.x4.x.menu 6
+	bool $w.config.f 7 5 "Fast writebuffer       " CONFIG_MMU_FASTWB
+	global tmpvar_23
+	minimenu $w.config.f 7 6 "MMU page size" tmpvar_23 CONFIG_MMU_PAGE_4K
+	menu $w.config.f.x6.x.menu -tearoffcommand "menutitle \"MMU page size\""
+	$w.config.f.x6.x.menu add radiobutton -label "4K" -variable tmpvar_23 -value "4K" -command "update_active"
+	$w.config.f.x6.x.menu add radiobutton -label "8K" -variable tmpvar_23 -value "8K" -command "update_active"
+	$w.config.f.x6.x.menu add radiobutton -label "16K" -variable tmpvar_23 -value "16K" -command "update_active"
+	$w.config.f.x6.x.menu add radiobutton -label "32K" -variable tmpvar_23 -value "32K" -command "update_active"
+	$w.config.f.x6.x.menu add radiobutton -label "Programmable" -variable tmpvar_23 -value "Programmable" -command "update_active"
+	menusplit $w $w.config.f.x6.x.menu 5
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "Processor            "}
+	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu7 {} {
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_MMU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu7.config.f.x0 normal {n l y}} else {configure_entry .menu7.config.f.x0 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1)} then {configure_entry .menu7.config.f.x1 normal {x l}} else {configure_entry .menu7.config.f.x1 disabled {x l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1)} then {configure_entry .menu7.config.f.x2 normal {x l}} else {configure_entry .menu7.config.f.x2 disabled {x l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1)} then {configure_entry .menu7.config.f.x3 normal {x l}} else {configure_entry .menu7.config.f.x3 disabled {x l}}
+	global CONFIG_MMU_SPLIT
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1) && ($CONFIG_MMU_SPLIT == 1)} then {configure_entry .menu7.config.f.x4 normal {x l}} else {configure_entry .menu7.config.f.x4 disabled {x l}}
+	global CONFIG_MMU_FASTWB
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1) && ($CONFIG_MMU_SPLIT == 1)} then {
+	configure_entry .menu7.config.f.x5 normal {n l y}} else {configure_entry .menu7.config.f.x5 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1)} then {configure_entry .menu7.config.f.x6 normal {x l}} else {configure_entry .menu7.config.f.x6 disabled {x l}}
+}
+
+
+proc update_define_menu7 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_MMU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_MMU_ENABLE [expr $CONFIG_MMU_ENABLE&15]} else {set CONFIG_MMU_ENABLE [expr $CONFIG_MMU_ENABLE|16]}
+	global tmpvar_19
+	global CONFIG_MMU_COMBINED
+	if {$tmpvar_19 == "combined"} then {set CONFIG_MMU_COMBINED 1} else {set CONFIG_MMU_COMBINED 0}
+	global CONFIG_MMU_SPLIT
+	if {$tmpvar_19 == "split"} then {set CONFIG_MMU_SPLIT 1} else {set CONFIG_MMU_SPLIT 0}
+	global tmpvar_20
+	global CONFIG_MMU_REPARRAY
+	if {$tmpvar_20 == "LRU"} then {set CONFIG_MMU_REPARRAY 1} else {set CONFIG_MMU_REPARRAY 0}
+	global CONFIG_MMU_REPINCREMENT
+	if {$tmpvar_20 == "Increment"} then {set CONFIG_MMU_REPINCREMENT 1} else {set CONFIG_MMU_REPINCREMENT 0}
+	global tmpvar_21
+	global CONFIG_MMU_I2
+	if {$tmpvar_21 == "2"} then {set CONFIG_MMU_I2 1} else {set CONFIG_MMU_I2 0}
+	global CONFIG_MMU_I4
+	if {$tmpvar_21 == "4"} then {set CONFIG_MMU_I4 1} else {set CONFIG_MMU_I4 0}
+	global CONFIG_MMU_I8
+	if {$tmpvar_21 == "8"} then {set CONFIG_MMU_I8 1} else {set CONFIG_MMU_I8 0}
+	global CONFIG_MMU_I16
+	if {$tmpvar_21 == "16"} then {set CONFIG_MMU_I16 1} else {set CONFIG_MMU_I16 0}
+	global CONFIG_MMU_I32
+	if {$tmpvar_21 == "32"} then {set CONFIG_MMU_I32 1} else {set CONFIG_MMU_I32 0}
+	global CONFIG_MMU_I64
+	if {$tmpvar_21 == "64"} then {set CONFIG_MMU_I64 1} else {set CONFIG_MMU_I64 0}
+	global tmpvar_22
+	global CONFIG_MMU_D2
+	if {$tmpvar_22 == "2"} then {set CONFIG_MMU_D2 1} else {set CONFIG_MMU_D2 0}
+	global CONFIG_MMU_D4
+	if {$tmpvar_22 == "4"} then {set CONFIG_MMU_D4 1} else {set CONFIG_MMU_D4 0}
+	global CONFIG_MMU_D8
+	if {$tmpvar_22 == "8"} then {set CONFIG_MMU_D8 1} else {set CONFIG_MMU_D8 0}
+	global CONFIG_MMU_D16
+	if {$tmpvar_22 == "16"} then {set CONFIG_MMU_D16 1} else {set CONFIG_MMU_D16 0}
+	global CONFIG_MMU_D32
+	if {$tmpvar_22 == "32"} then {set CONFIG_MMU_D32 1} else {set CONFIG_MMU_D32 0}
+	global CONFIG_MMU_D64
+	if {$tmpvar_22 == "64"} then {set CONFIG_MMU_D64 1} else {set CONFIG_MMU_D64 0}
+	global CONFIG_MMU_FASTWB
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1) && ($CONFIG_MMU_SPLIT == 1)} then {
+	set CONFIG_MMU_FASTWB [expr $CONFIG_MMU_FASTWB&15]} else {set CONFIG_MMU_FASTWB [expr $CONFIG_MMU_FASTWB|16]}
+	global tmpvar_23
+	global CONFIG_MMU_PAGE_4K
+	if {$tmpvar_23 == "4K"} then {set CONFIG_MMU_PAGE_4K 1} else {set CONFIG_MMU_PAGE_4K 0}
+	global CONFIG_MMU_PAGE_8K
+	if {$tmpvar_23 == "8K"} then {set CONFIG_MMU_PAGE_8K 1} else {set CONFIG_MMU_PAGE_8K 0}
+	global CONFIG_MMU_PAGE_16K
+	if {$tmpvar_23 == "16K"} then {set CONFIG_MMU_PAGE_16K 1} else {set CONFIG_MMU_PAGE_16K 0}
+	global CONFIG_MMU_PAGE_32K
+	if {$tmpvar_23 == "32K"} then {set CONFIG_MMU_PAGE_32K 1} else {set CONFIG_MMU_PAGE_32K 0}
+	global CONFIG_MMU_PAGE_PROG
+	if {$tmpvar_23 == "Programmable"} then {set CONFIG_MMU_PAGE_PROG 1} else {set CONFIG_MMU_PAGE_PROG 0}
+}
+
+
+proc menu8 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu3}
+	catch {destroy $w; unregister_active 8}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 8]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Debug Support Unit        "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Debug Support Unit        " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 8; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 8; menu9 .menu9 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 8"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 8; menu7 .menu7 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 8; menu7 .menu7 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 8 0 "Enable LEON3 Debug support unit    " CONFIG_DSU_ENABLE
+	bool $w.config.f 8 1 "Instruction trace buffer" CONFIG_DSU_ITRACE
+	global tmpvar_24
+	minimenu $w.config.f 8 2 "Instruction trace buffer size (kbytes)" tmpvar_24 CONFIG_DSU_ITRACESZ1
+	menu $w.config.f.x2.x.menu -tearoffcommand "menutitle \"Instruction trace buffer size (kbytes)\""
+	$w.config.f.x2.x.menu add radiobutton -label "1" -variable tmpvar_24 -value "1" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "2" -variable tmpvar_24 -value "2" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "4" -variable tmpvar_24 -value "4" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "8" -variable tmpvar_24 -value "8" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "16" -variable tmpvar_24 -value "16" -command "update_active"
+	menusplit $w $w.config.f.x2.x.menu 5
+	bool $w.config.f 8 3 "AHB trace buffer" CONFIG_DSU_ATRACE
+	global tmpvar_25
+	minimenu $w.config.f 8 4 "AHB trace buffer size (kbytes)" tmpvar_25 CONFIG_DSU_ATRACESZ1
+	menu $w.config.f.x4.x.menu -tearoffcommand "menutitle \"AHB trace buffer size (kbytes)\""
+	$w.config.f.x4.x.menu add radiobutton -label "1" -variable tmpvar_25 -value "1" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "2" -variable tmpvar_25 -value "2" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "4" -variable tmpvar_25 -value "4" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "8" -variable tmpvar_25 -value "8" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "16" -variable tmpvar_25 -value "16" -command "update_active"
+	menusplit $w $w.config.f.x4.x.menu 5
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "Processor            "}
+	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu8 {} {
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_DSU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	configure_entry .menu8.config.f.x0 normal {n l y}} else {configure_entry .menu8.config.f.x0 disabled {y n l}}
+	global CONFIG_DSU_ITRACE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1)} then {
+	configure_entry .menu8.config.f.x1 normal {n l y}} else {configure_entry .menu8.config.f.x1 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1) && ($CONFIG_DSU_ITRACE == 1)} then {configure_entry .menu8.config.f.x2 normal {x l}} else {configure_entry .menu8.config.f.x2 disabled {x l}}
+	global CONFIG_DSU_ATRACE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1)} then {
+	configure_entry .menu8.config.f.x3 normal {n l y}} else {configure_entry .menu8.config.f.x3 disabled {y n l}}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1) && ($CONFIG_DSU_ATRACE == 1)} then {configure_entry .menu8.config.f.x4 normal {x l}} else {configure_entry .menu8.config.f.x4 disabled {x l}}
+}
+
+
+proc update_define_menu8 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_LEON3
+	global CONFIG_LEON3_CUSTOM
+	global CONFIG_DSU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {
+	set CONFIG_DSU_ENABLE [expr $CONFIG_DSU_ENABLE&15]} else {set CONFIG_DSU_ENABLE [expr $CONFIG_DSU_ENABLE|16]}
+	global CONFIG_DSU_ITRACE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1)} then {
+	set CONFIG_DSU_ITRACE [expr $CONFIG_DSU_ITRACE&15]} else {set CONFIG_DSU_ITRACE [expr $CONFIG_DSU_ITRACE|16]}
+	global tmpvar_24
+	global CONFIG_DSU_ITRACESZ1
+	if {$tmpvar_24 == "1"} then {set CONFIG_DSU_ITRACESZ1 1} else {set CONFIG_DSU_ITRACESZ1 0}
+	global CONFIG_DSU_ITRACESZ2
+	if {$tmpvar_24 == "2"} then {set CONFIG_DSU_ITRACESZ2 1} else {set CONFIG_DSU_ITRACESZ2 0}
+	global CONFIG_DSU_ITRACESZ4
+	if {$tmpvar_24 == "4"} then {set CONFIG_DSU_ITRACESZ4 1} else {set CONFIG_DSU_ITRACESZ4 0}
+	global CONFIG_DSU_ITRACESZ8
+	if {$tmpvar_24 == "8"} then {set CONFIG_DSU_ITRACESZ8 1} else {set CONFIG_DSU_ITRACESZ8 0}
+	global CONFIG_DSU_ITRACESZ16
+	if {$tmpvar_24 == "16"} then {set CONFIG_DSU_ITRACESZ16 1} else {set CONFIG_DSU_ITRACESZ16 0}
+	global CONFIG_DSU_ATRACE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1)} then {
+	set CONFIG_DSU_ATRACE [expr $CONFIG_DSU_ATRACE&15]} else {set CONFIG_DSU_ATRACE [expr $CONFIG_DSU_ATRACE|16]}
+	global tmpvar_25
+	global CONFIG_DSU_ATRACESZ1
+	if {$tmpvar_25 == "1"} then {set CONFIG_DSU_ATRACESZ1 1} else {set CONFIG_DSU_ATRACESZ1 0}
+	global CONFIG_DSU_ATRACESZ2
+	if {$tmpvar_25 == "2"} then {set CONFIG_DSU_ATRACESZ2 1} else {set CONFIG_DSU_ATRACESZ2 0}
+	global CONFIG_DSU_ATRACESZ4
+	if {$tmpvar_25 == "4"} then {set CONFIG_DSU_ATRACESZ4 1} else {set CONFIG_DSU_ATRACESZ4 0}
+	global CONFIG_DSU_ATRACESZ8
+	if {$tmpvar_25 == "8"} then {set CONFIG_DSU_ATRACESZ8 1} else {set CONFIG_DSU_ATRACESZ8 0}
+	global CONFIG_DSU_ATRACESZ16
+	if {$tmpvar_25 == "16"} then {set CONFIG_DSU_ATRACESZ16 1} else {set CONFIG_DSU_ATRACESZ16 0}
+}
+
+
+proc menu9 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu3}
+	catch {destroy $w; unregister_active 9}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 9]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Fault-tolerance  "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Fault-tolerance  " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 9; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 9; menu10 .menu10 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 9"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 9; menu8 .menu8 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 9; menu8 .menu8 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "Processor            "}
+	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu9 {} {
+}
+
+
+proc update_define_menu9 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+}
+
+
+proc menu10 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu3}
+	catch {destroy $w; unregister_active 10}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 10]]
+	message $w.m -width 400 -aspect 300 -text \
+		"VHDL debug settings       "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "VHDL debug settings       " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 10; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 10; catch {destroy .menu3}; unregister_active 3; menu11 .menu11 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 10"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 10; menu9 .menu9 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 10; menu9 .menu9 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 10 0 "Processor disassembly to console         " CONFIG_IU_DISAS
+	bool $w.config.f 10 1 "Processor disassembly in netlist         " CONFIG_IU_DISAS_NET
+	bool $w.config.f 10 2 "32-bit program counters       " CONFIG_DEBUG_PC32
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu3] == 0} then {menu3 .menu3 "Processor            "}
+	set winx [expr [winfo x .menu3]+30]; set winy [expr [winfo y .menu3]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu10 {} {
+	global CONFIG_LEON3
+	global CONFIG_IU_DISAS
+	if {($CONFIG_LEON3 == 1)} then {
+	configure_entry .menu10.config.f.x0 normal {n l y}} else {configure_entry .menu10.config.f.x0 disabled {y n l}}
+	global CONFIG_IU_DISAS_NET
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_IU_DISAS == 1)} then {
+	configure_entry .menu10.config.f.x1 normal {n l y}} else {configure_entry .menu10.config.f.x1 disabled {y n l}}
+	global CONFIG_DEBUG_PC32
+	if {($CONFIG_LEON3 == 1)} then {
+	configure_entry .menu10.config.f.x2 normal {n l y}} else {configure_entry .menu10.config.f.x2 disabled {y n l}}
+}
+
+
+proc update_define_menu10 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_LEON3
+	global CONFIG_IU_DISAS
+	if {($CONFIG_LEON3 == 1)} then {
+	set CONFIG_IU_DISAS [expr $CONFIG_IU_DISAS&15]} else {set CONFIG_IU_DISAS [expr $CONFIG_IU_DISAS|16]}
+	global CONFIG_IU_DISAS_NET
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_IU_DISAS == 1)} then {
+	set CONFIG_IU_DISAS_NET [expr $CONFIG_IU_DISAS_NET&15]} else {set CONFIG_IU_DISAS_NET [expr $CONFIG_IU_DISAS_NET|16]}
+	global CONFIG_DEBUG_PC32
+	if {($CONFIG_LEON3 == 1)} then {
+	set CONFIG_DEBUG_PC32 [expr $CONFIG_DEBUG_PC32&15]} else {set CONFIG_DEBUG_PC32 [expr $CONFIG_DEBUG_PC32|16]}
+}
+
+
+menu_option menu11 11 "AMBA configuration"
+proc menu11 {w title} {
+	set oldFocus [focus]
+	catch {destroy $w; unregister_active 11}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 11]]
+	message $w.m -width 400 -aspect 300 -text \
+		"AMBA configuration"  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "AMBA configuration" 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 11; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 11; menu12 .menu12 \"$title\""
+	frame $w.f
+	button $w.f.back -text "Main Menu" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 11"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 11; menu10 .menu10 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 11; menu10 .menu10 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	int $w.config.f 11 0 "Default AHB master" CONFIG_AHB_DEFMST
+	bool $w.config.f 11 1 "Round-robin arbiter                       " CONFIG_AHB_RROBIN
+	bool $w.config.f 11 2 "AHB split-transaction support             " CONFIG_AHB_SPLIT
+	bool $w.config.f 11 3 "Enable full plug&play decoding            " CONFIG_AHB_FPNPEN
+	hex $w.config.f 11 4 "I/O area start address (haddr\[31:20\]) " CONFIG_AHB_IOADDR
+	hex $w.config.f 11 5 "AHB/APB bridge address (haddr\[31:20\]) " CONFIG_APB_HADDR
+	bool $w.config.f 11 6 "Enable AMBA AHB monitor              " CONFIG_AHB_MON
+	bool $w.config.f 11 7 "Report AHB errors                  " CONFIG_AHB_MONERR
+	bool $w.config.f 11 8 "Report AHB warings                 " CONFIG_AHB_MONWAR
+	bool $w.config.f 11 9 "Write trace to simulation console    " CONFIG_AHB_DTRACE
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu11 {} {
+	global CONFIG_AHB_MON
+	global CONFIG_AHB_MONERR
+	if {($CONFIG_AHB_MON == 1)} then {
+	configure_entry .menu11.config.f.x7 normal {n l y}} else {configure_entry .menu11.config.f.x7 disabled {y n l}}
+	global CONFIG_AHB_MONWAR
+	if {($CONFIG_AHB_MON == 1)} then {
+	configure_entry .menu11.config.f.x8 normal {n l y}} else {configure_entry .menu11.config.f.x8 disabled {y n l}}
+}
+
+
+proc update_define_menu11 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_AHB_MON
+	global CONFIG_AHB_MONERR
+	if {($CONFIG_AHB_MON == 1)} then {
+	set CONFIG_AHB_MONERR [expr $CONFIG_AHB_MONERR&15]} else {set CONFIG_AHB_MONERR [expr $CONFIG_AHB_MONERR|16]}
+	global CONFIG_AHB_MONWAR
+	if {($CONFIG_AHB_MON == 1)} then {
+	set CONFIG_AHB_MONWAR [expr $CONFIG_AHB_MONWAR&15]} else {set CONFIG_AHB_MONWAR [expr $CONFIG_AHB_MONWAR|16]}
+}
+
+
+menu_option menu12 12 "Debug Link           "
+proc menu12 {w title} {
+	set oldFocus [focus]
+	catch {destroy $w; unregister_active 12}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 12]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Debug Link           "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Debug Link           " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 12; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 12; menu13 .menu13 \"$title\""
+	frame $w.f
+	button $w.f.back -text "Main Menu" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 12"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 12; menu11 .menu11 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 12; menu11 .menu11 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 12 0 "Serial Debug Link (RS232)                " CONFIG_DSU_UART
+	bool $w.config.f 12 1 "JTAG Debug Link" CONFIG_DSU_JTAG
+	bool $w.config.f 12 2 "Ethernet Debug Communication Link (EDCL)" CONFIG_DSU_ETH
+	global tmpvar_28
+	minimenu $w.config.f 12 3 "Ethernet/AHB bridge buffer size (kbytes)" tmpvar_28 CONFIG_DSU_ETHSZ1
+	menu $w.config.f.x3.x.menu -tearoffcommand "menutitle \"Ethernet/AHB bridge buffer size (kbytes)\""
+	$w.config.f.x3.x.menu add radiobutton -label "1" -variable tmpvar_28 -value "1" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "2" -variable tmpvar_28 -value "2" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "4" -variable tmpvar_28 -value "4" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "8" -variable tmpvar_28 -value "8" -command "update_active"
+	$w.config.f.x3.x.menu add radiobutton -label "16" -variable tmpvar_28 -value "16" -command "update_active"
+	menusplit $w $w.config.f.x3.x.menu 5
+	hex $w.config.f 12 4 "MSB 16 bits of IP address (hex)       " CONFIG_DSU_IPMSB
+	hex $w.config.f 12 5 "LSB 16 bits of IP address (hex)       " CONFIG_DSU_IPLSB
+	hex $w.config.f 12 6 "MSB 24 bits of ethern number (hex)    " CONFIG_DSU_ETHMSB
+	hex $w.config.f 12 7 "LSB 24 bits of ethern number (hex)    " CONFIG_DSU_ETHLSB
+	bool $w.config.f 12 8 "Programmable 4-bit LSB of MAC/IP address" CONFIG_DSU_ETH_PROG
+	bool $w.config.f 12 9 "EDCL disable pin                     " CONFIG_DSU_ETH_DIS
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu12 {} {
+	global CONFIG_GRETH_ENABLE
+	global CONFIG_DSU_ETH
+	if {($CONFIG_GRETH_ENABLE == 1)} then {
+	configure_entry .menu12.config.f.x2 normal {n l y}} else {configure_entry .menu12.config.f.x2 disabled {y n l}}
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {configure_entry .menu12.config.f.x3 normal {x l}} else {configure_entry .menu12.config.f.x3 disabled {x l}}
+	global CONFIG_DSU_IPMSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {.menu12.config.f.x4.x configure -state normal -foreground [ cget .ref -foreground ]; .menu12.config.f.x4.l configure -state normal; } else {.menu12.config.f.x4.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu12.config.f.x4.l configure -state disabled}
+	global CONFIG_DSU_IPLSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {.menu12.config.f.x5.x configure -state normal -foreground [ cget .ref -foreground ]; .menu12.config.f.x5.l configure -state normal; } else {.menu12.config.f.x5.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu12.config.f.x5.l configure -state disabled}
+	global CONFIG_DSU_ETHMSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {.menu12.config.f.x6.x configure -state normal -foreground [ cget .ref -foreground ]; .menu12.config.f.x6.l configure -state normal; } else {.menu12.config.f.x6.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu12.config.f.x6.l configure -state disabled}
+	global CONFIG_DSU_ETHLSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {.menu12.config.f.x7.x configure -state normal -foreground [ cget .ref -foreground ]; .menu12.config.f.x7.l configure -state normal; } else {.menu12.config.f.x7.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu12.config.f.x7.l configure -state disabled}
+	global CONFIG_DSU_ETH_PROG
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {
+	configure_entry .menu12.config.f.x8 normal {n l y}} else {configure_entry .menu12.config.f.x8 disabled {y n l}}
+	global CONFIG_DSU_ETH_DIS
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1) && ($CONFIG_DSU_ETH_PROG == 1)} then {
+	configure_entry .menu12.config.f.x9 normal {n l y}} else {configure_entry .menu12.config.f.x9 disabled {y n l}}
+}
+
+
+proc update_define_menu12 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_GRETH_ENABLE
+	global CONFIG_DSU_ETH
+	if {($CONFIG_GRETH_ENABLE == 1)} then {
+	set CONFIG_DSU_ETH [expr $CONFIG_DSU_ETH&15]} else {set CONFIG_DSU_ETH [expr $CONFIG_DSU_ETH|16]}
+	global tmpvar_28
+	global CONFIG_DSU_ETHSZ1
+	if {$tmpvar_28 == "1"} then {set CONFIG_DSU_ETHSZ1 1} else {set CONFIG_DSU_ETHSZ1 0}
+	global CONFIG_DSU_ETHSZ2
+	if {$tmpvar_28 == "2"} then {set CONFIG_DSU_ETHSZ2 1} else {set CONFIG_DSU_ETHSZ2 0}
+	global CONFIG_DSU_ETHSZ4
+	if {$tmpvar_28 == "4"} then {set CONFIG_DSU_ETHSZ4 1} else {set CONFIG_DSU_ETHSZ4 0}
+	global CONFIG_DSU_ETHSZ8
+	if {$tmpvar_28 == "8"} then {set CONFIG_DSU_ETHSZ8 1} else {set CONFIG_DSU_ETHSZ8 0}
+	global CONFIG_DSU_ETHSZ16
+	if {$tmpvar_28 == "16"} then {set CONFIG_DSU_ETHSZ16 1} else {set CONFIG_DSU_ETHSZ16 0}
+	global CONFIG_DSU_IPMSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {validate_hex CONFIG_DSU_IPMSB "$CONFIG_DSU_IPMSB" C0A8}
+	global CONFIG_DSU_IPLSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {validate_hex CONFIG_DSU_IPLSB "$CONFIG_DSU_IPLSB" 0033}
+	global CONFIG_DSU_ETHMSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {validate_hex CONFIG_DSU_ETHMSB "$CONFIG_DSU_ETHMSB" 020000}
+	global CONFIG_DSU_ETHLSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {validate_hex CONFIG_DSU_ETHLSB "$CONFIG_DSU_ETHLSB" 000000}
+	global CONFIG_DSU_ETH_PROG
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {
+	set CONFIG_DSU_ETH_PROG [expr $CONFIG_DSU_ETH_PROG&15]} else {set CONFIG_DSU_ETH_PROG [expr $CONFIG_DSU_ETH_PROG|16]}
+	global CONFIG_DSU_ETH_DIS
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1) && ($CONFIG_DSU_ETH_PROG == 1)} then {
+	set CONFIG_DSU_ETH_DIS [expr $CONFIG_DSU_ETH_DIS&15]} else {set CONFIG_DSU_ETH_DIS [expr $CONFIG_DSU_ETH_DIS|16]}
+}
+
+
+menu_option menu13 13 "Memory controllers                "
+proc menu13 {w title} {
+	set oldFocus [focus]
+	catch {destroy $w; unregister_active 13}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 13]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Memory controllers                "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Memory controllers                " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 13; break"
+	set nextscript "catch {focus $oldFocus}; menu14 .menu14 \"$title\""
+	frame $w.f
+	button $w.f.back -text "Main Menu" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 13"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 13; menu12 .menu12 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 13; menu12 .menu12 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	submenu $w.config.f 13 0 "Leon2 memory controller        " 14
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu13 {} {
+}
+
+
+proc update_define_menu13 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+}
+
+
+proc menu14 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu13}
+	catch {destroy $w; unregister_active 14}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 14]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Leon2 memory controller        "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Leon2 memory controller        " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 14; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 14; catch {destroy .menu13}; unregister_active 13; menu15 .menu15 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 14"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 14; menu13 .menu13 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 14; menu13 .menu13 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 14 0 "Enable Leon2 memory controller  " CONFIG_MCTRL_LEON2
+	bool $w.config.f 14 1 "8-bit PROM/SRAM bus support    " CONFIG_MCTRL_8BIT
+	bool $w.config.f 14 2 "16-bit PROM/SRAM bus support    " CONFIG_MCTRL_16BIT
+	bool $w.config.f 14 3 "5th SRAM chip-select  " CONFIG_MCTRL_5CS
+	bool $w.config.f 14 4 "SDRAM controller       " CONFIG_MCTRL_SDRAM
+	bool $w.config.f 14 5 "Separate address and data buses" CONFIG_MCTRL_SDRAM_SEPBUS
+	bool $w.config.f 14 6 "64-bit SDRAM data bus" CONFIG_MCTRL_SDRAM_BUS64
+	bool $w.config.f 14 7 "Unsynchronized sdclock" CONFIG_MCTRL_SDRAM_INVCLK
+	bool $w.config.f 14 8 "Enable page burst operation     " CONFIG_MCTRL_PAGE
+	bool $w.config.f 14 9 "Enable programmable page burst " CONFIG_MCTRL_PROGPAGE
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu13] == 0} then {menu13 .menu13 "Memory controllers                "}
+	set winx [expr [winfo x .menu13]+30]; set winy [expr [winfo y .menu13]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu14 {} {
+	global CONFIG_MCTRL_LEON2
+	global CONFIG_MCTRL_8BIT
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {
+	configure_entry .menu14.config.f.x1 normal {n l y}} else {configure_entry .menu14.config.f.x1 disabled {y n l}}
+	global CONFIG_MCTRL_16BIT
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {
+	configure_entry .menu14.config.f.x2 normal {n l y}} else {configure_entry .menu14.config.f.x2 disabled {y n l}}
+	global CONFIG_MCTRL_5CS
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {
+	configure_entry .menu14.config.f.x3 normal {n l y}} else {configure_entry .menu14.config.f.x3 disabled {y n l}}
+	global CONFIG_MCTRL_SDRAM
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {
+	configure_entry .menu14.config.f.x4 normal {n l y}} else {configure_entry .menu14.config.f.x4 disabled {y n l}}
+	global CONFIG_MCTRL_SDRAM_SEPBUS
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1)} then {
+	configure_entry .menu14.config.f.x5 normal {n l y}} else {configure_entry .menu14.config.f.x5 disabled {y n l}}
+	global CONFIG_MCTRL_SDRAM_BUS64
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_SDRAM_SEPBUS == 1)} then {
+	configure_entry .menu14.config.f.x6 normal {n l y}} else {configure_entry .menu14.config.f.x6 disabled {y n l}}
+	global CONFIG_MCTRL_SDRAM_INVCLK
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_SDRAM_SEPBUS == 1)} then {
+	configure_entry .menu14.config.f.x7 normal {n l y}} else {configure_entry .menu14.config.f.x7 disabled {y n l}}
+	global CONFIG_MCTRL_PAGE
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1)} then {
+	configure_entry .menu14.config.f.x8 normal {n l y}} else {configure_entry .menu14.config.f.x8 disabled {y n l}}
+	global CONFIG_MCTRL_PROGPAGE
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_PAGE == 1)} then {
+	configure_entry .menu14.config.f.x9 normal {n l y}} else {configure_entry .menu14.config.f.x9 disabled {y n l}}
+}
+
+
+proc update_define_menu14 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_MCTRL_LEON2
+	global CONFIG_MCTRL_8BIT
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {
+	set CONFIG_MCTRL_8BIT [expr $CONFIG_MCTRL_8BIT&15]} else {set CONFIG_MCTRL_8BIT [expr $CONFIG_MCTRL_8BIT|16]}
+	global CONFIG_MCTRL_16BIT
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {
+	set CONFIG_MCTRL_16BIT [expr $CONFIG_MCTRL_16BIT&15]} else {set CONFIG_MCTRL_16BIT [expr $CONFIG_MCTRL_16BIT|16]}
+	global CONFIG_MCTRL_5CS
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {
+	set CONFIG_MCTRL_5CS [expr $CONFIG_MCTRL_5CS&15]} else {set CONFIG_MCTRL_5CS [expr $CONFIG_MCTRL_5CS|16]}
+	global CONFIG_MCTRL_SDRAM
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {
+	set CONFIG_MCTRL_SDRAM [expr $CONFIG_MCTRL_SDRAM&15]} else {set CONFIG_MCTRL_SDRAM [expr $CONFIG_MCTRL_SDRAM|16]}
+	global CONFIG_MCTRL_SDRAM_SEPBUS
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1)} then {
+	set CONFIG_MCTRL_SDRAM_SEPBUS [expr $CONFIG_MCTRL_SDRAM_SEPBUS&15]} else {set CONFIG_MCTRL_SDRAM_SEPBUS [expr $CONFIG_MCTRL_SDRAM_SEPBUS|16]}
+	global CONFIG_MCTRL_SDRAM_BUS64
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_SDRAM_SEPBUS == 1)} then {
+	set CONFIG_MCTRL_SDRAM_BUS64 [expr $CONFIG_MCTRL_SDRAM_BUS64&15]} else {set CONFIG_MCTRL_SDRAM_BUS64 [expr $CONFIG_MCTRL_SDRAM_BUS64|16]}
+	global CONFIG_MCTRL_SDRAM_INVCLK
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_SDRAM_SEPBUS == 1)} then {
+	set CONFIG_MCTRL_SDRAM_INVCLK [expr $CONFIG_MCTRL_SDRAM_INVCLK&15]} else {set CONFIG_MCTRL_SDRAM_INVCLK [expr $CONFIG_MCTRL_SDRAM_INVCLK|16]}
+	global CONFIG_MCTRL_PAGE
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1)} then {
+	set CONFIG_MCTRL_PAGE [expr $CONFIG_MCTRL_PAGE&15]} else {set CONFIG_MCTRL_PAGE [expr $CONFIG_MCTRL_PAGE|16]}
+	global CONFIG_MCTRL_PROGPAGE
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_PAGE == 1)} then {
+	set CONFIG_MCTRL_PROGPAGE [expr $CONFIG_MCTRL_PROGPAGE&15]} else {set CONFIG_MCTRL_PROGPAGE [expr $CONFIG_MCTRL_PROGPAGE|16]}
+}
+
+
+menu_option menu15 15 "Peripherals             "
+proc menu15 {w title} {
+	set oldFocus [focus]
+	catch {destroy $w; unregister_active 15}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 15]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Peripherals             "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Peripherals             " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 15; break"
+	set nextscript "catch {focus $oldFocus}; menu16 .menu16 \"$title\""
+	frame $w.f
+	button $w.f.back -text "Main Menu" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 15"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 15; menu14 .menu14 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 15; menu14 .menu14 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	submenu $w.config.f 15 0 "On-chip RAM/ROM                 " 16
+	submenu $w.config.f 15 1 "Ethernet             " 17
+	submenu $w.config.f 15 2 "UARTs, timers and irq control         " 18
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu15 {} {
+}
+
+
+proc update_define_menu15 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+}
+
+
+proc menu16 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu15}
+	catch {destroy $w; unregister_active 16}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 16]]
+	message $w.m -width 400 -aspect 300 -text \
+		"On-chip RAM/ROM                 "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "On-chip RAM/ROM                 " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 16; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 16; menu17 .menu17 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 16"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 16; menu15 .menu15 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 16; menu15 .menu15 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 16 0 "On-chip AHB ROM                   " CONFIG_AHBROM_ENABLE
+	hex $w.config.f 16 1 "ROM start address (haddr\[31:20\]) " CONFIG_AHBROM_START
+	bool $w.config.f 16 2 "Pipelined ROM access              " CONFIG_AHBROM_PIPE
+	bool $w.config.f 16 3 "On-chip AHB RAM                   " CONFIG_AHBRAM_ENABLE
+	global tmpvar_29
+	minimenu $w.config.f 16 4 "AHB RAM size (Kbyte)" tmpvar_29 CONFIG_AHBRAM_SZ1
+	menu $w.config.f.x4.x.menu -tearoffcommand "menutitle \"AHB RAM size (Kbyte)\""
+	$w.config.f.x4.x.menu add radiobutton -label "1" -variable tmpvar_29 -value "1" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "2" -variable tmpvar_29 -value "2" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "4" -variable tmpvar_29 -value "4" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "8" -variable tmpvar_29 -value "8" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "16" -variable tmpvar_29 -value "16" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "32" -variable tmpvar_29 -value "32" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "64" -variable tmpvar_29 -value "64" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "128" -variable tmpvar_29 -value "128" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "256" -variable tmpvar_29 -value "256" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "512" -variable tmpvar_29 -value "512" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "1024" -variable tmpvar_29 -value "1024" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "2048" -variable tmpvar_29 -value "2048" -command "update_active"
+	$w.config.f.x4.x.menu add radiobutton -label "4096" -variable tmpvar_29 -value "4096" -command "update_active"
+	menusplit $w $w.config.f.x4.x.menu 13
+	hex $w.config.f 16 5 "RAM start address (haddr\[31:20\]) " CONFIG_AHBRAM_START
+	bool $w.config.f 16 6 "Extra pipeline stage             " CONFIG_AHBRAM_PIPE
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu15] == 0} then {menu15 .menu15 "Peripherals             "}
+	set winx [expr [winfo x .menu15]+30]; set winy [expr [winfo y .menu15]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu16 {} {
+	global CONFIG_AHBROM_ENABLE
+	global CONFIG_AHBROM_START
+	if {($CONFIG_AHBROM_ENABLE == 1)} then {.menu16.config.f.x1.x configure -state normal -foreground [ cget .ref -foreground ]; .menu16.config.f.x1.l configure -state normal; } else {.menu16.config.f.x1.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu16.config.f.x1.l configure -state disabled}
+	global CONFIG_AHBROM_PIPE
+	if {($CONFIG_AHBROM_ENABLE == 1)} then {
+	configure_entry .menu16.config.f.x2 normal {n l y}} else {configure_entry .menu16.config.f.x2 disabled {y n l}}
+	global CONFIG_AHBRAM_ENABLE
+	if {($CONFIG_AHBRAM_ENABLE == 1)} then {configure_entry .menu16.config.f.x4 normal {x l}} else {configure_entry .menu16.config.f.x4 disabled {x l}}
+	global CONFIG_AHBRAM_START
+	if {($CONFIG_AHBRAM_ENABLE == 1)} then {.menu16.config.f.x5.x configure -state normal -foreground [ cget .ref -foreground ]; .menu16.config.f.x5.l configure -state normal; } else {.menu16.config.f.x5.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu16.config.f.x5.l configure -state disabled}
+	global CONFIG_AHBRAM_PIPE
+	if {($CONFIG_AHBRAM_ENABLE == 1)} then {
+	configure_entry .menu16.config.f.x6 normal {n l y}} else {configure_entry .menu16.config.f.x6 disabled {y n l}}
+}
+
+
+proc update_define_menu16 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_AHBROM_ENABLE
+	global CONFIG_AHBROM_START
+	if {($CONFIG_AHBROM_ENABLE == 1)} then {validate_hex CONFIG_AHBROM_START "$CONFIG_AHBROM_START" 000}
+	global CONFIG_AHBROM_PIPE
+	if {($CONFIG_AHBROM_ENABLE == 1)} then {
+	set CONFIG_AHBROM_PIPE [expr $CONFIG_AHBROM_PIPE&15]} else {set CONFIG_AHBROM_PIPE [expr $CONFIG_AHBROM_PIPE|16]}
+	global tmpvar_29
+	global CONFIG_AHBRAM_SZ1
+	if {$tmpvar_29 == "1"} then {set CONFIG_AHBRAM_SZ1 1} else {set CONFIG_AHBRAM_SZ1 0}
+	global CONFIG_AHBRAM_SZ2
+	if {$tmpvar_29 == "2"} then {set CONFIG_AHBRAM_SZ2 1} else {set CONFIG_AHBRAM_SZ2 0}
+	global CONFIG_AHBRAM_SZ4
+	if {$tmpvar_29 == "4"} then {set CONFIG_AHBRAM_SZ4 1} else {set CONFIG_AHBRAM_SZ4 0}
+	global CONFIG_AHBRAM_SZ8
+	if {$tmpvar_29 == "8"} then {set CONFIG_AHBRAM_SZ8 1} else {set CONFIG_AHBRAM_SZ8 0}
+	global CONFIG_AHBRAM_SZ16
+	if {$tmpvar_29 == "16"} then {set CONFIG_AHBRAM_SZ16 1} else {set CONFIG_AHBRAM_SZ16 0}
+	global CONFIG_AHBRAM_SZ32
+	if {$tmpvar_29 == "32"} then {set CONFIG_AHBRAM_SZ32 1} else {set CONFIG_AHBRAM_SZ32 0}
+	global CONFIG_AHBRAM_SZ64
+	if {$tmpvar_29 == "64"} then {set CONFIG_AHBRAM_SZ64 1} else {set CONFIG_AHBRAM_SZ64 0}
+	global CONFIG_AHBRAM_SZ128
+	if {$tmpvar_29 == "128"} then {set CONFIG_AHBRAM_SZ128 1} else {set CONFIG_AHBRAM_SZ128 0}
+	global CONFIG_AHBRAM_SZ256
+	if {$tmpvar_29 == "256"} then {set CONFIG_AHBRAM_SZ256 1} else {set CONFIG_AHBRAM_SZ256 0}
+	global CONFIG_AHBRAM_SZ512
+	if {$tmpvar_29 == "512"} then {set CONFIG_AHBRAM_SZ512 1} else {set CONFIG_AHBRAM_SZ512 0}
+	global CONFIG_AHBRAM_SZ1024
+	if {$tmpvar_29 == "1024"} then {set CONFIG_AHBRAM_SZ1024 1} else {set CONFIG_AHBRAM_SZ1024 0}
+	global CONFIG_AHBRAM_SZ2048
+	if {$tmpvar_29 == "2048"} then {set CONFIG_AHBRAM_SZ2048 1} else {set CONFIG_AHBRAM_SZ2048 0}
+	global CONFIG_AHBRAM_SZ4096
+	if {$tmpvar_29 == "4096"} then {set CONFIG_AHBRAM_SZ4096 1} else {set CONFIG_AHBRAM_SZ4096 0}
+	global CONFIG_AHBRAM_ENABLE
+	global CONFIG_AHBRAM_START
+	if {($CONFIG_AHBRAM_ENABLE == 1)} then {validate_hex CONFIG_AHBRAM_START "$CONFIG_AHBRAM_START" A00}
+	global CONFIG_AHBRAM_PIPE
+	if {($CONFIG_AHBRAM_ENABLE == 1)} then {
+	set CONFIG_AHBRAM_PIPE [expr $CONFIG_AHBRAM_PIPE&15]} else {set CONFIG_AHBRAM_PIPE [expr $CONFIG_AHBRAM_PIPE|16]}
+}
+
+
+proc menu17 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu15}
+	catch {destroy $w; unregister_active 17}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 17]]
+	message $w.m -width 400 -aspect 300 -text \
+		"Ethernet             "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "Ethernet             " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 17; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 17; menu18 .menu18 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 17"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 17; menu16 .menu16 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 17; menu16 .menu16 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 17 0 "Gaisler Research 10/100/1000 Mbit Ethernet MAC " CONFIG_GRETH_ENABLE
+	bool $w.config.f 17 1 "Enable 1000 Mbit support    " CONFIG_GRETH_GIGA
+	global tmpvar_30
+	minimenu $w.config.f 17 2 "AHB FIFO size (words)            " tmpvar_30 CONFIG_GRETH_FIFO4
+	menu $w.config.f.x2.x.menu -tearoffcommand "menutitle \"AHB FIFO size (words)            \""
+	$w.config.f.x2.x.menu add radiobutton -label "4" -variable tmpvar_30 -value "4" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "8" -variable tmpvar_30 -value "8" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "16" -variable tmpvar_30 -value "16" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "32" -variable tmpvar_30 -value "32" -command "update_active"
+	$w.config.f.x2.x.menu add radiobutton -label "64" -variable tmpvar_30 -value "64" -command "update_active"
+	menusplit $w $w.config.f.x2.x.menu 5
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu15] == 0} then {menu15 .menu15 "Peripherals             "}
+	set winx [expr [winfo x .menu15]+30]; set winy [expr [winfo y .menu15]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu17 {} {
+	global CONFIG_GRETH_ENABLE
+	global CONFIG_GRETH_GIGA
+	if {($CONFIG_GRETH_ENABLE == 1)} then {
+	configure_entry .menu17.config.f.x1 normal {n l y}} else {configure_entry .menu17.config.f.x1 disabled {y n l}}
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_GRETH_GIGA == 0)} then {configure_entry .menu17.config.f.x2 normal {x l}} else {configure_entry .menu17.config.f.x2 disabled {x l}}
+}
+
+
+proc update_define_menu17 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global CONFIG_GRETH_ENABLE
+	global CONFIG_GRETH_GIGA
+	if {($CONFIG_GRETH_ENABLE == 1)} then {
+	set CONFIG_GRETH_GIGA [expr $CONFIG_GRETH_GIGA&15]} else {set CONFIG_GRETH_GIGA [expr $CONFIG_GRETH_GIGA|16]}
+	global tmpvar_30
+	global CONFIG_GRETH_FIFO4
+	if {$tmpvar_30 == "4"} then {set CONFIG_GRETH_FIFO4 1} else {set CONFIG_GRETH_FIFO4 0}
+	global CONFIG_GRETH_FIFO8
+	if {$tmpvar_30 == "8"} then {set CONFIG_GRETH_FIFO8 1} else {set CONFIG_GRETH_FIFO8 0}
+	global CONFIG_GRETH_FIFO16
+	if {$tmpvar_30 == "16"} then {set CONFIG_GRETH_FIFO16 1} else {set CONFIG_GRETH_FIFO16 0}
+	global CONFIG_GRETH_FIFO32
+	if {$tmpvar_30 == "32"} then {set CONFIG_GRETH_FIFO32 1} else {set CONFIG_GRETH_FIFO32 0}
+	global CONFIG_GRETH_FIFO64
+	if {$tmpvar_30 == "64"} then {set CONFIG_GRETH_FIFO64 1} else {set CONFIG_GRETH_FIFO64 0}
+}
+
+
+proc menu18 {w title} {
+	set oldFocus [focus]
+	catch {focus .menu15}
+	catch {destroy $w; unregister_active 18}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 18]]
+	message $w.m -width 400 -aspect 300 -text \
+		"UARTs, timers and irq control         "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "UARTs, timers and irq control         " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 18; break"
+	set nextscript "catch {focus $oldFocus}; destroy $w; unregister_active 18; catch {destroy .menu15}; unregister_active 15; menu19 .menu19 \"$title\""
+	frame $w.f
+	button $w.f.back -text "OK" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 18"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	bind all <Alt-n> $nextscript
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 18; menu17 .menu17 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 18; menu17 .menu17 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 18 0 "Enable console UART                  " CONFIG_UART1_ENABLE
+	global tmpvar_31
+	minimenu $w.config.f 18 1 "UART1 FIFO depth" tmpvar_31 CONFIG_UA1_FIFO1
+	menu $w.config.f.x1.x.menu -tearoffcommand "menutitle \"UART1 FIFO depth\""
+	$w.config.f.x1.x.menu add radiobutton -label "1" -variable tmpvar_31 -value "1" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "2" -variable tmpvar_31 -value "2" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "4" -variable tmpvar_31 -value "4" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "8" -variable tmpvar_31 -value "8" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "16" -variable tmpvar_31 -value "16" -command "update_active"
+	$w.config.f.x1.x.menu add radiobutton -label "32" -variable tmpvar_31 -value "32" -command "update_active"
+	menusplit $w $w.config.f.x1.x.menu 6
+	bool $w.config.f 18 2 "Enable LEON3 interrupt controller    " CONFIG_IRQ3_ENABLE
+	bool $w.config.f 18 3 "Enable secondary interrupts           " CONFIG_IRQ3_SEC
+	int $w.config.f 18 4 "Secondary interrupt number (1 - 15)    " CONFIG_IRQ3_NSEC
+	bool $w.config.f 18 5 "Enable Timer Unit                    " CONFIG_GPT_ENABLE
+	int $w.config.f 18 6 "Number of timers (1 - 7)              " CONFIG_GPT_NTIM
+	int $w.config.f 18 7 "Scaler width (2 - 16)                 " CONFIG_GPT_SW
+	int $w.config.f 18 8 "Timer width (2 - 32)                  " CONFIG_GPT_TW
+	int $w.config.f 18 9 "Timer unit interrupt                  " CONFIG_GPT_IRQ
+	bool $w.config.f 18 10 "Separate interrupts                  " CONFIG_GPT_SEPIRQ
+	bool $w.config.f 18 11 "Watchdog enable                      " CONFIG_GPT_WDOGEN
+	hex $w.config.f 18 12 "Initial watchdog time-out value       " CONFIG_GPT_WDOG
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	if {[winfo exists .menu15] == 0} then {menu15 .menu15 "Peripherals             "}
+	set winx [expr [winfo x .menu15]+30]; set winy [expr [winfo y .menu15]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu18 {} {
+	global CONFIG_UART1_ENABLE
+	if {($CONFIG_UART1_ENABLE == 1)} then {configure_entry .menu18.config.f.x1 normal {x l}} else {configure_entry .menu18.config.f.x1 disabled {x l}}
+	global CONFIG_IRQ3_ENABLE
+	global CONFIG_IRQ3_SEC
+	if {($CONFIG_IRQ3_ENABLE == 1)} then {
+	configure_entry .menu18.config.f.x3 normal {n l y}} else {configure_entry .menu18.config.f.x3 disabled {y n l}}
+	global CONFIG_IRQ3_NSEC
+	if {($CONFIG_IRQ3_ENABLE == 1) && ($CONFIG_IRQ3_SEC == 1)} then {.menu18.config.f.x4.x configure -state normal -foreground [ cget .ref -foreground ]; .menu18.config.f.x4.l configure -state normal; } else {.menu18.config.f.x4.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu18.config.f.x4.l configure -state disabled}
+	global CONFIG_GPT_ENABLE
+	global CONFIG_GPT_NTIM
+	if {($CONFIG_GPT_ENABLE == 1)} then {.menu18.config.f.x6.x configure -state normal -foreground [ cget .ref -foreground ]; .menu18.config.f.x6.l configure -state normal; } else {.menu18.config.f.x6.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu18.config.f.x6.l configure -state disabled}
+	global CONFIG_GPT_SW
+	if {($CONFIG_GPT_ENABLE == 1)} then {.menu18.config.f.x7.x configure -state normal -foreground [ cget .ref -foreground ]; .menu18.config.f.x7.l configure -state normal; } else {.menu18.config.f.x7.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu18.config.f.x7.l configure -state disabled}
+	global CONFIG_GPT_TW
+	if {($CONFIG_GPT_ENABLE == 1)} then {.menu18.config.f.x8.x configure -state normal -foreground [ cget .ref -foreground ]; .menu18.config.f.x8.l configure -state normal; } else {.menu18.config.f.x8.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu18.config.f.x8.l configure -state disabled}
+	global CONFIG_GPT_IRQ
+	if {($CONFIG_GPT_ENABLE == 1)} then {.menu18.config.f.x9.x configure -state normal -foreground [ cget .ref -foreground ]; .menu18.config.f.x9.l configure -state normal; } else {.menu18.config.f.x9.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu18.config.f.x9.l configure -state disabled}
+	global CONFIG_GPT_SEPIRQ
+	if {($CONFIG_GPT_ENABLE == 1)} then {
+	configure_entry .menu18.config.f.x10 normal {n l y}} else {configure_entry .menu18.config.f.x10 disabled {y n l}}
+	global CONFIG_GPT_WDOGEN
+	if {($CONFIG_GPT_ENABLE == 1)} then {
+	configure_entry .menu18.config.f.x11 normal {n l y}} else {configure_entry .menu18.config.f.x11 disabled {y n l}}
+	global CONFIG_GPT_WDOG
+	if {($CONFIG_GPT_ENABLE == 1) && ($CONFIG_GPT_WDOGEN == 1)} then {.menu18.config.f.x12.x configure -state normal -foreground [ cget .ref -foreground ]; .menu18.config.f.x12.l configure -state normal; } else {.menu18.config.f.x12.x configure -state disabled -foreground [ cget .ref -disabledforeground ]; .menu18.config.f.x12.l configure -state disabled}
+}
+
+
+proc update_define_menu18 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+	global tmpvar_31
+	global CONFIG_UA1_FIFO1
+	if {$tmpvar_31 == "1"} then {set CONFIG_UA1_FIFO1 1} else {set CONFIG_UA1_FIFO1 0}
+	global CONFIG_UA1_FIFO2
+	if {$tmpvar_31 == "2"} then {set CONFIG_UA1_FIFO2 1} else {set CONFIG_UA1_FIFO2 0}
+	global CONFIG_UA1_FIFO4
+	if {$tmpvar_31 == "4"} then {set CONFIG_UA1_FIFO4 1} else {set CONFIG_UA1_FIFO4 0}
+	global CONFIG_UA1_FIFO8
+	if {$tmpvar_31 == "8"} then {set CONFIG_UA1_FIFO8 1} else {set CONFIG_UA1_FIFO8 0}
+	global CONFIG_UA1_FIFO16
+	if {$tmpvar_31 == "16"} then {set CONFIG_UA1_FIFO16 1} else {set CONFIG_UA1_FIFO16 0}
+	global CONFIG_UA1_FIFO32
+	if {$tmpvar_31 == "32"} then {set CONFIG_UA1_FIFO32 1} else {set CONFIG_UA1_FIFO32 0}
+	global CONFIG_IRQ3_ENABLE
+	global CONFIG_IRQ3_SEC
+	if {($CONFIG_IRQ3_ENABLE == 1)} then {
+	set CONFIG_IRQ3_SEC [expr $CONFIG_IRQ3_SEC&15]} else {set CONFIG_IRQ3_SEC [expr $CONFIG_IRQ3_SEC|16]}
+	global CONFIG_IRQ3_NSEC
+	if {($CONFIG_IRQ3_ENABLE == 1) && ($CONFIG_IRQ3_SEC == 1)} then {validate_int CONFIG_IRQ3_NSEC "$CONFIG_IRQ3_NSEC" 12}
+	global CONFIG_GPT_ENABLE
+	global CONFIG_GPT_NTIM
+	if {($CONFIG_GPT_ENABLE == 1)} then {validate_int CONFIG_GPT_NTIM "$CONFIG_GPT_NTIM" 2}
+	global CONFIG_GPT_SW
+	if {($CONFIG_GPT_ENABLE == 1)} then {validate_int CONFIG_GPT_SW "$CONFIG_GPT_SW" 8}
+	global CONFIG_GPT_TW
+	if {($CONFIG_GPT_ENABLE == 1)} then {validate_int CONFIG_GPT_TW "$CONFIG_GPT_TW" 32}
+	global CONFIG_GPT_IRQ
+	if {($CONFIG_GPT_ENABLE == 1)} then {validate_int CONFIG_GPT_IRQ "$CONFIG_GPT_IRQ" 8}
+	global CONFIG_GPT_SEPIRQ
+	if {($CONFIG_GPT_ENABLE == 1)} then {
+	set CONFIG_GPT_SEPIRQ [expr $CONFIG_GPT_SEPIRQ&15]} else {set CONFIG_GPT_SEPIRQ [expr $CONFIG_GPT_SEPIRQ|16]}
+	global CONFIG_GPT_WDOGEN
+	if {($CONFIG_GPT_ENABLE == 1)} then {
+	set CONFIG_GPT_WDOGEN [expr $CONFIG_GPT_WDOGEN&15]} else {set CONFIG_GPT_WDOGEN [expr $CONFIG_GPT_WDOGEN|16]}
+	global CONFIG_GPT_WDOG
+	if {($CONFIG_GPT_ENABLE == 1) && ($CONFIG_GPT_WDOGEN == 1)} then {validate_hex CONFIG_GPT_WDOG "$CONFIG_GPT_WDOG" FFFF}
+}
+
+
+menu_option menu19 19 "VHDL Debugging        "
+proc menu19 {w title} {
+	set oldFocus [focus]
+	catch {destroy $w; unregister_active 19}
+	toplevel $w -class Dialog
+	wm withdraw $w
+	global active_menus
+	set active_menus [lsort -integer [linsert $active_menus end 19]]
+	message $w.m -width 400 -aspect 300 -text \
+		"VHDL Debugging        "  -relief raised
+	pack $w.m -pady 10 -side top -padx 10
+	wm title $w "VHDL Debugging        " 
+
+	bind $w <Escape> "catch {focus $oldFocus}; destroy $w; unregister_active 19; break"
+	set nextscript "catch {focus $oldFocus}; menu20 .menu20 \"$title\""
+	frame $w.f
+	button $w.f.back -text "Main Menu" \
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 19"
+	button $w.f.next -text "Next" -underline 0\
+		-width 15 -command $nextscript
+	$w.f.next configure -state disabled
+	bind all <Alt-n> "puts \"no more menus\" "
+	button $w.f.prev -text "Prev" -underline 0\
+		-width 15 -command "catch {focus $oldFocus}; destroy $w; unregister_active 19; menu18 .menu18 \"$title\""
+	bind $w <Alt-p> "catch {focus $oldFocus}; destroy $w; unregister_active 19; menu18 .menu18 \"$title\";break"
+	pack $w.f.back $w.f.next $w.f.prev -side left -expand on
+	pack $w.f -pady 10 -side bottom -anchor w -fill x
+	frame $w.topline -relief ridge -borderwidth 2 -height 2
+	pack $w.topline -side top -fill x
+
+	frame $w.botline -relief ridge -borderwidth 2 -height 2
+	pack $w.botline -side bottom -fill x
+
+	frame $w.config
+	pack $w.config -fill y -expand on
+
+	scrollbar $w.config.vscroll -command "$w.config.canvas yview"
+	pack $w.config.vscroll -side right -fill y
+
+	canvas $w.config.canvas -height 1\
+		-relief flat -borderwidth 0 -yscrollcommand "$w.config.vscroll set" \
+		-width [expr [winfo screenwidth .] * 1 / 2] 
+	frame $w.config.f
+	bind $w <Key-Down> "$w.config.canvas yview scroll  1 unit;break;"
+	bind $w <Key-Up> "$w.config.canvas yview scroll  -1 unit;break;"
+	bind $w <Key-Next> "$w.config.canvas yview scroll  1 page;break;"
+	bind $w <Key-Prior> "$w.config.canvas yview scroll  -1 page;break;"
+	bind $w <Key-Home> "$w.config.canvas yview moveto 0;break;"
+	bind $w <Key-End> "$w.config.canvas yview moveto 1 ;break;"
+	pack $w.config.canvas -side right -fill y
+
+
+	bool $w.config.f 19 0 "Accelerated UART tracing       " CONFIG_DEBUG_UART
+
+
+
+	focus $w
+	update_active
+	global winx; global winy
+	set winx [expr [winfo x .]+30]; set winy [expr [winfo y .]+30]
+	if {[winfo exists $w]} then {wm geometry $w +$winx+$winy}
+	update idletasks
+	if {[winfo exists $w]} then  {$w.config.canvas create window 0 0 -anchor nw -window $w.config.f
+
+	$w.config.canvas configure \
+		-width [expr [winfo reqwidth $w.config.f] + 1]\
+		-scrollregion "-1 -1 [expr [winfo reqwidth $w.config.f] + 1] \
+			 [expr [winfo reqheight $w.config.f] + 1]"
+
+	set winy [expr [winfo reqh $w] - [winfo reqh $w.config.canvas]]
+	set scry [expr [winfo screenh $w] / 2]
+	set maxy [expr [winfo screenh $w] * 3 / 4]
+	set canvtotal [expr [winfo reqh $w.config.f] + 2]
+	if [expr $winy + $canvtotal < $maxy] {
+		$w.config.canvas configure -height $canvtotal
+	} else {
+		$w.config.canvas configure -height [expr $scry - $winy]
+		}
+	}
+	update idletasks
+	if {[winfo exists $w]} then {
+	wm maxsize $w [winfo width $w] [winfo screenheight $w]
+	wm minsize $w [winfo width $w] 100
+
+	wm deiconify $w
+}
+}
+
+proc update_menu19 {} {
+}
+
+
+proc update_define_menu19 {} {
+	update_define_mainmenu
+	global CONFIG_MODULES
+}
+
+
+proc update_mainmenu {}  {
+}
+
+
+set tmpvar_0 "(not set)"
+set CONFIG_SYN_INFERRED 0
+set CONFIG_SYN_STRATIX 0
+set CONFIG_SYN_STRATIXII 0
+set CONFIG_SYN_STRATIXIII 0
+set CONFIG_SYN_STRATIXIV 0
+set CONFIG_SYN_CYCLONEIII 0
+set CONFIG_SYN_ALTERA 0
+set CONFIG_SYN_AXCEL 0
+set CONFIG_SYN_AXDSP 0
+set CONFIG_SYN_PROASIC 0
+set CONFIG_SYN_PROASICPLUS 0
+set CONFIG_SYN_PROASIC3 0
+set CONFIG_SYN_PROASIC3E 0
+set CONFIG_SYN_PROASIC3L 0
+set CONFIG_SYN_IGLOO 0
+set CONFIG_SYN_FUSION 0
+set CONFIG_SYN_UT025CRH 0
+set CONFIG_SYN_UT130HBD 0
+set CONFIG_SYN_UT90NHBD 0
+set CONFIG_SYN_ATC18 0
+set CONFIG_SYN_ATC18RHA 0
+set CONFIG_SYN_CMOS9SF 0
+set CONFIG_SYN_CUSTOM1 0
+set CONFIG_SYN_EASIC90 0
+set CONFIG_SYN_EASIC45 0
+set CONFIG_SYN_IHP25 0
+set CONFIG_SYN_IHP25RH 0
+set CONFIG_SYN_LATTICE 0
+set CONFIG_SYN_ECLIPSE 0
+set CONFIG_SYN_PEREGRINE 0
+set CONFIG_SYN_RH_LIB18T 0
+set CONFIG_SYN_RHUMC 0
+set CONFIG_SYN_SAED32 0
+set CONFIG_SYN_DARE 0
+set CONFIG_SYN_SMIC13 0
+set CONFIG_SYN_TM65GPLUS 0
+set CONFIG_SYN_TSMC90 0
+set CONFIG_SYN_UMC 0
+set CONFIG_SYN_ARTIX7 0
+set CONFIG_SYN_KINTEX7 0
+set CONFIG_SYN_SPARTAN3 0
+set CONFIG_SYN_SPARTAN3E 0
+set CONFIG_SYN_SPARTAN6 0
+set CONFIG_SYN_VIRTEXE 0
+set CONFIG_SYN_VIRTEX2 0
+set CONFIG_SYN_VIRTEX4 0
+set CONFIG_SYN_VIRTEX5 0
+set CONFIG_SYN_VIRTEX6 0
+set CONFIG_SYN_VIRTEX7 0
+set CONFIG_SYN_ZYNQ7000 0
+set tmpvar_1 "(not set)"
+set CONFIG_MEM_INFERRED 0
+set CONFIG_MEM_UMC 0
+set CONFIG_MEM_RHUMC 0
+set CONFIG_MEM_SAED32 0
+set CONFIG_MEM_DARE 0
+set CONFIG_MEM_ARTISAN 0
+set CONFIG_MEM_CUSTOM1 0
+set CONFIG_MEM_EASIC45 0
+set CONFIG_MEM_VIRAGE 0
+set CONFIG_MEM_VIRAGE90 0
+set CONFIG_SYN_INFER_RAM 0
+set CONFIG_SYN_INFER_PADS 0
+set CONFIG_SYN_NO_ASYNC 0
+set CONFIG_SYN_SCAN 0
+set tmpvar_2 "(not set)"
+set CONFIG_CLK_INFERRED 0
+set CONFIG_CLK_HCLKBUF 0
+set CONFIG_CLK_UT130HBD 0
+set CONFIG_CLK_ALTDLL 0
+set CONFIG_CLK_LATDLL 0
+set CONFIG_CLK_PRO3PLL 0
+set CONFIG_CLK_PRO3EPLL 0
+set CONFIG_CLK_PRO3LPLL 0
+set CONFIG_CLK_FUSPLL 0
+set CONFIG_CLK_LIB18T 0
+set CONFIG_CLK_RHUMC 0
+set CONFIG_CLK_DARE 0
+set CONFIG_CLK_SAED32 0
+set CONFIG_CLK_EASIC45 0
+set CONFIG_CLK_CLKPLLE2 0
+set CONFIG_CLK_CLKDLL 0
+set CONFIG_CLK_DCM 0
+set CONFIG_CLK_MUL 2
+set CONFIG_CLK_DIV 2
+set CONFIG_OCLK_DIV 1
+set CONFIG_OCLKB_DIV 0
+set CONFIG_OCLKC_DIV 0
+set CONFIG_PCI_CLKDLL 0
+set CONFIG_CLK_NOFB 0
+set CONFIG_PCI_SYSCLK 0
+set CONFIG_LEON3 0
+set CONFIG_PROC_NUM 1
+set tmpvar_3 "(not set)"
+set CONFIG_LEON3_MIN 0
+set CONFIG_LEON3_GP 0
+set CONFIG_LEON3_HP 0
+set CONFIG_LEON3_CUSTOM 0
+set CONFIG_IU_NWINDOWS 8
+set CONFIG_IU_V8MULDIV 0
+set tmpvar_4 "(not set)"
+set CONFIG_IU_MUL_LATENCY_2 0
+set CONFIG_IU_MUL_LATENCY_4 0
+set CONFIG_IU_MUL_LATENCY_5 0
+set CONFIG_IU_MUL_MAC 0
+set tmpvar_5 "(not set)"
+set CONFIG_IU_MUL_INFERRED 0
+set CONFIG_IU_MUL_MODGEN 0
+set CONFIG_IU_MUL_TECHSPEC 0
+set CONFIG_IU_MUL_DW 0
+set CONFIG_IU_BP 0
+set CONFIG_IU_SVT 0
+set CONFIG_NOTAG 0
+set CONFIG_IU_LDELAY 1
+set CONFIG_IU_WATCHPOINTS 0
+set CONFIG_PWD 0
+set CONFIG_IU_RSTADDR 00000
+set CONFIG_FPU_ENABLE 0
+set tmpvar_6 "(not set)"
+set CONFIG_FPU_GRFPU 0
+set CONFIG_FPU_GRFPULITE 0
+set CONFIG_FPU_MEIKO 0
+set tmpvar_7 "(not set)"
+set CONFIG_FPU_GRFPU_INFMUL 0
+set CONFIG_FPU_GRFPU_DWMUL 0
+set CONFIG_FPU_GRFPU_MODGEN 0
+set CONFIG_FPU_GRFPU_TECHSPEC 0
+set tmpvar_8 "(not set)"
+set CONFIG_FPU_GRFPC0 0
+set CONFIG_FPU_GRFPC1 0
+set CONFIG_FPU_GRFPC2 0
+set CONFIG_ICACHE_ENABLE 0
+set tmpvar_9 "(not set)"
+set CONFIG_ICACHE_ASSO1 0
+set CONFIG_ICACHE_ASSO2 0
+set CONFIG_ICACHE_ASSO3 0
+set CONFIG_ICACHE_ASSO4 0
+set tmpvar_10 "(not set)"
+set CONFIG_ICACHE_SZ1 0
+set CONFIG_ICACHE_SZ2 0
+set CONFIG_ICACHE_SZ4 0
+set CONFIG_ICACHE_SZ8 0
+set CONFIG_ICACHE_SZ16 0
+set CONFIG_ICACHE_SZ32 0
+set CONFIG_ICACHE_SZ64 0
+set CONFIG_ICACHE_SZ128 0
+set CONFIG_ICACHE_SZ256 0
+set tmpvar_11 "(not set)"
+set CONFIG_ICACHE_LZ16 0
+set CONFIG_ICACHE_LZ32 0
+set tmpvar_12 "(not set)"
+set CONFIG_ICACHE_ALGORND 0
+set CONFIG_ICACHE_ALGODIR 0
+set CONFIG_ICACHE_ALGOLRR 0
+set CONFIG_ICACHE_ALGOLRU 0
+set CONFIG_ICACHE_LOCK 0
+set CONFIG_ICACHE_LRAM 0
+set tmpvar_13 "(not set)"
+set CONFIG_ICACHE_LRAM_SZ1 0
+set CONFIG_ICACHE_LRAM_SZ2 0
+set CONFIG_ICACHE_LRAM_SZ4 0
+set CONFIG_ICACHE_LRAM_SZ8 0
+set CONFIG_ICACHE_LRAM_SZ16 0
+set CONFIG_ICACHE_LRAM_SZ32 0
+set CONFIG_ICACHE_LRAM_SZ64 0
+set CONFIG_ICACHE_LRAM_SZ128 0
+set CONFIG_ICACHE_LRAM_SZ256 0
+set CONFIG_ICACHE_LRSTART 8e
+set CONFIG_DCACHE_ENABLE 0
+set tmpvar_14 "(not set)"
+set CONFIG_DCACHE_ASSO1 0
+set CONFIG_DCACHE_ASSO2 0
+set CONFIG_DCACHE_ASSO3 0
+set CONFIG_DCACHE_ASSO4 0
+set tmpvar_15 "(not set)"
+set CONFIG_DCACHE_SZ1 0
+set CONFIG_DCACHE_SZ2 0
+set CONFIG_DCACHE_SZ4 0
+set CONFIG_DCACHE_SZ8 0
+set CONFIG_DCACHE_SZ16 0
+set CONFIG_DCACHE_SZ32 0
+set CONFIG_DCACHE_SZ64 0
+set CONFIG_DCACHE_SZ128 0
+set CONFIG_DCACHE_SZ256 0
+set tmpvar_16 "(not set)"
+set CONFIG_DCACHE_LZ16 0
+set CONFIG_DCACHE_LZ32 0
+set tmpvar_17 "(not set)"
+set CONFIG_DCACHE_ALGORND 0
+set CONFIG_DCACHE_ALGODIR 0
+set CONFIG_DCACHE_ALGOLRR 0
+set CONFIG_DCACHE_ALGOLRU 0
+set CONFIG_DCACHE_LOCK 0
+set CONFIG_DCACHE_SNOOP 0
+set CONFIG_DCACHE_SNOOP_SEPTAG 0
+set CONFIG_CACHE_FIXED 0
+set CONFIG_DCACHE_LRAM 0
+set tmpvar_18 "(not set)"
+set CONFIG_DCACHE_LRAM_SZ1 0
+set CONFIG_DCACHE_LRAM_SZ2 0
+set CONFIG_DCACHE_LRAM_SZ4 0
+set CONFIG_DCACHE_LRAM_SZ8 0
+set CONFIG_DCACHE_LRAM_SZ16 0
+set CONFIG_DCACHE_LRAM_SZ32 0
+set CONFIG_DCACHE_LRAM_SZ64 0
+set CONFIG_DCACHE_LRAM_SZ128 0
+set CONFIG_DCACHE_LRAM_SZ256 0
+set CONFIG_DCACHE_LRSTART 8f
+set CONFIG_MMU_ENABLE 0
+set tmpvar_19 "(not set)"
+set CONFIG_MMU_COMBINED 0
+set CONFIG_MMU_SPLIT 0
+set tmpvar_20 "(not set)"
+set CONFIG_MMU_REPARRAY 0
+set CONFIG_MMU_REPINCREMENT 0
+set tmpvar_21 "(not set)"
+set CONFIG_MMU_I2 0
+set CONFIG_MMU_I4 0
+set CONFIG_MMU_I8 0
+set CONFIG_MMU_I16 0
+set CONFIG_MMU_I32 0
+set CONFIG_MMU_I64 0
+set tmpvar_22 "(not set)"
+set CONFIG_MMU_D2 0
+set CONFIG_MMU_D4 0
+set CONFIG_MMU_D8 0
+set CONFIG_MMU_D16 0
+set CONFIG_MMU_D32 0
+set CONFIG_MMU_D64 0
+set CONFIG_MMU_FASTWB 0
+set tmpvar_23 "(not set)"
+set CONFIG_MMU_PAGE_4K 0
+set CONFIG_MMU_PAGE_8K 0
+set CONFIG_MMU_PAGE_16K 0
+set CONFIG_MMU_PAGE_32K 0
+set CONFIG_MMU_PAGE_PROG 0
+set CONFIG_DSU_ENABLE 0
+set CONFIG_DSU_ITRACE 0
+set tmpvar_24 "(not set)"
+set CONFIG_DSU_ITRACESZ1 0
+set CONFIG_DSU_ITRACESZ2 0
+set CONFIG_DSU_ITRACESZ4 0
+set CONFIG_DSU_ITRACESZ8 0
+set CONFIG_DSU_ITRACESZ16 0
+set CONFIG_DSU_ATRACE 0
+set tmpvar_25 "(not set)"
+set CONFIG_DSU_ATRACESZ1 0
+set CONFIG_DSU_ATRACESZ2 0
+set CONFIG_DSU_ATRACESZ4 0
+set CONFIG_DSU_ATRACESZ8 0
+set CONFIG_DSU_ATRACESZ16 0
+set CONFIG_IU_DISAS 0
+set CONFIG_IU_DISAS_NET 0
+set CONFIG_DEBUG_PC32 0
+set CONFIG_AHB_DEFMST 0
+set CONFIG_AHB_RROBIN 0
+set CONFIG_AHB_SPLIT 0
+set CONFIG_AHB_FPNPEN 0
+set CONFIG_AHB_IOADDR FFF
+set CONFIG_APB_HADDR 800
+set CONFIG_AHB_MON 0
+set CONFIG_AHB_MONERR 0
+set CONFIG_AHB_MONWAR 0
+set CONFIG_AHB_DTRACE 0
+set CONFIG_DSU_UART 0
+set CONFIG_DSU_JTAG 0
+set CONFIG_DSU_ETH 0
+set tmpvar_28 "(not set)"
+set CONFIG_DSU_ETHSZ1 0
+set CONFIG_DSU_ETHSZ2 0
+set CONFIG_DSU_ETHSZ4 0
+set CONFIG_DSU_ETHSZ8 0
+set CONFIG_DSU_ETHSZ16 0
+set CONFIG_DSU_IPMSB C0A8
+set CONFIG_DSU_IPLSB 0033
+set CONFIG_DSU_ETHMSB 020000
+set CONFIG_DSU_ETHLSB 000000
+set CONFIG_DSU_ETH_PROG 0
+set CONFIG_DSU_ETH_DIS 0
+set CONFIG_MCTRL_LEON2 0
+set CONFIG_MCTRL_8BIT 0
+set CONFIG_MCTRL_16BIT 0
+set CONFIG_MCTRL_5CS 0
+set CONFIG_MCTRL_SDRAM 0
+set CONFIG_MCTRL_SDRAM_SEPBUS 0
+set CONFIG_MCTRL_SDRAM_BUS64 0
+set CONFIG_MCTRL_SDRAM_INVCLK 0
+set CONFIG_MCTRL_PAGE 0
+set CONFIG_MCTRL_PROGPAGE 0
+set CONFIG_AHBROM_ENABLE 0
+set CONFIG_AHBROM_START 000
+set CONFIG_AHBROM_PIPE 0
+set CONFIG_AHBRAM_ENABLE 0
+set tmpvar_29 "(not set)"
+set CONFIG_AHBRAM_SZ1 0
+set CONFIG_AHBRAM_SZ2 0
+set CONFIG_AHBRAM_SZ4 0
+set CONFIG_AHBRAM_SZ8 0
+set CONFIG_AHBRAM_SZ16 0
+set CONFIG_AHBRAM_SZ32 0
+set CONFIG_AHBRAM_SZ64 0
+set CONFIG_AHBRAM_SZ128 0
+set CONFIG_AHBRAM_SZ256 0
+set CONFIG_AHBRAM_SZ512 0
+set CONFIG_AHBRAM_SZ1024 0
+set CONFIG_AHBRAM_SZ2048 0
+set CONFIG_AHBRAM_SZ4096 0
+set CONFIG_AHBRAM_START A00
+set CONFIG_AHBRAM_PIPE 0
+set CONFIG_GRETH_ENABLE 0
+set CONFIG_GRETH_GIGA 0
+set tmpvar_30 "(not set)"
+set CONFIG_GRETH_FIFO4 0
+set CONFIG_GRETH_FIFO8 0
+set CONFIG_GRETH_FIFO16 0
+set CONFIG_GRETH_FIFO32 0
+set CONFIG_GRETH_FIFO64 0
+set CONFIG_UART1_ENABLE 0
+set tmpvar_31 "(not set)"
+set CONFIG_UA1_FIFO1 0
+set CONFIG_UA1_FIFO2 0
+set CONFIG_UA1_FIFO4 0
+set CONFIG_UA1_FIFO8 0
+set CONFIG_UA1_FIFO16 0
+set CONFIG_UA1_FIFO32 0
+set CONFIG_IRQ3_ENABLE 0
+set CONFIG_IRQ3_SEC 0
+set CONFIG_IRQ3_NSEC 12
+set CONFIG_GPT_ENABLE 0
+set CONFIG_GPT_NTIM 2
+set CONFIG_GPT_SW 8
+set CONFIG_GPT_TW 32
+set CONFIG_GPT_IRQ 8
+set CONFIG_GPT_SEPIRQ 0
+set CONFIG_GPT_WDOGEN 0
+set CONFIG_GPT_WDOG FFFF
+set CONFIG_DEBUG_UART 0
+set CONFIG_SYN_ARTISAN 4
+set CONFIG_PCI_ENABLE 4
+set CONFIG_DCACHE_SNOOP_FAST 4
+set CONFIG_HAS_SHARED_GRFPU 4
+set CONFIG_FPU_GRFPU_SH 4
+set CONFIG_LEON3FT_PRESENT 4
+set CONFIG_LEON3FT_EN 4
+set CONFIG_IUFT_NONE 4
+set CONFIG_IUFT_PAR 4
+set CONFIG_IUFT_DMR 4
+set CONFIG_IUFT_BCH 4
+set CONFIG_IUFT_TMR 4
+set CONFIG_FPUFT_NONE 4
+set CONFIG_FPUFT_PAR 4
+set CONFIG_FPUFT_DMR 4
+set CONFIG_FPUFT_TMR 4
+set CONFIG_RF_ERRINJ 4
+set CONFIG_CACHE_FT_EN 4
+set CONFIG_CACHE_ERRINJ 4
+set CONFIG_GRETH_FT 4
+set CONFIG_GRETH_EDCLFT 4
+set CONFIG_MODULES 4
+proc writeconfig {file1 file2} {
+	set cfg [open $file1 w]
+	set autocfg [open $file2 w]
+	set notmod 1
+	set notset 0
+	puts $cfg "#"
+	puts $cfg "# Automatically generated make config: don't edit"
+	puts $cfg "#"
+	puts $autocfg "/*"
+	puts $autocfg " * Automatically generated C config: don't edit"
+	puts $autocfg " */"
+	puts $autocfg "#define AUTOCONF_INCLUDED"
+	write_comment $cfg $autocfg "Synthesis      "
+	global tmpvar_0
+	
+	if { $tmpvar_0 == "Inferred" } then { write_tristate $cfg $autocfg CONFIG_SYN_INFERRED 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_INFERRED 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Altera-Stratix" } then { write_tristate $cfg $autocfg CONFIG_SYN_STRATIX 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_STRATIX 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Altera-StratixII" } then { write_tristate $cfg $autocfg CONFIG_SYN_STRATIXII 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_STRATIXII 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Altera-StratixIII" } then { write_tristate $cfg $autocfg CONFIG_SYN_STRATIXIII 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_STRATIXIII 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Altera-StratixIV" } then { write_tristate $cfg $autocfg CONFIG_SYN_STRATIXIV 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_STRATIXIV 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Altera-CycloneIII" } then { write_tristate $cfg $autocfg CONFIG_SYN_CYCLONEIII 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_CYCLONEIII 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Altera-Others" } then { write_tristate $cfg $autocfg CONFIG_SYN_ALTERA 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_ALTERA 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-Axcelerator" } then { write_tristate $cfg $autocfg CONFIG_SYN_AXCEL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_AXCEL 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-Axcelerator-DSP" } then { write_tristate $cfg $autocfg CONFIG_SYN_AXDSP 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_AXDSP 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-Proasic" } then { write_tristate $cfg $autocfg CONFIG_SYN_PROASIC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_PROASIC 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-ProasicPlus" } then { write_tristate $cfg $autocfg CONFIG_SYN_PROASICPLUS 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_PROASICPLUS 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-Proasic3" } then { write_tristate $cfg $autocfg CONFIG_SYN_PROASIC3 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_PROASIC3 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-Proasic3E" } then { write_tristate $cfg $autocfg CONFIG_SYN_PROASIC3E 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_PROASIC3E 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-Proasic3L" } then { write_tristate $cfg $autocfg CONFIG_SYN_PROASIC3L 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_PROASIC3L 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-IGLOO/p/L" } then { write_tristate $cfg $autocfg CONFIG_SYN_IGLOO 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_IGLOO 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Actel-Fusion" } then { write_tristate $cfg $autocfg CONFIG_SYN_FUSION 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_FUSION 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Aeroflex-UT025CRH" } then { write_tristate $cfg $autocfg CONFIG_SYN_UT025CRH 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_UT025CRH 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Aeroflex-UT130HBD" } then { write_tristate $cfg $autocfg CONFIG_SYN_UT130HBD 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_UT130HBD 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Aeroflex-UT90NHBD" } then { write_tristate $cfg $autocfg CONFIG_SYN_UT90NHBD 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_UT90NHBD 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Atmel-ATC18" } then { write_tristate $cfg $autocfg CONFIG_SYN_ATC18 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_ATC18 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Atmel-ATC18RHA" } then { write_tristate $cfg $autocfg CONFIG_SYN_ATC18RHA 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_ATC18RHA 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "IBM-CMOS9SF" } then { write_tristate $cfg $autocfg CONFIG_SYN_CMOS9SF 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_CMOS9SF 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Custom1" } then { write_tristate $cfg $autocfg CONFIG_SYN_CUSTOM1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_CUSTOM1 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "eASIC90" } then { write_tristate $cfg $autocfg CONFIG_SYN_EASIC90 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_EASIC90 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "eASIC45" } then { write_tristate $cfg $autocfg CONFIG_SYN_EASIC45 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_EASIC45 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "IHP25" } then { write_tristate $cfg $autocfg CONFIG_SYN_IHP25 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_IHP25 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "IHP25RH" } then { write_tristate $cfg $autocfg CONFIG_SYN_IHP25RH 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_IHP25RH 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Lattice-EC/ECP/XP" } then { write_tristate $cfg $autocfg CONFIG_SYN_LATTICE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_LATTICE 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Quicklogic-Eclipse" } then { write_tristate $cfg $autocfg CONFIG_SYN_ECLIPSE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_ECLIPSE 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Peregrine" } then { write_tristate $cfg $autocfg CONFIG_SYN_PEREGRINE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_PEREGRINE 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "RH-LIB18T" } then { write_tristate $cfg $autocfg CONFIG_SYN_RH_LIB18T 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_RH_LIB18T 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "RH-UMC" } then { write_tristate $cfg $autocfg CONFIG_SYN_RHUMC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_RHUMC 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "SAED32" } then { write_tristate $cfg $autocfg CONFIG_SYN_SAED32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_SAED32 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "DARE" } then { write_tristate $cfg $autocfg CONFIG_SYN_DARE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_DARE 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "SMIC130" } then { write_tristate $cfg $autocfg CONFIG_SYN_SMIC13 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_SMIC13 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "TM65Gplus" } then { write_tristate $cfg $autocfg CONFIG_SYN_TM65GPLUS 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_TM65GPLUS 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "TSMC90" } then { write_tristate $cfg $autocfg CONFIG_SYN_TSMC90 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_TSMC90 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "UMC180" } then { write_tristate $cfg $autocfg CONFIG_SYN_UMC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_UMC 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Artix7" } then { write_tristate $cfg $autocfg CONFIG_SYN_ARTIX7 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_ARTIX7 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Kintex7" } then { write_tristate $cfg $autocfg CONFIG_SYN_KINTEX7 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_KINTEX7 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Spartan3" } then { write_tristate $cfg $autocfg CONFIG_SYN_SPARTAN3 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_SPARTAN3 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Spartan3E" } then { write_tristate $cfg $autocfg CONFIG_SYN_SPARTAN3E 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_SPARTAN3E 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Spartan6" } then { write_tristate $cfg $autocfg CONFIG_SYN_SPARTAN6 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_SPARTAN6 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-VirtexE" } then { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEXE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEXE 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Virtex2" } then { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX2 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Virtex4" } then { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX4 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Virtex5" } then { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX5 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX5 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Virtex6" } then { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX6 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX6 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Virtex7" } then { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX7 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_VIRTEX7 0 [list $notmod] 2 }
+	if { $tmpvar_0 == "Xilinx-Zynq7000" } then { write_tristate $cfg $autocfg CONFIG_SYN_ZYNQ7000 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_SYN_ZYNQ7000 0 [list $notmod] 2 }
+	global tmpvar_1
+	global CONFIG_SYN_INFERRED
+	global CONFIG_SYN_CUSTOM1
+	global CONFIG_SYN_ATC18
+	global CONFIG_SYN_TSMC90
+	global CONFIG_SYN_EASIC45
+	global CONFIG_SYN_UMC
+	global CONFIG_SYN_RHUMC
+	global CONFIG_SYN_DARE
+	global CONFIG_SYN_SAED32
+	global CONFIG_SYN_ARTISAN
+	if {($CONFIG_SYN_INFERRED == 1 || $CONFIG_SYN_CUSTOM1 == 1 || $CONFIG_SYN_ATC18 == 1 || $CONFIG_SYN_TSMC90 == 1 || $CONFIG_SYN_EASIC45 == 1 || $CONFIG_SYN_UMC == 1 || $CONFIG_SYN_RHUMC == 1 || $CONFIG_SYN_DARE == 1 || $CONFIG_SYN_SAED32 == 1 || $CONFIG_SYN_ARTISAN == 1)} then {
+	if { $tmpvar_1 == "Inferred" } then { write_tristate $cfg $autocfg CONFIG_MEM_INFERRED 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_INFERRED 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "UMC18" } then { write_tristate $cfg $autocfg CONFIG_MEM_UMC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_UMC 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "RH-UMC" } then { write_tristate $cfg $autocfg CONFIG_MEM_RHUMC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_RHUMC 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "SAED32" } then { write_tristate $cfg $autocfg CONFIG_MEM_SAED32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_SAED32 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "DARE" } then { write_tristate $cfg $autocfg CONFIG_MEM_DARE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_DARE 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "Artisan" } then { write_tristate $cfg $autocfg CONFIG_MEM_ARTISAN 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_ARTISAN 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "Custom1" } then { write_tristate $cfg $autocfg CONFIG_MEM_CUSTOM1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_CUSTOM1 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "EASIC45" } then { write_tristate $cfg $autocfg CONFIG_MEM_EASIC45 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_EASIC45 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "Virage" } then { write_tristate $cfg $autocfg CONFIG_MEM_VIRAGE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_VIRAGE 0 [list $notmod] 2 }
+	if { $tmpvar_1 == "Virage-TSMC90" } then { write_tristate $cfg $autocfg CONFIG_MEM_VIRAGE90 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MEM_VIRAGE90 0 [list $notmod] 2 }}
+	global CONFIG_SYN_INFER_RAM
+	if {($CONFIG_SYN_INFERRED != 1)} then {write_tristate $cfg $autocfg CONFIG_SYN_INFER_RAM $CONFIG_SYN_INFER_RAM [list $notmod] 2 }
+	global CONFIG_SYN_INFER_PADS
+	if {($CONFIG_SYN_INFERRED != 1)} then {write_tristate $cfg $autocfg CONFIG_SYN_INFER_PADS $CONFIG_SYN_INFER_PADS [list $notmod] 2 }
+	global CONFIG_SYN_NO_ASYNC
+	write_tristate $cfg $autocfg CONFIG_SYN_NO_ASYNC $CONFIG_SYN_NO_ASYNC [list $notmod] 2
+	global CONFIG_SYN_SCAN
+	write_tristate $cfg $autocfg CONFIG_SYN_SCAN $CONFIG_SYN_SCAN [list $notmod] 2
+	write_comment $cfg $autocfg "Clock generation"
+	global tmpvar_2
+	
+	if { $tmpvar_2 == "Inferred" } then { write_tristate $cfg $autocfg CONFIG_CLK_INFERRED 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_INFERRED 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Actel-HCLKBUF" } then { write_tristate $cfg $autocfg CONFIG_CLK_HCLKBUF 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_HCLKBUF 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Aeroflex-UT130HBD" } then { write_tristate $cfg $autocfg CONFIG_CLK_UT130HBD 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_UT130HBD 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Altera-ALTPLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_ALTDLL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_ALTDLL 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Lattice-EXPLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_LATDLL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_LATDLL 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Proasic3-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_PRO3PLL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_PRO3PLL 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Proasic3E-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_PRO3EPLL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_PRO3EPLL 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Proasic3L-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_PRO3LPLL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_PRO3LPLL 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Fusion-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_FUSPLL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_FUSPLL 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "RH-LIB18T-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_LIB18T 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_LIB18T 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "RHUMC-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_RHUMC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_RHUMC 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "DARE-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_DARE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_DARE 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "SAED32-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_SAED32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_SAED32 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "EASIC45-PLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_EASIC45 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_EASIC45 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Xilinx-PLLE2" } then { write_tristate $cfg $autocfg CONFIG_CLK_CLKPLLE2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_CLKPLLE2 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Xilinx-CLKDLL" } then { write_tristate $cfg $autocfg CONFIG_CLK_CLKDLL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_CLKDLL 0 [list $notmod] 2 }
+	if { $tmpvar_2 == "Xilinx-DCM" } then { write_tristate $cfg $autocfg CONFIG_CLK_DCM 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_CLK_DCM 0 [list $notmod] 2 }
+	global CONFIG_CLK_MUL
+	global CONFIG_CLK_DCM
+	global CONFIG_CLK_ALTDLL
+	global CONFIG_CLK_LATDLL
+	global CONFIG_CLK_PRO3PLL
+	global CONFIG_CLK_PRO3EPLL
+	global CONFIG_CLK_PRO3LPLL
+	global CONFIG_CLK_CLKDLL
+	global CONFIG_CLK_LIB18T
+	global CONFIG_CLK_FUSPLL
+	global CONFIG_CLK_CLKPLLE2
+	if {($CONFIG_CLK_DCM == 1 || $CONFIG_CLK_ALTDLL == 1 || $CONFIG_CLK_LATDLL == 1 || $CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_LIB18T == 1 || $CONFIG_CLK_FUSPLL == 1 || $CONFIG_CLK_CLKPLLE2 == 1)} then {write_int $cfg $autocfg CONFIG_CLK_MUL $CONFIG_CLK_MUL $notmod }
+	global CONFIG_CLK_DIV
+	if {($CONFIG_CLK_DCM == 1 || $CONFIG_CLK_ALTDLL == 1 || $CONFIG_CLK_LATDLL == 1 || $CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_LIB18T == 1 || $CONFIG_CLK_FUSPLL == 1 || $CONFIG_CLK_CLKPLLE2 == 1)} then {write_int $cfg $autocfg CONFIG_CLK_DIV $CONFIG_CLK_DIV $notmod }
+	global CONFIG_OCLK_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {write_int $cfg $autocfg CONFIG_OCLK_DIV $CONFIG_OCLK_DIV $notmod }
+	global CONFIG_OCLKB_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {write_int $cfg $autocfg CONFIG_OCLKB_DIV $CONFIG_OCLKB_DIV $notmod }
+	global CONFIG_OCLKC_DIV
+	if {($CONFIG_CLK_PRO3PLL == 1 || $CONFIG_CLK_PRO3EPLL == 1 || $CONFIG_CLK_PRO3LPLL == 1 || $CONFIG_CLK_FUSPLL == 1)} then {write_int $cfg $autocfg CONFIG_OCLKC_DIV $CONFIG_OCLKC_DIV $notmod }
+	global CONFIG_PCI_CLKDLL
+	if {($CONFIG_CLK_CLKDLL == 1 || $CONFIG_CLK_DCM == 1)} then {write_tristate $cfg $autocfg CONFIG_PCI_CLKDLL $CONFIG_PCI_CLKDLL [list $notmod] 2 }
+	global CONFIG_CLK_NOFB
+	if {($CONFIG_CLK_DCM == 1)} then {write_tristate $cfg $autocfg CONFIG_CLK_NOFB $CONFIG_CLK_NOFB [list $notmod] 2 }
+	global CONFIG_PCI_SYSCLK
+	global CONFIG_PCI_ENABLE
+	if {($CONFIG_PCI_ENABLE != 1)} then {write_tristate $cfg $autocfg CONFIG_PCI_SYSCLK $CONFIG_PCI_SYSCLK [list $notmod] 2 }
+	write_comment $cfg $autocfg "Processor            "
+	global CONFIG_LEON3
+	write_tristate $cfg $autocfg CONFIG_LEON3 $CONFIG_LEON3 [list $notmod] 2
+	global CONFIG_PROC_NUM
+	if {($CONFIG_LEON3 == 1)} then {write_int $cfg $autocfg CONFIG_PROC_NUM $CONFIG_PROC_NUM $notmod }
+	global tmpvar_3
+	if {($CONFIG_LEON3 == 1)} then {
+	if { $tmpvar_3 == "Minimal-configuration" } then { write_tristate $cfg $autocfg CONFIG_LEON3_MIN 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_LEON3_MIN 0 [list $notmod] 2 }
+	if { $tmpvar_3 == "General-purpose-cfg" } then { write_tristate $cfg $autocfg CONFIG_LEON3_GP 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_LEON3_GP 0 [list $notmod] 2 }
+	if { $tmpvar_3 == "High-Performance-cfg" } then { write_tristate $cfg $autocfg CONFIG_LEON3_HP 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_LEON3_HP 0 [list $notmod] 2 }
+	if { $tmpvar_3 == "Custom-configuration" } then { write_tristate $cfg $autocfg CONFIG_LEON3_CUSTOM 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_LEON3_CUSTOM 0 [list $notmod] 2 }}
+	global CONFIG_IU_NWINDOWS
+	global CONFIG_LEON3_MIN
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_int $cfg $autocfg CONFIG_IU_NWINDOWS 8 $notmod }
+	global CONFIG_IU_V8MULDIV
+	global CONSTANT_N
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_V8MULDIV $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_IU_BP
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_BP $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_IU_SVT
+	global CONSTANT_Y
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_SVT $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_NOTAG
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_NOTAG $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_IU_LDELAY
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_int $cfg $autocfg CONFIG_IU_LDELAY 1 $notmod }
+	global CONFIG_IU_WATCHPOINTS
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_int $cfg $autocfg CONFIG_IU_WATCHPOINTS 0 $notmod }
+	global CONFIG_PWD
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_PWD $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_IU_RSTADDR
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_hex $cfg $autocfg CONFIG_IU_RSTADDR 00000 $notmod }
+	global CONFIG_FPU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_FPU_ENABLE $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_ICACHE_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_ICACHE_ASSO1
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO1 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_ICACHE_SZ2
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_SZ2 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_ICACHE_LZ16
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LZ16 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_ICACHE_ALGORND
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ALGORND $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_ICACHE_LOCK
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LOCK $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_DCACHE_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_ASSO1
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO1 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_SZ2
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SZ2 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_LZ16
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LZ16 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_ALGORND
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ALGORND $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_LOCK
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LOCK $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_DCACHE_SNOOP
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_CACHE_FIXED
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_hex $cfg $autocfg CONFIG_CACHE_FIXED 0 $notmod }
+	global CONFIG_MMU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_ENABLE $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_DSU_ENABLE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_MIN == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ENABLE $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_LEON3_GP
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_int $cfg $autocfg CONFIG_IU_NWINDOWS 8 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_V8MULDIV $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_IU_MUL_LATENCY_5
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_MUL_LATENCY_5 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_IU_MUL_MAC
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_MUL_MAC $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_BP $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_SVT $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_NOTAG $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_int $cfg $autocfg CONFIG_IU_LDELAY 1 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_int $cfg $autocfg CONFIG_IU_WATCHPOINTS 2 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_PWD $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_hex $cfg $autocfg CONFIG_IU_RSTADDR 00000 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_FPU_ENABLE $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_ICACHE_ASSO2
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO2 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_ICACHE_SZ4
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_SZ4 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LZ16 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ALGORND $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LOCK $CONSTANT_N [list $notmod] 2 }
+	global CONFIG_ICACHE_LRAM
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_ASSO2
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO2 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_SZ4
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SZ4 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LZ16 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ALGORND $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LOCK $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_SNOOP_FAST
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP_FAST $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_SNOOP_SEPTAG
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP_SEPTAG $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_hex $cfg $autocfg CONFIG_CACHE_FIXED 0 $notmod }
+	global CONFIG_DCACHE_LRAM
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_MMU_SPLIT
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_SPLIT $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_MMU_REPARRAY
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_REPARRAY $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_MMU_I8
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_I8 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_MMU_D8
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_D8 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_MMU_FASTWB
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_FASTWB $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_MMU_PAGE_4K
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_PAGE_4K $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DSU_ITRACE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ITRACE $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DSU_ITRACESZ4
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ4 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DSU_ATRACESZ4
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_GP == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ4 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_LEON3_HP
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_int $cfg $autocfg CONFIG_IU_NWINDOWS 8 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_V8MULDIV $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_IU_MUL_LATENCY_2
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_MUL_LATENCY_2 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_MUL_MAC $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_BP $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_SVT $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_NOTAG $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_int $cfg $autocfg CONFIG_IU_LDELAY 1 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_int $cfg $autocfg CONFIG_IU_WATCHPOINTS 4 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_PWD $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_hex $cfg $autocfg CONFIG_IU_RSTADDR 00000 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_FPU_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_FPU_GRFPU
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_FPU_GRFPU $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_FPU_GRFPU_INFMUL
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_INFMUL $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO2 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_SZ4 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LZ16 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_ICACHE_ALGOLRU
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ALGOLRU $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LOCK $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO2 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SZ4 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LZ16 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_DCACHE_ALGOLRU
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ALGOLRU $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LOCK $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP_FAST $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP_SEPTAG $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_hex $cfg $autocfg CONFIG_CACHE_FIXED 0 $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM $CONSTANT_N [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_SPLIT $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_REPARRAY $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_MMU_I16
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_I16 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_MMU_D16
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_D16 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_FASTWB $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_PAGE_4K $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ENABLE $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ITRACE $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ4 $CONSTANT_Y [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_HP == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ4 $CONSTANT_Y [list $notmod] 2 }
+	global CONFIG_LEON3_CUSTOM
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_comment $cfg $autocfg "Integer unit                                           "}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_int $cfg $autocfg CONFIG_IU_NWINDOWS $CONFIG_IU_NWINDOWS $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_V8MULDIV $CONFIG_IU_V8MULDIV [list $notmod] 2 }
+	global tmpvar_4
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_IU_V8MULDIV == 1)} then {
+	if { $tmpvar_4 == "2-cycles" } then { write_tristate $cfg $autocfg CONFIG_IU_MUL_LATENCY_2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IU_MUL_LATENCY_2 0 [list $notmod] 2 }
+	if { $tmpvar_4 == "4-cycles" } then { write_tristate $cfg $autocfg CONFIG_IU_MUL_LATENCY_4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IU_MUL_LATENCY_4 0 [list $notmod] 2 }
+	if { $tmpvar_4 == "5-cycles" } then { write_tristate $cfg $autocfg CONFIG_IU_MUL_LATENCY_5 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IU_MUL_LATENCY_5 0 [list $notmod] 2 }}
+	global CONFIG_IU_MUL_LATENCY_4
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_IU_V8MULDIV == 1) && ($CONFIG_IU_MUL_LATENCY_4 == 1 || $CONFIG_IU_MUL_LATENCY_5 == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_MUL_MAC $CONFIG_IU_MUL_MAC [list $notmod] 2 }
+	global tmpvar_5
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_IU_V8MULDIV == 1)} then {
+	if { $tmpvar_5 == "Inferred" } then { write_tristate $cfg $autocfg CONFIG_IU_MUL_INFERRED 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IU_MUL_INFERRED 0 [list $notmod] 2 }
+	if { $tmpvar_5 == "NTNU_Modgen" } then { write_tristate $cfg $autocfg CONFIG_IU_MUL_MODGEN 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IU_MUL_MODGEN 0 [list $notmod] 2 }
+	if { $tmpvar_5 == "TechSpec" } then { write_tristate $cfg $autocfg CONFIG_IU_MUL_TECHSPEC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IU_MUL_TECHSPEC 0 [list $notmod] 2 }
+	if { $tmpvar_5 == "Designware" } then { write_tristate $cfg $autocfg CONFIG_IU_MUL_DW 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_IU_MUL_DW 0 [list $notmod] 2 }}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_BP $CONFIG_IU_BP [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_SVT $CONFIG_IU_SVT [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_NOTAG $CONFIG_NOTAG [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_int $cfg $autocfg CONFIG_IU_LDELAY $CONFIG_IU_LDELAY $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_int $cfg $autocfg CONFIG_IU_WATCHPOINTS $CONFIG_IU_WATCHPOINTS $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_PWD $CONFIG_PWD [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_hex $cfg $autocfg CONFIG_IU_RSTADDR $CONFIG_IU_RSTADDR $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_comment $cfg $autocfg "Floating-point unit"}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_FPU_ENABLE $CONFIG_FPU_ENABLE [list $notmod] 2 }
+	global tmpvar_6
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_FPU_ENABLE == 1)} then {
+	if { $tmpvar_6 == "GRFPU" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU 0 [list $notmod] 2 }
+	if { $tmpvar_6 == "GRFPU-LITE" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPULITE 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPULITE 0 [list $notmod] 2 }
+	if { $tmpvar_6 == "Meiko" } then { write_tristate $cfg $autocfg CONFIG_FPU_MEIKO 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_MEIKO 0 [list $notmod] 2 }}
+	global tmpvar_7
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_FPU_ENABLE == 1) && ($CONFIG_FPU_GRFPU == 1)} then {
+	if { $tmpvar_7 == "Inferred" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_INFMUL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_INFMUL 0 [list $notmod] 2 }
+	if { $tmpvar_7 == "DW" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_DWMUL 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_DWMUL 0 [list $notmod] 2 }
+	if { $tmpvar_7 == "ModGen" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_MODGEN 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_MODGEN 0 [list $notmod] 2 }
+	if { $tmpvar_7 == "TechSpec" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_TECHSPEC 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPU_TECHSPEC 0 [list $notmod] 2 }}
+	global tmpvar_8
+	global CONFIG_FPU_GRFPULITE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_FPU_ENABLE == 1) && ($CONFIG_FPU_GRFPULITE == 1)} then {
+	if { $tmpvar_8 == "Simple" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPC0 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPC0 0 [list $notmod] 2 }
+	if { $tmpvar_8 == "Data-forwarding" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPC1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPC1 0 [list $notmod] 2 }
+	if { $tmpvar_8 == "Non-blocking" } then { write_tristate $cfg $autocfg CONFIG_FPU_GRFPC2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_FPU_GRFPC2 0 [list $notmod] 2 }}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_comment $cfg $autocfg "Cache system"}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_ENABLE $CONFIG_ICACHE_ENABLE [list $notmod] 2 }
+	global tmpvar_9
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1)} then {
+	if { $tmpvar_9 == "1" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO1 0 [list $notmod] 2 }
+	if { $tmpvar_9 == "2" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO2 0 [list $notmod] 2 }
+	if { $tmpvar_9 == "3" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO3 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO3 0 [list $notmod] 2 }
+	if { $tmpvar_9 == "4" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_ASSO4 0 [list $notmod] 2 }}
+	global tmpvar_10
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1)} then {
+	if { $tmpvar_10 == "1" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ1 0 [list $notmod] 2 }
+	if { $tmpvar_10 == "2" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ2 0 [list $notmod] 2 }
+	if { $tmpvar_10 == "4" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ4 0 [list $notmod] 2 }
+	if { $tmpvar_10 == "8" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ8 0 [list $notmod] 2 }
+	if { $tmpvar_10 == "16" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ16 0 [list $notmod] 2 }
+	if { $tmpvar_10 == "32" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ32 0 [list $notmod] 2 }
+	if { $tmpvar_10 == "64" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ64 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ64 0 [list $notmod] 2 }
+	if { $tmpvar_10 == "128" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ128 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ128 0 [list $notmod] 2 }
+	if { $tmpvar_10 == "256" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ256 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_SZ256 0 [list $notmod] 2 }}
+	global tmpvar_11
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1)} then {
+	if { $tmpvar_11 == "16" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LZ16 0 [list $notmod] 2 }
+	if { $tmpvar_11 == "32" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LZ32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LZ32 0 [list $notmod] 2 }}
+	global tmpvar_12
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1) && ($CONFIG_ICACHE_ASSO1 != 1)} then {
+	if { $tmpvar_12 == "Random" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_ALGORND 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_ALGORND 0 [list $notmod] 2 }
+	if { $tmpvar_12 == "Direct" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_ALGODIR 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_ALGODIR 0 [list $notmod] 2 }
+	if { $tmpvar_12 == "LRR" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_ALGOLRR 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_ALGOLRR 0 [list $notmod] 2 }
+	if { $tmpvar_12 == "LRU" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_ALGOLRU 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_ALGOLRU 0 [list $notmod] 2 }}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1) && ($CONFIG_ICACHE_ASSO1 != 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LOCK $CONFIG_ICACHE_LOCK [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE != 1)} then {write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM $CONFIG_ICACHE_LRAM [list $notmod] 2 }
+	global tmpvar_13
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_LRAM == 1)} then {
+	if { $tmpvar_13 == "1" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ1 0 [list $notmod] 2 }
+	if { $tmpvar_13 == "2" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ2 0 [list $notmod] 2 }
+	if { $tmpvar_13 == "4" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ4 0 [list $notmod] 2 }
+	if { $tmpvar_13 == "8" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ8 0 [list $notmod] 2 }
+	if { $tmpvar_13 == "16" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ16 0 [list $notmod] 2 }
+	if { $tmpvar_13 == "32" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ32 0 [list $notmod] 2 }
+	if { $tmpvar_13 == "64" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ64 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ64 0 [list $notmod] 2 }
+	if { $tmpvar_13 == "128" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ128 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ128 0 [list $notmod] 2 }
+	if { $tmpvar_13 == "256" } then { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ256 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_ICACHE_LRAM_SZ256 0 [list $notmod] 2 }}
+	global CONFIG_ICACHE_LRSTART
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_LRAM == 1)} then {write_hex $cfg $autocfg CONFIG_ICACHE_LRSTART $CONFIG_ICACHE_LRSTART $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_ENABLE $CONFIG_DCACHE_ENABLE [list $notmod] 2 }
+	global tmpvar_14
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {
+	if { $tmpvar_14 == "1" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO1 0 [list $notmod] 2 }
+	if { $tmpvar_14 == "2" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO2 0 [list $notmod] 2 }
+	if { $tmpvar_14 == "3" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO3 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO3 0 [list $notmod] 2 }
+	if { $tmpvar_14 == "4" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_ASSO4 0 [list $notmod] 2 }}
+	global tmpvar_15
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {
+	if { $tmpvar_15 == "1" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ1 0 [list $notmod] 2 }
+	if { $tmpvar_15 == "2" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ2 0 [list $notmod] 2 }
+	if { $tmpvar_15 == "4" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ4 0 [list $notmod] 2 }
+	if { $tmpvar_15 == "8" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ8 0 [list $notmod] 2 }
+	if { $tmpvar_15 == "16" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ16 0 [list $notmod] 2 }
+	if { $tmpvar_15 == "32" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ32 0 [list $notmod] 2 }
+	if { $tmpvar_15 == "64" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ64 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ64 0 [list $notmod] 2 }
+	if { $tmpvar_15 == "128" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ128 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ128 0 [list $notmod] 2 }
+	if { $tmpvar_15 == "256" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ256 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_SZ256 0 [list $notmod] 2 }}
+	global tmpvar_16
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {
+	if { $tmpvar_16 == "16" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LZ16 0 [list $notmod] 2 }
+	if { $tmpvar_16 == "32" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LZ32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LZ32 0 [list $notmod] 2 }}
+	global tmpvar_17
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1) && ($CONFIG_DCACHE_ASSO1 != 1)} then {
+	if { $tmpvar_17 == "Random" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_ALGORND 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_ALGORND 0 [list $notmod] 2 }
+	if { $tmpvar_17 == "Direct" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_ALGODIR 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_ALGODIR 0 [list $notmod] 2 }
+	if { $tmpvar_17 == "LRR" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_ALGOLRR 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_ALGOLRR 0 [list $notmod] 2 }
+	if { $tmpvar_17 == "LRU" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_ALGOLRU 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_ALGOLRU 0 [list $notmod] 2 }}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1) && ($CONFIG_DCACHE_ASSO1 != 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LOCK $CONFIG_DCACHE_LOCK [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP $CONFIG_DCACHE_SNOOP [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_ENABLE == 1) && ($CONFIG_DCACHE_SNOOP == 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_SNOOP_SEPTAG $CONFIG_DCACHE_SNOOP_SEPTAG [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_ICACHE_ENABLE == 1 || $CONFIG_DCACHE_ENABLE == 1)} then {write_hex $cfg $autocfg CONFIG_CACHE_FIXED $CONFIG_CACHE_FIXED $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE != 1)} then {write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM $CONFIG_DCACHE_LRAM [list $notmod] 2 }
+	global tmpvar_18
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_LRAM == 1)} then {
+	if { $tmpvar_18 == "1" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ1 0 [list $notmod] 2 }
+	if { $tmpvar_18 == "2" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ2 0 [list $notmod] 2 }
+	if { $tmpvar_18 == "4" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ4 0 [list $notmod] 2 }
+	if { $tmpvar_18 == "8" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ8 0 [list $notmod] 2 }
+	if { $tmpvar_18 == "16" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ16 0 [list $notmod] 2 }
+	if { $tmpvar_18 == "32" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ32 0 [list $notmod] 2 }
+	if { $tmpvar_18 == "64" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ64 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ64 0 [list $notmod] 2 }
+	if { $tmpvar_18 == "128" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ128 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ128 0 [list $notmod] 2 }
+	if { $tmpvar_18 == "256" } then { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ256 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DCACHE_LRAM_SZ256 0 [list $notmod] 2 }}
+	global CONFIG_DCACHE_LRSTART
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DCACHE_LRAM == 1)} then {write_hex $cfg $autocfg CONFIG_DCACHE_LRSTART $CONFIG_DCACHE_LRSTART $notmod }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_comment $cfg $autocfg "MMU"}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_ENABLE $CONFIG_MMU_ENABLE [list $notmod] 2 }
+	global tmpvar_19
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1)} then {
+	if { $tmpvar_19 == "combined" } then { write_tristate $cfg $autocfg CONFIG_MMU_COMBINED 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_COMBINED 0 [list $notmod] 2 }
+	if { $tmpvar_19 == "split" } then { write_tristate $cfg $autocfg CONFIG_MMU_SPLIT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_SPLIT 0 [list $notmod] 2 }}
+	global tmpvar_20
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1)} then {
+	if { $tmpvar_20 == "LRU" } then { write_tristate $cfg $autocfg CONFIG_MMU_REPARRAY 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_REPARRAY 0 [list $notmod] 2 }
+	if { $tmpvar_20 == "Increment" } then { write_tristate $cfg $autocfg CONFIG_MMU_REPINCREMENT 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_REPINCREMENT 0 [list $notmod] 2 }}
+	global tmpvar_21
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1)} then {
+	if { $tmpvar_21 == "2" } then { write_tristate $cfg $autocfg CONFIG_MMU_I2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_I2 0 [list $notmod] 2 }
+	if { $tmpvar_21 == "4" } then { write_tristate $cfg $autocfg CONFIG_MMU_I4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_I4 0 [list $notmod] 2 }
+	if { $tmpvar_21 == "8" } then { write_tristate $cfg $autocfg CONFIG_MMU_I8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_I8 0 [list $notmod] 2 }
+	if { $tmpvar_21 == "16" } then { write_tristate $cfg $autocfg CONFIG_MMU_I16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_I16 0 [list $notmod] 2 }
+	if { $tmpvar_21 == "32" } then { write_tristate $cfg $autocfg CONFIG_MMU_I32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_I32 0 [list $notmod] 2 }
+	if { $tmpvar_21 == "64" } then { write_tristate $cfg $autocfg CONFIG_MMU_I64 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_I64 0 [list $notmod] 2 }}
+	global tmpvar_22
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1) && ($CONFIG_MMU_SPLIT == 1)} then {
+	if { $tmpvar_22 == "2" } then { write_tristate $cfg $autocfg CONFIG_MMU_D2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_D2 0 [list $notmod] 2 }
+	if { $tmpvar_22 == "4" } then { write_tristate $cfg $autocfg CONFIG_MMU_D4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_D4 0 [list $notmod] 2 }
+	if { $tmpvar_22 == "8" } then { write_tristate $cfg $autocfg CONFIG_MMU_D8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_D8 0 [list $notmod] 2 }
+	if { $tmpvar_22 == "16" } then { write_tristate $cfg $autocfg CONFIG_MMU_D16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_D16 0 [list $notmod] 2 }
+	if { $tmpvar_22 == "32" } then { write_tristate $cfg $autocfg CONFIG_MMU_D32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_D32 0 [list $notmod] 2 }
+	if { $tmpvar_22 == "64" } then { write_tristate $cfg $autocfg CONFIG_MMU_D64 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_D64 0 [list $notmod] 2 }}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1) && ($CONFIG_MMU_SPLIT == 1)} then {write_tristate $cfg $autocfg CONFIG_MMU_FASTWB $CONFIG_MMU_FASTWB [list $notmod] 2 }
+	global tmpvar_23
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_MMU_ENABLE == 1)} then {
+	if { $tmpvar_23 == "4K" } then { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_4K 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_4K 0 [list $notmod] 2 }
+	if { $tmpvar_23 == "8K" } then { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_8K 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_8K 0 [list $notmod] 2 }
+	if { $tmpvar_23 == "16K" } then { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_16K 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_16K 0 [list $notmod] 2 }
+	if { $tmpvar_23 == "32K" } then { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_32K 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_32K 0 [list $notmod] 2 }
+	if { $tmpvar_23 == "Programmable" } then { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_PROG 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_MMU_PAGE_PROG 0 [list $notmod] 2 }}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_comment $cfg $autocfg "Debug Support Unit        "}
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ENABLE $CONFIG_DSU_ENABLE [list $notmod] 2 }
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ITRACE $CONFIG_DSU_ITRACE [list $notmod] 2 }
+	global tmpvar_24
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1) && ($CONFIG_DSU_ITRACE == 1)} then {
+	if { $tmpvar_24 == "1" } then { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ1 0 [list $notmod] 2 }
+	if { $tmpvar_24 == "2" } then { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ2 0 [list $notmod] 2 }
+	if { $tmpvar_24 == "4" } then { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ4 0 [list $notmod] 2 }
+	if { $tmpvar_24 == "8" } then { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ8 0 [list $notmod] 2 }
+	if { $tmpvar_24 == "16" } then { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ITRACESZ16 0 [list $notmod] 2 }}
+	global CONFIG_DSU_ATRACE
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ATRACE $CONFIG_DSU_ATRACE [list $notmod] 2 }
+	global tmpvar_25
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_LEON3_CUSTOM == 1) && ($CONFIG_DSU_ENABLE == 1) && ($CONFIG_DSU_ATRACE == 1)} then {
+	if { $tmpvar_25 == "1" } then { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ1 0 [list $notmod] 2 }
+	if { $tmpvar_25 == "2" } then { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ2 0 [list $notmod] 2 }
+	if { $tmpvar_25 == "4" } then { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ4 0 [list $notmod] 2 }
+	if { $tmpvar_25 == "8" } then { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ8 0 [list $notmod] 2 }
+	if { $tmpvar_25 == "16" } then { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ATRACESZ16 0 [list $notmod] 2 }}
+	if {($CONFIG_LEON3 == 1)} then {write_comment $cfg $autocfg "Fault-tolerance  "}
+	if {($CONFIG_LEON3 == 1)} then {write_comment $cfg $autocfg "VHDL debug settings       "}
+	global CONFIG_IU_DISAS
+	if {($CONFIG_LEON3 == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_DISAS $CONFIG_IU_DISAS [list $notmod] 2 }
+	global CONFIG_IU_DISAS_NET
+	if {($CONFIG_LEON3 == 1) && ($CONFIG_IU_DISAS == 1)} then {write_tristate $cfg $autocfg CONFIG_IU_DISAS_NET $CONFIG_IU_DISAS_NET [list $notmod] 2 }
+	global CONFIG_DEBUG_PC32
+	if {($CONFIG_LEON3 == 1)} then {write_tristate $cfg $autocfg CONFIG_DEBUG_PC32 $CONFIG_DEBUG_PC32 [list $notmod] 2 }
+	write_comment $cfg $autocfg "AMBA configuration"
+	global CONFIG_AHB_DEFMST
+	write_int $cfg $autocfg CONFIG_AHB_DEFMST $CONFIG_AHB_DEFMST $notmod
+	global CONFIG_AHB_RROBIN
+	write_tristate $cfg $autocfg CONFIG_AHB_RROBIN $CONFIG_AHB_RROBIN [list $notmod] 2
+	global CONFIG_AHB_SPLIT
+	write_tristate $cfg $autocfg CONFIG_AHB_SPLIT $CONFIG_AHB_SPLIT [list $notmod] 2
+	global CONFIG_AHB_FPNPEN
+	write_tristate $cfg $autocfg CONFIG_AHB_FPNPEN $CONFIG_AHB_FPNPEN [list $notmod] 2
+	global CONFIG_AHB_IOADDR
+	write_hex $cfg $autocfg CONFIG_AHB_IOADDR $CONFIG_AHB_IOADDR $notmod
+	global CONFIG_APB_HADDR
+	write_hex $cfg $autocfg CONFIG_APB_HADDR $CONFIG_APB_HADDR $notmod
+	global CONFIG_AHB_MON
+	write_tristate $cfg $autocfg CONFIG_AHB_MON $CONFIG_AHB_MON [list $notmod] 2
+	global CONFIG_AHB_MONERR
+	if {($CONFIG_AHB_MON == 1)} then {write_tristate $cfg $autocfg CONFIG_AHB_MONERR $CONFIG_AHB_MONERR [list $notmod] 2 }
+	global CONFIG_AHB_MONWAR
+	if {($CONFIG_AHB_MON == 1)} then {write_tristate $cfg $autocfg CONFIG_AHB_MONWAR $CONFIG_AHB_MONWAR [list $notmod] 2 }
+	global CONFIG_AHB_DTRACE
+	write_tristate $cfg $autocfg CONFIG_AHB_DTRACE $CONFIG_AHB_DTRACE [list $notmod] 2
+	write_comment $cfg $autocfg "Debug Link           "
+	global CONFIG_DSU_UART
+	write_tristate $cfg $autocfg CONFIG_DSU_UART $CONFIG_DSU_UART [list $notmod] 2
+	global CONFIG_DSU_JTAG
+	write_tristate $cfg $autocfg CONFIG_DSU_JTAG $CONFIG_DSU_JTAG [list $notmod] 2
+	global CONFIG_DSU_ETH
+	global CONFIG_GRETH_ENABLE
+	if {($CONFIG_GRETH_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ETH $CONFIG_DSU_ETH [list $notmod] 2 }
+	global tmpvar_28
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {
+	if { $tmpvar_28 == "1" } then { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ1 0 [list $notmod] 2 }
+	if { $tmpvar_28 == "2" } then { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ2 0 [list $notmod] 2 }
+	if { $tmpvar_28 == "4" } then { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ4 0 [list $notmod] 2 }
+	if { $tmpvar_28 == "8" } then { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ8 0 [list $notmod] 2 }
+	if { $tmpvar_28 == "16" } then { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_DSU_ETHSZ16 0 [list $notmod] 2 }}
+	global CONFIG_DSU_IPMSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {write_hex $cfg $autocfg CONFIG_DSU_IPMSB $CONFIG_DSU_IPMSB $notmod }
+	global CONFIG_DSU_IPLSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {write_hex $cfg $autocfg CONFIG_DSU_IPLSB $CONFIG_DSU_IPLSB $notmod }
+	global CONFIG_DSU_ETHMSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {write_hex $cfg $autocfg CONFIG_DSU_ETHMSB $CONFIG_DSU_ETHMSB $notmod }
+	global CONFIG_DSU_ETHLSB
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {write_hex $cfg $autocfg CONFIG_DSU_ETHLSB $CONFIG_DSU_ETHLSB $notmod }
+	global CONFIG_DSU_ETH_PROG
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ETH_PROG $CONFIG_DSU_ETH_PROG [list $notmod] 2 }
+	global CONFIG_DSU_ETH_DIS
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_DSU_ETH == 1) && ($CONFIG_DSU_ETH_PROG == 1)} then {write_tristate $cfg $autocfg CONFIG_DSU_ETH_DIS $CONFIG_DSU_ETH_DIS [list $notmod] 2 }
+	write_comment $cfg $autocfg "Memory controllers                "
+	write_comment $cfg $autocfg "Leon2 memory controller        "
+	global CONFIG_MCTRL_LEON2
+	write_tristate $cfg $autocfg CONFIG_MCTRL_LEON2 $CONFIG_MCTRL_LEON2 [list $notmod] 2
+	global CONFIG_MCTRL_8BIT
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_8BIT $CONFIG_MCTRL_8BIT [list $notmod] 2 }
+	global CONFIG_MCTRL_16BIT
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_16BIT $CONFIG_MCTRL_16BIT [list $notmod] 2 }
+	global CONFIG_MCTRL_5CS
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_5CS $CONFIG_MCTRL_5CS [list $notmod] 2 }
+	global CONFIG_MCTRL_SDRAM
+	if {($CONFIG_MCTRL_LEON2 == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_SDRAM $CONFIG_MCTRL_SDRAM [list $notmod] 2 }
+	global CONFIG_MCTRL_SDRAM_SEPBUS
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_SDRAM_SEPBUS $CONFIG_MCTRL_SDRAM_SEPBUS [list $notmod] 2 }
+	global CONFIG_MCTRL_SDRAM_BUS64
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_SDRAM_SEPBUS == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_SDRAM_BUS64 $CONFIG_MCTRL_SDRAM_BUS64 [list $notmod] 2 }
+	global CONFIG_MCTRL_SDRAM_INVCLK
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_SDRAM_SEPBUS == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_SDRAM_INVCLK $CONFIG_MCTRL_SDRAM_INVCLK [list $notmod] 2 }
+	global CONFIG_MCTRL_PAGE
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_PAGE $CONFIG_MCTRL_PAGE [list $notmod] 2 }
+	global CONFIG_MCTRL_PROGPAGE
+	if {($CONFIG_MCTRL_LEON2 == 1) && ($CONFIG_MCTRL_SDRAM == 1) && ($CONFIG_MCTRL_PAGE == 1)} then {write_tristate $cfg $autocfg CONFIG_MCTRL_PROGPAGE $CONFIG_MCTRL_PROGPAGE [list $notmod] 2 }
+	write_comment $cfg $autocfg "Peripherals             "
+	write_comment $cfg $autocfg "On-chip RAM/ROM                 "
+	global CONFIG_AHBROM_ENABLE
+	write_tristate $cfg $autocfg CONFIG_AHBROM_ENABLE $CONFIG_AHBROM_ENABLE [list $notmod] 2
+	global CONFIG_AHBROM_START
+	if {($CONFIG_AHBROM_ENABLE == 1)} then {write_hex $cfg $autocfg CONFIG_AHBROM_START $CONFIG_AHBROM_START $notmod }
+	global CONFIG_AHBROM_PIPE
+	if {($CONFIG_AHBROM_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_AHBROM_PIPE $CONFIG_AHBROM_PIPE [list $notmod] 2 }
+	global CONFIG_AHBRAM_ENABLE
+	write_tristate $cfg $autocfg CONFIG_AHBRAM_ENABLE $CONFIG_AHBRAM_ENABLE [list $notmod] 2
+	global tmpvar_29
+	if {($CONFIG_AHBRAM_ENABLE == 1)} then {
+	if { $tmpvar_29 == "1" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ1 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "2" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ2 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "4" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ4 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "8" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ8 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "16" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ16 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "32" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ32 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "64" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ64 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ64 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "128" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ128 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ128 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "256" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ256 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ256 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "512" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ512 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ512 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "1024" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ1024 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ1024 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "2048" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ2048 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ2048 0 [list $notmod] 2 }
+	if { $tmpvar_29 == "4096" } then { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ4096 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_AHBRAM_SZ4096 0 [list $notmod] 2 }}
+	global CONFIG_AHBRAM_START
+	if {($CONFIG_AHBRAM_ENABLE == 1)} then {write_hex $cfg $autocfg CONFIG_AHBRAM_START $CONFIG_AHBRAM_START $notmod }
+	global CONFIG_AHBRAM_PIPE
+	if {($CONFIG_AHBRAM_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_AHBRAM_PIPE $CONFIG_AHBRAM_PIPE [list $notmod] 2 }
+	write_comment $cfg $autocfg "Ethernet             "
+	write_tristate $cfg $autocfg CONFIG_GRETH_ENABLE $CONFIG_GRETH_ENABLE [list $notmod] 2
+	global CONFIG_GRETH_GIGA
+	if {($CONFIG_GRETH_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_GRETH_GIGA $CONFIG_GRETH_GIGA [list $notmod] 2 }
+	global tmpvar_30
+	if {($CONFIG_GRETH_ENABLE == 1) && ($CONFIG_GRETH_GIGA == 0)} then {
+	if { $tmpvar_30 == "4" } then { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO4 0 [list $notmod] 2 }
+	if { $tmpvar_30 == "8" } then { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO8 0 [list $notmod] 2 }
+	if { $tmpvar_30 == "16" } then { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO16 0 [list $notmod] 2 }
+	if { $tmpvar_30 == "32" } then { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO32 0 [list $notmod] 2 }
+	if { $tmpvar_30 == "64" } then { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO64 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_GRETH_FIFO64 0 [list $notmod] 2 }}
+	write_comment $cfg $autocfg "UARTs, timers and irq control         "
+	global CONFIG_UART1_ENABLE
+	write_tristate $cfg $autocfg CONFIG_UART1_ENABLE $CONFIG_UART1_ENABLE [list $notmod] 2
+	global tmpvar_31
+	if {($CONFIG_UART1_ENABLE == 1)} then {
+	if { $tmpvar_31 == "1" } then { write_tristate $cfg $autocfg CONFIG_UA1_FIFO1 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_UA1_FIFO1 0 [list $notmod] 2 }
+	if { $tmpvar_31 == "2" } then { write_tristate $cfg $autocfg CONFIG_UA1_FIFO2 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_UA1_FIFO2 0 [list $notmod] 2 }
+	if { $tmpvar_31 == "4" } then { write_tristate $cfg $autocfg CONFIG_UA1_FIFO4 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_UA1_FIFO4 0 [list $notmod] 2 }
+	if { $tmpvar_31 == "8" } then { write_tristate $cfg $autocfg CONFIG_UA1_FIFO8 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_UA1_FIFO8 0 [list $notmod] 2 }
+	if { $tmpvar_31 == "16" } then { write_tristate $cfg $autocfg CONFIG_UA1_FIFO16 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_UA1_FIFO16 0 [list $notmod] 2 }
+	if { $tmpvar_31 == "32" } then { write_tristate $cfg $autocfg CONFIG_UA1_FIFO32 1 [list $notmod] 2 } else { write_tristate $cfg $autocfg CONFIG_UA1_FIFO32 0 [list $notmod] 2 }}
+	global CONFIG_IRQ3_ENABLE
+	write_tristate $cfg $autocfg CONFIG_IRQ3_ENABLE $CONFIG_IRQ3_ENABLE [list $notmod] 2
+	global CONFIG_IRQ3_SEC
+	if {($CONFIG_IRQ3_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_IRQ3_SEC $CONFIG_IRQ3_SEC [list $notmod] 2 }
+	global CONFIG_IRQ3_NSEC
+	if {($CONFIG_IRQ3_ENABLE == 1) && ($CONFIG_IRQ3_SEC == 1)} then {write_int $cfg $autocfg CONFIG_IRQ3_NSEC $CONFIG_IRQ3_NSEC $notmod }
+	global CONFIG_GPT_ENABLE
+	write_tristate $cfg $autocfg CONFIG_GPT_ENABLE $CONFIG_GPT_ENABLE [list $notmod] 2
+	global CONFIG_GPT_NTIM
+	if {($CONFIG_GPT_ENABLE == 1)} then {write_int $cfg $autocfg CONFIG_GPT_NTIM $CONFIG_GPT_NTIM $notmod }
+	global CONFIG_GPT_SW
+	if {($CONFIG_GPT_ENABLE == 1)} then {write_int $cfg $autocfg CONFIG_GPT_SW $CONFIG_GPT_SW $notmod }
+	global CONFIG_GPT_TW
+	if {($CONFIG_GPT_ENABLE == 1)} then {write_int $cfg $autocfg CONFIG_GPT_TW $CONFIG_GPT_TW $notmod }
+	global CONFIG_GPT_IRQ
+	if {($CONFIG_GPT_ENABLE == 1)} then {write_int $cfg $autocfg CONFIG_GPT_IRQ $CONFIG_GPT_IRQ $notmod }
+	global CONFIG_GPT_SEPIRQ
+	if {($CONFIG_GPT_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_GPT_SEPIRQ $CONFIG_GPT_SEPIRQ [list $notmod] 2 }
+	global CONFIG_GPT_WDOGEN
+	if {($CONFIG_GPT_ENABLE == 1)} then {write_tristate $cfg $autocfg CONFIG_GPT_WDOGEN $CONFIG_GPT_WDOGEN [list $notmod] 2 }
+	global CONFIG_GPT_WDOG
+	if {($CONFIG_GPT_ENABLE == 1) && ($CONFIG_GPT_WDOGEN == 1)} then {write_hex $cfg $autocfg CONFIG_GPT_WDOG $CONFIG_GPT_WDOG $notmod }
+	write_comment $cfg $autocfg "VHDL Debugging        "
+	global CONFIG_DEBUG_UART
+	write_tristate $cfg $autocfg CONFIG_DEBUG_UART $CONFIG_DEBUG_UART [list $notmod] 2
+	close $cfg
+	close $autocfg
+}
+
+
+proc clear_choices { } {
+	global CONFIG_SYN_INFERRED; set CONFIG_SYN_INFERRED 0
+	global CONFIG_SYN_STRATIX; set CONFIG_SYN_STRATIX 0
+	global CONFIG_SYN_STRATIXII; set CONFIG_SYN_STRATIXII 0
+	global CONFIG_SYN_STRATIXIII; set CONFIG_SYN_STRATIXIII 0
+	global CONFIG_SYN_STRATIXIV; set CONFIG_SYN_STRATIXIV 0
+	global CONFIG_SYN_CYCLONEIII; set CONFIG_SYN_CYCLONEIII 0
+	global CONFIG_SYN_ALTERA; set CONFIG_SYN_ALTERA 0
+	global CONFIG_SYN_AXCEL; set CONFIG_SYN_AXCEL 0
+	global CONFIG_SYN_AXDSP; set CONFIG_SYN_AXDSP 0
+	global CONFIG_SYN_PROASIC; set CONFIG_SYN_PROASIC 0
+	global CONFIG_SYN_PROASICPLUS; set CONFIG_SYN_PROASICPLUS 0
+	global CONFIG_SYN_PROASIC3; set CONFIG_SYN_PROASIC3 0
+	global CONFIG_SYN_PROASIC3E; set CONFIG_SYN_PROASIC3E 0
+	global CONFIG_SYN_PROASIC3L; set CONFIG_SYN_PROASIC3L 0
+	global CONFIG_SYN_IGLOO; set CONFIG_SYN_IGLOO 0
+	global CONFIG_SYN_FUSION; set CONFIG_SYN_FUSION 0
+	global CONFIG_SYN_UT025CRH; set CONFIG_SYN_UT025CRH 0
+	global CONFIG_SYN_UT130HBD; set CONFIG_SYN_UT130HBD 0
+	global CONFIG_SYN_UT90NHBD; set CONFIG_SYN_UT90NHBD 0
+	global CONFIG_SYN_ATC18; set CONFIG_SYN_ATC18 0
+	global CONFIG_SYN_ATC18RHA; set CONFIG_SYN_ATC18RHA 0
+	global CONFIG_SYN_CMOS9SF; set CONFIG_SYN_CMOS9SF 0
+	global CONFIG_SYN_CUSTOM1; set CONFIG_SYN_CUSTOM1 0
+	global CONFIG_SYN_EASIC90; set CONFIG_SYN_EASIC90 0
+	global CONFIG_SYN_EASIC45; set CONFIG_SYN_EASIC45 0
+	global CONFIG_SYN_IHP25; set CONFIG_SYN_IHP25 0
+	global CONFIG_SYN_IHP25RH; set CONFIG_SYN_IHP25RH 0
+	global CONFIG_SYN_LATTICE; set CONFIG_SYN_LATTICE 0
+	global CONFIG_SYN_ECLIPSE; set CONFIG_SYN_ECLIPSE 0
+	global CONFIG_SYN_PEREGRINE; set CONFIG_SYN_PEREGRINE 0
+	global CONFIG_SYN_RH_LIB18T; set CONFIG_SYN_RH_LIB18T 0
+	global CONFIG_SYN_RHUMC; set CONFIG_SYN_RHUMC 0
+	global CONFIG_SYN_SAED32; set CONFIG_SYN_SAED32 0
+	global CONFIG_SYN_DARE; set CONFIG_SYN_DARE 0
+	global CONFIG_SYN_SMIC13; set CONFIG_SYN_SMIC13 0
+	global CONFIG_SYN_TM65GPLUS; set CONFIG_SYN_TM65GPLUS 0
+	global CONFIG_SYN_TSMC90; set CONFIG_SYN_TSMC90 0
+	global CONFIG_SYN_UMC; set CONFIG_SYN_UMC 0
+	global CONFIG_SYN_ARTIX7; set CONFIG_SYN_ARTIX7 0
+	global CONFIG_SYN_KINTEX7; set CONFIG_SYN_KINTEX7 0
+	global CONFIG_SYN_SPARTAN3; set CONFIG_SYN_SPARTAN3 0
+	global CONFIG_SYN_SPARTAN3E; set CONFIG_SYN_SPARTAN3E 0
+	global CONFIG_SYN_SPARTAN6; set CONFIG_SYN_SPARTAN6 0
+	global CONFIG_SYN_VIRTEXE; set CONFIG_SYN_VIRTEXE 0
+	global CONFIG_SYN_VIRTEX2; set CONFIG_SYN_VIRTEX2 0
+	global CONFIG_SYN_VIRTEX4; set CONFIG_SYN_VIRTEX4 0
+	global CONFIG_SYN_VIRTEX5; set CONFIG_SYN_VIRTEX5 0
+	global CONFIG_SYN_VIRTEX6; set CONFIG_SYN_VIRTEX6 0
+	global CONFIG_SYN_VIRTEX7; set CONFIG_SYN_VIRTEX7 0
+	global CONFIG_SYN_ZYNQ7000; set CONFIG_SYN_ZYNQ7000 0
+	global CONFIG_MEM_INFERRED; set CONFIG_MEM_INFERRED 0
+	global CONFIG_MEM_UMC; set CONFIG_MEM_UMC 0
+	global CONFIG_MEM_RHUMC; set CONFIG_MEM_RHUMC 0
+	global CONFIG_MEM_SAED32; set CONFIG_MEM_SAED32 0
+	global CONFIG_MEM_DARE; set CONFIG_MEM_DARE 0
+	global CONFIG_MEM_ARTISAN; set CONFIG_MEM_ARTISAN 0
+	global CONFIG_MEM_CUSTOM1; set CONFIG_MEM_CUSTOM1 0
+	global CONFIG_MEM_EASIC45; set CONFIG_MEM_EASIC45 0
+	global CONFIG_MEM_VIRAGE; set CONFIG_MEM_VIRAGE 0
+	global CONFIG_MEM_VIRAGE90; set CONFIG_MEM_VIRAGE90 0
+	global CONFIG_CLK_INFERRED; set CONFIG_CLK_INFERRED 0
+	global CONFIG_CLK_HCLKBUF; set CONFIG_CLK_HCLKBUF 0
+	global CONFIG_CLK_UT130HBD; set CONFIG_CLK_UT130HBD 0
+	global CONFIG_CLK_ALTDLL; set CONFIG_CLK_ALTDLL 0
+	global CONFIG_CLK_LATDLL; set CONFIG_CLK_LATDLL 0
+	global CONFIG_CLK_PRO3PLL; set CONFIG_CLK_PRO3PLL 0
+	global CONFIG_CLK_PRO3EPLL; set CONFIG_CLK_PRO3EPLL 0
+	global CONFIG_CLK_PRO3LPLL; set CONFIG_CLK_PRO3LPLL 0
+	global CONFIG_CLK_FUSPLL; set CONFIG_CLK_FUSPLL 0
+	global CONFIG_CLK_LIB18T; set CONFIG_CLK_LIB18T 0
+	global CONFIG_CLK_RHUMC; set CONFIG_CLK_RHUMC 0
+	global CONFIG_CLK_DARE; set CONFIG_CLK_DARE 0
+	global CONFIG_CLK_SAED32; set CONFIG_CLK_SAED32 0
+	global CONFIG_CLK_EASIC45; set CONFIG_CLK_EASIC45 0
+	global CONFIG_CLK_CLKPLLE2; set CONFIG_CLK_CLKPLLE2 0
+	global CONFIG_CLK_CLKDLL; set CONFIG_CLK_CLKDLL 0
+	global CONFIG_CLK_DCM; set CONFIG_CLK_DCM 0
+	global CONFIG_LEON3_MIN; set CONFIG_LEON3_MIN 0
+	global CONFIG_LEON3_GP; set CONFIG_LEON3_GP 0
+	global CONFIG_LEON3_HP; set CONFIG_LEON3_HP 0
+	global CONFIG_LEON3_CUSTOM; set CONFIG_LEON3_CUSTOM 0
+	global CONFIG_IU_MUL_LATENCY_2; set CONFIG_IU_MUL_LATENCY_2 0
+	global CONFIG_IU_MUL_LATENCY_4; set CONFIG_IU_MUL_LATENCY_4 0
+	global CONFIG_IU_MUL_LATENCY_5; set CONFIG_IU_MUL_LATENCY_5 0
+	global CONFIG_IU_MUL_INFERRED; set CONFIG_IU_MUL_INFERRED 0
+	global CONFIG_IU_MUL_MODGEN; set CONFIG_IU_MUL_MODGEN 0
+	global CONFIG_IU_MUL_TECHSPEC; set CONFIG_IU_MUL_TECHSPEC 0
+	global CONFIG_IU_MUL_DW; set CONFIG_IU_MUL_DW 0
+	global CONFIG_FPU_GRFPU; set CONFIG_FPU_GRFPU 0
+	global CONFIG_FPU_GRFPULITE; set CONFIG_FPU_GRFPULITE 0
+	global CONFIG_FPU_MEIKO; set CONFIG_FPU_MEIKO 0
+	global CONFIG_FPU_GRFPU_INFMUL; set CONFIG_FPU_GRFPU_INFMUL 0
+	global CONFIG_FPU_GRFPU_DWMUL; set CONFIG_FPU_GRFPU_DWMUL 0
+	global CONFIG_FPU_GRFPU_MODGEN; set CONFIG_FPU_GRFPU_MODGEN 0
+	global CONFIG_FPU_GRFPU_TECHSPEC; set CONFIG_FPU_GRFPU_TECHSPEC 0
+	global CONFIG_FPU_GRFPC0; set CONFIG_FPU_GRFPC0 0
+	global CONFIG_FPU_GRFPC1; set CONFIG_FPU_GRFPC1 0
+	global CONFIG_FPU_GRFPC2; set CONFIG_FPU_GRFPC2 0
+	global CONFIG_ICACHE_ASSO1; set CONFIG_ICACHE_ASSO1 0
+	global CONFIG_ICACHE_ASSO2; set CONFIG_ICACHE_ASSO2 0
+	global CONFIG_ICACHE_ASSO3; set CONFIG_ICACHE_ASSO3 0
+	global CONFIG_ICACHE_ASSO4; set CONFIG_ICACHE_ASSO4 0
+	global CONFIG_ICACHE_SZ1; set CONFIG_ICACHE_SZ1 0
+	global CONFIG_ICACHE_SZ2; set CONFIG_ICACHE_SZ2 0
+	global CONFIG_ICACHE_SZ4; set CONFIG_ICACHE_SZ4 0
+	global CONFIG_ICACHE_SZ8; set CONFIG_ICACHE_SZ8 0
+	global CONFIG_ICACHE_SZ16; set CONFIG_ICACHE_SZ16 0
+	global CONFIG_ICACHE_SZ32; set CONFIG_ICACHE_SZ32 0
+	global CONFIG_ICACHE_SZ64; set CONFIG_ICACHE_SZ64 0
+	global CONFIG_ICACHE_SZ128; set CONFIG_ICACHE_SZ128 0
+	global CONFIG_ICACHE_SZ256; set CONFIG_ICACHE_SZ256 0
+	global CONFIG_ICACHE_LZ16; set CONFIG_ICACHE_LZ16 0
+	global CONFIG_ICACHE_LZ32; set CONFIG_ICACHE_LZ32 0
+	global CONFIG_ICACHE_ALGORND; set CONFIG_ICACHE_ALGORND 0
+	global CONFIG_ICACHE_ALGODIR; set CONFIG_ICACHE_ALGODIR 0
+	global CONFIG_ICACHE_ALGOLRR; set CONFIG_ICACHE_ALGOLRR 0
+	global CONFIG_ICACHE_ALGOLRU; set CONFIG_ICACHE_ALGOLRU 0
+	global CONFIG_ICACHE_LRAM_SZ1; set CONFIG_ICACHE_LRAM_SZ1 0
+	global CONFIG_ICACHE_LRAM_SZ2; set CONFIG_ICACHE_LRAM_SZ2 0
+	global CONFIG_ICACHE_LRAM_SZ4; set CONFIG_ICACHE_LRAM_SZ4 0
+	global CONFIG_ICACHE_LRAM_SZ8; set CONFIG_ICACHE_LRAM_SZ8 0
+	global CONFIG_ICACHE_LRAM_SZ16; set CONFIG_ICACHE_LRAM_SZ16 0
+	global CONFIG_ICACHE_LRAM_SZ32; set CONFIG_ICACHE_LRAM_SZ32 0
+	global CONFIG_ICACHE_LRAM_SZ64; set CONFIG_ICACHE_LRAM_SZ64 0
+	global CONFIG_ICACHE_LRAM_SZ128; set CONFIG_ICACHE_LRAM_SZ128 0
+	global CONFIG_ICACHE_LRAM_SZ256; set CONFIG_ICACHE_LRAM_SZ256 0
+	global CONFIG_DCACHE_ASSO1; set CONFIG_DCACHE_ASSO1 0
+	global CONFIG_DCACHE_ASSO2; set CONFIG_DCACHE_ASSO2 0
+	global CONFIG_DCACHE_ASSO3; set CONFIG_DCACHE_ASSO3 0
+	global CONFIG_DCACHE_ASSO4; set CONFIG_DCACHE_ASSO4 0
+	global CONFIG_DCACHE_SZ1; set CONFIG_DCACHE_SZ1 0
+	global CONFIG_DCACHE_SZ2; set CONFIG_DCACHE_SZ2 0
+	global CONFIG_DCACHE_SZ4; set CONFIG_DCACHE_SZ4 0
+	global CONFIG_DCACHE_SZ8; set CONFIG_DCACHE_SZ8 0
+	global CONFIG_DCACHE_SZ16; set CONFIG_DCACHE_SZ16 0
+	global CONFIG_DCACHE_SZ32; set CONFIG_DCACHE_SZ32 0
+	global CONFIG_DCACHE_SZ64; set CONFIG_DCACHE_SZ64 0
+	global CONFIG_DCACHE_SZ128; set CONFIG_DCACHE_SZ128 0
+	global CONFIG_DCACHE_SZ256; set CONFIG_DCACHE_SZ256 0
+	global CONFIG_DCACHE_LZ16; set CONFIG_DCACHE_LZ16 0
+	global CONFIG_DCACHE_LZ32; set CONFIG_DCACHE_LZ32 0
+	global CONFIG_DCACHE_ALGORND; set CONFIG_DCACHE_ALGORND 0
+	global CONFIG_DCACHE_ALGODIR; set CONFIG_DCACHE_ALGODIR 0
+	global CONFIG_DCACHE_ALGOLRR; set CONFIG_DCACHE_ALGOLRR 0
+	global CONFIG_DCACHE_ALGOLRU; set CONFIG_DCACHE_ALGOLRU 0
+	global CONFIG_DCACHE_LRAM_SZ1; set CONFIG_DCACHE_LRAM_SZ1 0
+	global CONFIG_DCACHE_LRAM_SZ2; set CONFIG_DCACHE_LRAM_SZ2 0
+	global CONFIG_DCACHE_LRAM_SZ4; set CONFIG_DCACHE_LRAM_SZ4 0
+	global CONFIG_DCACHE_LRAM_SZ8; set CONFIG_DCACHE_LRAM_SZ8 0
+	global CONFIG_DCACHE_LRAM_SZ16; set CONFIG_DCACHE_LRAM_SZ16 0
+	global CONFIG_DCACHE_LRAM_SZ32; set CONFIG_DCACHE_LRAM_SZ32 0
+	global CONFIG_DCACHE_LRAM_SZ64; set CONFIG_DCACHE_LRAM_SZ64 0
+	global CONFIG_DCACHE_LRAM_SZ128; set CONFIG_DCACHE_LRAM_SZ128 0
+	global CONFIG_DCACHE_LRAM_SZ256; set CONFIG_DCACHE_LRAM_SZ256 0
+	global CONFIG_MMU_COMBINED; set CONFIG_MMU_COMBINED 0
+	global CONFIG_MMU_SPLIT; set CONFIG_MMU_SPLIT 0
+	global CONFIG_MMU_REPARRAY; set CONFIG_MMU_REPARRAY 0
+	global CONFIG_MMU_REPINCREMENT; set CONFIG_MMU_REPINCREMENT 0
+	global CONFIG_MMU_I2; set CONFIG_MMU_I2 0
+	global CONFIG_MMU_I4; set CONFIG_MMU_I4 0
+	global CONFIG_MMU_I8; set CONFIG_MMU_I8 0
+	global CONFIG_MMU_I16; set CONFIG_MMU_I16 0
+	global CONFIG_MMU_I32; set CONFIG_MMU_I32 0
+	global CONFIG_MMU_I64; set CONFIG_MMU_I64 0
+	global CONFIG_MMU_D2; set CONFIG_MMU_D2 0
+	global CONFIG_MMU_D4; set CONFIG_MMU_D4 0
+	global CONFIG_MMU_D8; set CONFIG_MMU_D8 0
+	global CONFIG_MMU_D16; set CONFIG_MMU_D16 0
+	global CONFIG_MMU_D32; set CONFIG_MMU_D32 0
+	global CONFIG_MMU_D64; set CONFIG_MMU_D64 0
+	global CONFIG_MMU_PAGE_4K; set CONFIG_MMU_PAGE_4K 0
+	global CONFIG_MMU_PAGE_8K; set CONFIG_MMU_PAGE_8K 0
+	global CONFIG_MMU_PAGE_16K; set CONFIG_MMU_PAGE_16K 0
+	global CONFIG_MMU_PAGE_32K; set CONFIG_MMU_PAGE_32K 0
+	global CONFIG_MMU_PAGE_PROG; set CONFIG_MMU_PAGE_PROG 0
+	global CONFIG_DSU_ITRACESZ1; set CONFIG_DSU_ITRACESZ1 0
+	global CONFIG_DSU_ITRACESZ2; set CONFIG_DSU_ITRACESZ2 0
+	global CONFIG_DSU_ITRACESZ4; set CONFIG_DSU_ITRACESZ4 0
+	global CONFIG_DSU_ITRACESZ8; set CONFIG_DSU_ITRACESZ8 0
+	global CONFIG_DSU_ITRACESZ16; set CONFIG_DSU_ITRACESZ16 0
+	global CONFIG_DSU_ATRACESZ1; set CONFIG_DSU_ATRACESZ1 0
+	global CONFIG_DSU_ATRACESZ2; set CONFIG_DSU_ATRACESZ2 0
+	global CONFIG_DSU_ATRACESZ4; set CONFIG_DSU_ATRACESZ4 0
+	global CONFIG_DSU_ATRACESZ8; set CONFIG_DSU_ATRACESZ8 0
+	global CONFIG_DSU_ATRACESZ16; set CONFIG_DSU_ATRACESZ16 0
+	global CONFIG_DSU_ETHSZ1; set CONFIG_DSU_ETHSZ1 0
+	global CONFIG_DSU_ETHSZ2; set CONFIG_DSU_ETHSZ2 0
+	global CONFIG_DSU_ETHSZ4; set CONFIG_DSU_ETHSZ4 0
+	global CONFIG_DSU_ETHSZ8; set CONFIG_DSU_ETHSZ8 0
+	global CONFIG_DSU_ETHSZ16; set CONFIG_DSU_ETHSZ16 0
+	global CONFIG_AHBRAM_SZ1; set CONFIG_AHBRAM_SZ1 0
+	global CONFIG_AHBRAM_SZ2; set CONFIG_AHBRAM_SZ2 0
+	global CONFIG_AHBRAM_SZ4; set CONFIG_AHBRAM_SZ4 0
+	global CONFIG_AHBRAM_SZ8; set CONFIG_AHBRAM_SZ8 0
+	global CONFIG_AHBRAM_SZ16; set CONFIG_AHBRAM_SZ16 0
+	global CONFIG_AHBRAM_SZ32; set CONFIG_AHBRAM_SZ32 0
+	global CONFIG_AHBRAM_SZ64; set CONFIG_AHBRAM_SZ64 0
+	global CONFIG_AHBRAM_SZ128; set CONFIG_AHBRAM_SZ128 0
+	global CONFIG_AHBRAM_SZ256; set CONFIG_AHBRAM_SZ256 0
+	global CONFIG_AHBRAM_SZ512; set CONFIG_AHBRAM_SZ512 0
+	global CONFIG_AHBRAM_SZ1024; set CONFIG_AHBRAM_SZ1024 0
+	global CONFIG_AHBRAM_SZ2048; set CONFIG_AHBRAM_SZ2048 0
+	global CONFIG_AHBRAM_SZ4096; set CONFIG_AHBRAM_SZ4096 0
+	global CONFIG_GRETH_FIFO4; set CONFIG_GRETH_FIFO4 0
+	global CONFIG_GRETH_FIFO8; set CONFIG_GRETH_FIFO8 0
+	global CONFIG_GRETH_FIFO16; set CONFIG_GRETH_FIFO16 0
+	global CONFIG_GRETH_FIFO32; set CONFIG_GRETH_FIFO32 0
+	global CONFIG_GRETH_FIFO64; set CONFIG_GRETH_FIFO64 0
+	global CONFIG_UA1_FIFO1; set CONFIG_UA1_FIFO1 0
+	global CONFIG_UA1_FIFO2; set CONFIG_UA1_FIFO2 0
+	global CONFIG_UA1_FIFO4; set CONFIG_UA1_FIFO4 0
+	global CONFIG_UA1_FIFO8; set CONFIG_UA1_FIFO8 0
+	global CONFIG_UA1_FIFO16; set CONFIG_UA1_FIFO16 0
+	global CONFIG_UA1_FIFO32; set CONFIG_UA1_FIFO32 0
+}
+
+
+proc update_choices { } {
+	global tmpvar_0
+	set tmpvar_0 "Inferred"
+	global CONFIG_SYN_INFERRED
+	if { $CONFIG_SYN_INFERRED == 1 } then { set tmpvar_0 "Inferred" }
+	global CONFIG_SYN_STRATIX
+	if { $CONFIG_SYN_STRATIX == 1 } then { set tmpvar_0 "Altera-Stratix" }
+	global CONFIG_SYN_STRATIXII
+	if { $CONFIG_SYN_STRATIXII == 1 } then { set tmpvar_0 "Altera-StratixII" }
+	global CONFIG_SYN_STRATIXIII
+	if { $CONFIG_SYN_STRATIXIII == 1 } then { set tmpvar_0 "Altera-StratixIII" }
+	global CONFIG_SYN_STRATIXIV
+	if { $CONFIG_SYN_STRATIXIV == 1 } then { set tmpvar_0 "Altera-StratixIV" }
+	global CONFIG_SYN_CYCLONEIII
+	if { $CONFIG_SYN_CYCLONEIII == 1 } then { set tmpvar_0 "Altera-CycloneIII" }
+	global CONFIG_SYN_ALTERA
+	if { $CONFIG_SYN_ALTERA == 1 } then { set tmpvar_0 "Altera-Others" }
+	global CONFIG_SYN_AXCEL
+	if { $CONFIG_SYN_AXCEL == 1 } then { set tmpvar_0 "Actel-Axcelerator" }
+	global CONFIG_SYN_AXDSP
+	if { $CONFIG_SYN_AXDSP == 1 } then { set tmpvar_0 "Actel-Axcelerator-DSP" }
+	global CONFIG_SYN_PROASIC
+	if { $CONFIG_SYN_PROASIC == 1 } then { set tmpvar_0 "Actel-Proasic" }
+	global CONFIG_SYN_PROASICPLUS
+	if { $CONFIG_SYN_PROASICPLUS == 1 } then { set tmpvar_0 "Actel-ProasicPlus" }
+	global CONFIG_SYN_PROASIC3
+	if { $CONFIG_SYN_PROASIC3 == 1 } then { set tmpvar_0 "Actel-Proasic3" }
+	global CONFIG_SYN_PROASIC3E
+	if { $CONFIG_SYN_PROASIC3E == 1 } then { set tmpvar_0 "Actel-Proasic3E" }
+	global CONFIG_SYN_PROASIC3L
+	if { $CONFIG_SYN_PROASIC3L == 1 } then { set tmpvar_0 "Actel-Proasic3L" }
+	global CONFIG_SYN_IGLOO
+	if { $CONFIG_SYN_IGLOO == 1 } then { set tmpvar_0 "Actel-IGLOO/p/L" }
+	global CONFIG_SYN_FUSION
+	if { $CONFIG_SYN_FUSION == 1 } then { set tmpvar_0 "Actel-Fusion" }
+	global CONFIG_SYN_UT025CRH
+	if { $CONFIG_SYN_UT025CRH == 1 } then { set tmpvar_0 "Aeroflex-UT025CRH" }
+	global CONFIG_SYN_UT130HBD
+	if { $CONFIG_SYN_UT130HBD == 1 } then { set tmpvar_0 "Aeroflex-UT130HBD" }
+	global CONFIG_SYN_UT90NHBD
+	if { $CONFIG_SYN_UT90NHBD == 1 } then { set tmpvar_0 "Aeroflex-UT90NHBD" }
+	global CONFIG_SYN_ATC18
+	if { $CONFIG_SYN_ATC18 == 1 } then { set tmpvar_0 "Atmel-ATC18" }
+	global CONFIG_SYN_ATC18RHA
+	if { $CONFIG_SYN_ATC18RHA == 1 } then { set tmpvar_0 "Atmel-ATC18RHA" }
+	global CONFIG_SYN_CMOS9SF
+	if { $CONFIG_SYN_CMOS9SF == 1 } then { set tmpvar_0 "IBM-CMOS9SF" }
+	global CONFIG_SYN_CUSTOM1
+	if { $CONFIG_SYN_CUSTOM1 == 1 } then { set tmpvar_0 "Custom1" }
+	global CONFIG_SYN_EASIC90
+	if { $CONFIG_SYN_EASIC90 == 1 } then { set tmpvar_0 "eASIC90" }
+	global CONFIG_SYN_EASIC45
+	if { $CONFIG_SYN_EASIC45 == 1 } then { set tmpvar_0 "eASIC45" }
+	global CONFIG_SYN_IHP25
+	if { $CONFIG_SYN_IHP25 == 1 } then { set tmpvar_0 "IHP25" }
+	global CONFIG_SYN_IHP25RH
+	if { $CONFIG_SYN_IHP25RH == 1 } then { set tmpvar_0 "IHP25RH" }
+	global CONFIG_SYN_LATTICE
+	if { $CONFIG_SYN_LATTICE == 1 } then { set tmpvar_0 "Lattice-EC/ECP/XP" }
+	global CONFIG_SYN_ECLIPSE
+	if { $CONFIG_SYN_ECLIPSE == 1 } then { set tmpvar_0 "Quicklogic-Eclipse" }
+	global CONFIG_SYN_PEREGRINE
+	if { $CONFIG_SYN_PEREGRINE == 1 } then { set tmpvar_0 "Peregrine" }
+	global CONFIG_SYN_RH_LIB18T
+	if { $CONFIG_SYN_RH_LIB18T == 1 } then { set tmpvar_0 "RH-LIB18T" }
+	global CONFIG_SYN_RHUMC
+	if { $CONFIG_SYN_RHUMC == 1 } then { set tmpvar_0 "RH-UMC" }
+	global CONFIG_SYN_SAED32
+	if { $CONFIG_SYN_SAED32 == 1 } then { set tmpvar_0 "SAED32" }
+	global CONFIG_SYN_DARE
+	if { $CONFIG_SYN_DARE == 1 } then { set tmpvar_0 "DARE" }
+	global CONFIG_SYN_SMIC13
+	if { $CONFIG_SYN_SMIC13 == 1 } then { set tmpvar_0 "SMIC130" }
+	global CONFIG_SYN_TM65GPLUS
+	if { $CONFIG_SYN_TM65GPLUS == 1 } then { set tmpvar_0 "TM65Gplus" }
+	global CONFIG_SYN_TSMC90
+	if { $CONFIG_SYN_TSMC90 == 1 } then { set tmpvar_0 "TSMC90" }
+	global CONFIG_SYN_UMC
+	if { $CONFIG_SYN_UMC == 1 } then { set tmpvar_0 "UMC180" }
+	global CONFIG_SYN_ARTIX7
+	if { $CONFIG_SYN_ARTIX7 == 1 } then { set tmpvar_0 "Xilinx-Artix7" }
+	global CONFIG_SYN_KINTEX7
+	if { $CONFIG_SYN_KINTEX7 == 1 } then { set tmpvar_0 "Xilinx-Kintex7" }
+	global CONFIG_SYN_SPARTAN3
+	if { $CONFIG_SYN_SPARTAN3 == 1 } then { set tmpvar_0 "Xilinx-Spartan3" }
+	global CONFIG_SYN_SPARTAN3E
+	if { $CONFIG_SYN_SPARTAN3E == 1 } then { set tmpvar_0 "Xilinx-Spartan3E" }
+	global CONFIG_SYN_SPARTAN6
+	if { $CONFIG_SYN_SPARTAN6 == 1 } then { set tmpvar_0 "Xilinx-Spartan6" }
+	global CONFIG_SYN_VIRTEXE
+	if { $CONFIG_SYN_VIRTEXE == 1 } then { set tmpvar_0 "Xilinx-VirtexE" }
+	global CONFIG_SYN_VIRTEX2
+	if { $CONFIG_SYN_VIRTEX2 == 1 } then { set tmpvar_0 "Xilinx-Virtex2" }
+	global CONFIG_SYN_VIRTEX4
+	if { $CONFIG_SYN_VIRTEX4 == 1 } then { set tmpvar_0 "Xilinx-Virtex4" }
+	global CONFIG_SYN_VIRTEX5
+	if { $CONFIG_SYN_VIRTEX5 == 1 } then { set tmpvar_0 "Xilinx-Virtex5" }
+	global CONFIG_SYN_VIRTEX6
+	if { $CONFIG_SYN_VIRTEX6 == 1 } then { set tmpvar_0 "Xilinx-Virtex6" }
+	global CONFIG_SYN_VIRTEX7
+	if { $CONFIG_SYN_VIRTEX7 == 1 } then { set tmpvar_0 "Xilinx-Virtex7" }
+	global CONFIG_SYN_ZYNQ7000
+	if { $CONFIG_SYN_ZYNQ7000 == 1 } then { set tmpvar_0 "Xilinx-Zynq7000" }
+	global tmpvar_1
+	set tmpvar_1 "Inferred"
+	global CONFIG_MEM_INFERRED
+	if { $CONFIG_MEM_INFERRED == 1 } then { set tmpvar_1 "Inferred" }
+	global CONFIG_MEM_UMC
+	if { $CONFIG_MEM_UMC == 1 } then { set tmpvar_1 "UMC18" }
+	global CONFIG_MEM_RHUMC
+	if { $CONFIG_MEM_RHUMC == 1 } then { set tmpvar_1 "RH-UMC" }
+	global CONFIG_MEM_SAED32
+	if { $CONFIG_MEM_SAED32 == 1 } then { set tmpvar_1 "SAED32" }
+	global CONFIG_MEM_DARE
+	if { $CONFIG_MEM_DARE == 1 } then { set tmpvar_1 "DARE" }
+	global CONFIG_MEM_ARTISAN
+	if { $CONFIG_MEM_ARTISAN == 1 } then { set tmpvar_1 "Artisan" }
+	global CONFIG_MEM_CUSTOM1
+	if { $CONFIG_MEM_CUSTOM1 == 1 } then { set tmpvar_1 "Custom1" }
+	global CONFIG_MEM_EASIC45
+	if { $CONFIG_MEM_EASIC45 == 1 } then { set tmpvar_1 "EASIC45" }
+	global CONFIG_MEM_VIRAGE
+	if { $CONFIG_MEM_VIRAGE == 1 } then { set tmpvar_1 "Virage" }
+	global CONFIG_MEM_VIRAGE90
+	if { $CONFIG_MEM_VIRAGE90 == 1 } then { set tmpvar_1 "Virage-TSMC90" }
+	global tmpvar_2
+	set tmpvar_2 "Inferred"
+	global CONFIG_CLK_INFERRED
+	if { $CONFIG_CLK_INFERRED == 1 } then { set tmpvar_2 "Inferred" }
+	global CONFIG_CLK_HCLKBUF
+	if { $CONFIG_CLK_HCLKBUF == 1 } then { set tmpvar_2 "Actel-HCLKBUF" }
+	global CONFIG_CLK_UT130HBD
+	if { $CONFIG_CLK_UT130HBD == 1 } then { set tmpvar_2 "Aeroflex-UT130HBD" }
+	global CONFIG_CLK_ALTDLL
+	if { $CONFIG_CLK_ALTDLL == 1 } then { set tmpvar_2 "Altera-ALTPLL" }
+	global CONFIG_CLK_LATDLL
+	if { $CONFIG_CLK_LATDLL == 1 } then { set tmpvar_2 "Lattice-EXPLL" }
+	global CONFIG_CLK_PRO3PLL
+	if { $CONFIG_CLK_PRO3PLL == 1 } then { set tmpvar_2 "Proasic3-PLL" }
+	global CONFIG_CLK_PRO3EPLL
+	if { $CONFIG_CLK_PRO3EPLL == 1 } then { set tmpvar_2 "Proasic3E-PLL" }
+	global CONFIG_CLK_PRO3LPLL
+	if { $CONFIG_CLK_PRO3LPLL == 1 } then { set tmpvar_2 "Proasic3L-PLL" }
+	global CONFIG_CLK_FUSPLL
+	if { $CONFIG_CLK_FUSPLL == 1 } then { set tmpvar_2 "Fusion-PLL" }
+	global CONFIG_CLK_LIB18T
+	if { $CONFIG_CLK_LIB18T == 1 } then { set tmpvar_2 "RH-LIB18T-PLL" }
+	global CONFIG_CLK_RHUMC
+	if { $CONFIG_CLK_RHUMC == 1 } then { set tmpvar_2 "RHUMC-PLL" }
+	global CONFIG_CLK_DARE
+	if { $CONFIG_CLK_DARE == 1 } then { set tmpvar_2 "DARE-PLL" }
+	global CONFIG_CLK_SAED32
+	if { $CONFIG_CLK_SAED32 == 1 } then { set tmpvar_2 "SAED32-PLL" }
+	global CONFIG_CLK_EASIC45
+	if { $CONFIG_CLK_EASIC45 == 1 } then { set tmpvar_2 "EASIC45-PLL" }
+	global CONFIG_CLK_CLKPLLE2
+	if { $CONFIG_CLK_CLKPLLE2 == 1 } then { set tmpvar_2 "Xilinx-PLLE2" }
+	global CONFIG_CLK_CLKDLL
+	if { $CONFIG_CLK_CLKDLL == 1 } then { set tmpvar_2 "Xilinx-CLKDLL" }
+	global CONFIG_CLK_DCM
+	if { $CONFIG_CLK_DCM == 1 } then { set tmpvar_2 "Xilinx-DCM" }
+	global tmpvar_3
+	set tmpvar_3 "Custom-configuration"
+	global CONFIG_LEON3_MIN
+	if { $CONFIG_LEON3_MIN == 1 } then { set tmpvar_3 "Minimal-configuration" }
+	global CONFIG_LEON3_GP
+	if { $CONFIG_LEON3_GP == 1 } then { set tmpvar_3 "General-purpose-cfg" }
+	global CONFIG_LEON3_HP
+	if { $CONFIG_LEON3_HP == 1 } then { set tmpvar_3 "High-Performance-cfg" }
+	global CONFIG_LEON3_CUSTOM
+	if { $CONFIG_LEON3_CUSTOM == 1 } then { set tmpvar_3 "Custom-configuration" }
+	global tmpvar_4
+	set tmpvar_4 "5-cycles"
+	global CONFIG_IU_MUL_LATENCY_2
+	if { $CONFIG_IU_MUL_LATENCY_2 == 1 } then { set tmpvar_4 "2-cycles" }
+	global CONFIG_IU_MUL_LATENCY_4
+	if { $CONFIG_IU_MUL_LATENCY_4 == 1 } then { set tmpvar_4 "4-cycles" }
+	global CONFIG_IU_MUL_LATENCY_5
+	if { $CONFIG_IU_MUL_LATENCY_5 == 1 } then { set tmpvar_4 "5-cycles" }
+	global tmpvar_5
+	set tmpvar_5 "Inferred"
+	global CONFIG_IU_MUL_INFERRED
+	if { $CONFIG_IU_MUL_INFERRED == 1 } then { set tmpvar_5 "Inferred" }
+	global CONFIG_IU_MUL_MODGEN
+	if { $CONFIG_IU_MUL_MODGEN == 1 } then { set tmpvar_5 "NTNU_Modgen" }
+	global CONFIG_IU_MUL_TECHSPEC
+	if { $CONFIG_IU_MUL_TECHSPEC == 1 } then { set tmpvar_5 "TechSpec" }
+	global CONFIG_IU_MUL_DW
+	if { $CONFIG_IU_MUL_DW == 1 } then { set tmpvar_5 "Designware" }
+	global tmpvar_6
+	set tmpvar_6 "GRFPU"
+	global CONFIG_FPU_GRFPU
+	if { $CONFIG_FPU_GRFPU == 1 } then { set tmpvar_6 "GRFPU" }
+	global CONFIG_FPU_GRFPULITE
+	if { $CONFIG_FPU_GRFPULITE == 1 } then { set tmpvar_6 "GRFPU-LITE" }
+	global CONFIG_FPU_MEIKO
+	if { $CONFIG_FPU_MEIKO == 1 } then { set tmpvar_6 "Meiko" }
+	global tmpvar_7
+	set tmpvar_7 "Inferred"
+	global CONFIG_FPU_GRFPU_INFMUL
+	if { $CONFIG_FPU_GRFPU_INFMUL == 1 } then { set tmpvar_7 "Inferred" }
+	global CONFIG_FPU_GRFPU_DWMUL
+	if { $CONFIG_FPU_GRFPU_DWMUL == 1 } then { set tmpvar_7 "DW" }
+	global CONFIG_FPU_GRFPU_MODGEN
+	if { $CONFIG_FPU_GRFPU_MODGEN == 1 } then { set tmpvar_7 "ModGen" }
+	global CONFIG_FPU_GRFPU_TECHSPEC
+	if { $CONFIG_FPU_GRFPU_TECHSPEC == 1 } then { set tmpvar_7 "TechSpec" }
+	global tmpvar_8
+	set tmpvar_8 "Simple"
+	global CONFIG_FPU_GRFPC0
+	if { $CONFIG_FPU_GRFPC0 == 1 } then { set tmpvar_8 "Simple" }
+	global CONFIG_FPU_GRFPC1
+	if { $CONFIG_FPU_GRFPC1 == 1 } then { set tmpvar_8 "Data-forwarding" }
+	global CONFIG_FPU_GRFPC2
+	if { $CONFIG_FPU_GRFPC2 == 1 } then { set tmpvar_8 "Non-blocking" }
+	global tmpvar_9
+	set tmpvar_9 "1"
+	global CONFIG_ICACHE_ASSO1
+	if { $CONFIG_ICACHE_ASSO1 == 1 } then { set tmpvar_9 "1" }
+	global CONFIG_ICACHE_ASSO2
+	if { $CONFIG_ICACHE_ASSO2 == 1 } then { set tmpvar_9 "2" }
+	global CONFIG_ICACHE_ASSO3
+	if { $CONFIG_ICACHE_ASSO3 == 1 } then { set tmpvar_9 "3" }
+	global CONFIG_ICACHE_ASSO4
+	if { $CONFIG_ICACHE_ASSO4 == 1 } then { set tmpvar_9 "4" }
+	global tmpvar_10
+	set tmpvar_10 "4"
+	global CONFIG_ICACHE_SZ1
+	if { $CONFIG_ICACHE_SZ1 == 1 } then { set tmpvar_10 "1" }
+	global CONFIG_ICACHE_SZ2
+	if { $CONFIG_ICACHE_SZ2 == 1 } then { set tmpvar_10 "2" }
+	global CONFIG_ICACHE_SZ4
+	if { $CONFIG_ICACHE_SZ4 == 1 } then { set tmpvar_10 "4" }
+	global CONFIG_ICACHE_SZ8
+	if { $CONFIG_ICACHE_SZ8 == 1 } then { set tmpvar_10 "8" }
+	global CONFIG_ICACHE_SZ16
+	if { $CONFIG_ICACHE_SZ16 == 1 } then { set tmpvar_10 "16" }
+	global CONFIG_ICACHE_SZ32
+	if { $CONFIG_ICACHE_SZ32 == 1 } then { set tmpvar_10 "32" }
+	global CONFIG_ICACHE_SZ64
+	if { $CONFIG_ICACHE_SZ64 == 1 } then { set tmpvar_10 "64" }
+	global CONFIG_ICACHE_SZ128
+	if { $CONFIG_ICACHE_SZ128 == 1 } then { set tmpvar_10 "128" }
+	global CONFIG_ICACHE_SZ256
+	if { $CONFIG_ICACHE_SZ256 == 1 } then { set tmpvar_10 "256" }
+	global tmpvar_11
+	set tmpvar_11 "32"
+	global CONFIG_ICACHE_LZ16
+	if { $CONFIG_ICACHE_LZ16 == 1 } then { set tmpvar_11 "16" }
+	global CONFIG_ICACHE_LZ32
+	if { $CONFIG_ICACHE_LZ32 == 1 } then { set tmpvar_11 "32" }
+	global tmpvar_12
+	set tmpvar_12 "Random"
+	global CONFIG_ICACHE_ALGORND
+	if { $CONFIG_ICACHE_ALGORND == 1 } then { set tmpvar_12 "Random" }
+	global CONFIG_ICACHE_ALGODIR
+	if { $CONFIG_ICACHE_ALGODIR == 1 } then { set tmpvar_12 "Direct" }
+	global CONFIG_ICACHE_ALGOLRR
+	if { $CONFIG_ICACHE_ALGOLRR == 1 } then { set tmpvar_12 "LRR" }
+	global CONFIG_ICACHE_ALGOLRU
+	if { $CONFIG_ICACHE_ALGOLRU == 1 } then { set tmpvar_12 "LRU" }
+	global tmpvar_13
+	set tmpvar_13 "4"
+	global CONFIG_ICACHE_LRAM_SZ1
+	if { $CONFIG_ICACHE_LRAM_SZ1 == 1 } then { set tmpvar_13 "1" }
+	global CONFIG_ICACHE_LRAM_SZ2
+	if { $CONFIG_ICACHE_LRAM_SZ2 == 1 } then { set tmpvar_13 "2" }
+	global CONFIG_ICACHE_LRAM_SZ4
+	if { $CONFIG_ICACHE_LRAM_SZ4 == 1 } then { set tmpvar_13 "4" }
+	global CONFIG_ICACHE_LRAM_SZ8
+	if { $CONFIG_ICACHE_LRAM_SZ8 == 1 } then { set tmpvar_13 "8" }
+	global CONFIG_ICACHE_LRAM_SZ16
+	if { $CONFIG_ICACHE_LRAM_SZ16 == 1 } then { set tmpvar_13 "16" }
+	global CONFIG_ICACHE_LRAM_SZ32
+	if { $CONFIG_ICACHE_LRAM_SZ32 == 1 } then { set tmpvar_13 "32" }
+	global CONFIG_ICACHE_LRAM_SZ64
+	if { $CONFIG_ICACHE_LRAM_SZ64 == 1 } then { set tmpvar_13 "64" }
+	global CONFIG_ICACHE_LRAM_SZ128
+	if { $CONFIG_ICACHE_LRAM_SZ128 == 1 } then { set tmpvar_13 "128" }
+	global CONFIG_ICACHE_LRAM_SZ256
+	if { $CONFIG_ICACHE_LRAM_SZ256 == 1 } then { set tmpvar_13 "256" }
+	global tmpvar_14
+	set tmpvar_14 "1"
+	global CONFIG_DCACHE_ASSO1
+	if { $CONFIG_DCACHE_ASSO1 == 1 } then { set tmpvar_14 "1" }
+	global CONFIG_DCACHE_ASSO2
+	if { $CONFIG_DCACHE_ASSO2 == 1 } then { set tmpvar_14 "2" }
+	global CONFIG_DCACHE_ASSO3
+	if { $CONFIG_DCACHE_ASSO3 == 1 } then { set tmpvar_14 "3" }
+	global CONFIG_DCACHE_ASSO4
+	if { $CONFIG_DCACHE_ASSO4 == 1 } then { set tmpvar_14 "4" }
+	global tmpvar_15
+	set tmpvar_15 "4"
+	global CONFIG_DCACHE_SZ1
+	if { $CONFIG_DCACHE_SZ1 == 1 } then { set tmpvar_15 "1" }
+	global CONFIG_DCACHE_SZ2
+	if { $CONFIG_DCACHE_SZ2 == 1 } then { set tmpvar_15 "2" }
+	global CONFIG_DCACHE_SZ4
+	if { $CONFIG_DCACHE_SZ4 == 1 } then { set tmpvar_15 "4" }
+	global CONFIG_DCACHE_SZ8
+	if { $CONFIG_DCACHE_SZ8 == 1 } then { set tmpvar_15 "8" }
+	global CONFIG_DCACHE_SZ16
+	if { $CONFIG_DCACHE_SZ16 == 1 } then { set tmpvar_15 "16" }
+	global CONFIG_DCACHE_SZ32
+	if { $CONFIG_DCACHE_SZ32 == 1 } then { set tmpvar_15 "32" }
+	global CONFIG_DCACHE_SZ64
+	if { $CONFIG_DCACHE_SZ64 == 1 } then { set tmpvar_15 "64" }
+	global CONFIG_DCACHE_SZ128
+	if { $CONFIG_DCACHE_SZ128 == 1 } then { set tmpvar_15 "128" }
+	global CONFIG_DCACHE_SZ256
+	if { $CONFIG_DCACHE_SZ256 == 1 } then { set tmpvar_15 "256" }
+	global tmpvar_16
+	set tmpvar_16 "32"
+	global CONFIG_DCACHE_LZ16
+	if { $CONFIG_DCACHE_LZ16 == 1 } then { set tmpvar_16 "16" }
+	global CONFIG_DCACHE_LZ32
+	if { $CONFIG_DCACHE_LZ32 == 1 } then { set tmpvar_16 "32" }
+	global tmpvar_17
+	set tmpvar_17 "Random"
+	global CONFIG_DCACHE_ALGORND
+	if { $CONFIG_DCACHE_ALGORND == 1 } then { set tmpvar_17 "Random" }
+	global CONFIG_DCACHE_ALGODIR
+	if { $CONFIG_DCACHE_ALGODIR == 1 } then { set tmpvar_17 "Direct" }
+	global CONFIG_DCACHE_ALGOLRR
+	if { $CONFIG_DCACHE_ALGOLRR == 1 } then { set tmpvar_17 "LRR" }
+	global CONFIG_DCACHE_ALGOLRU
+	if { $CONFIG_DCACHE_ALGOLRU == 1 } then { set tmpvar_17 "LRU" }
+	global tmpvar_18
+	set tmpvar_18 "4"
+	global CONFIG_DCACHE_LRAM_SZ1
+	if { $CONFIG_DCACHE_LRAM_SZ1 == 1 } then { set tmpvar_18 "1" }
+	global CONFIG_DCACHE_LRAM_SZ2
+	if { $CONFIG_DCACHE_LRAM_SZ2 == 1 } then { set tmpvar_18 "2" }
+	global CONFIG_DCACHE_LRAM_SZ4
+	if { $CONFIG_DCACHE_LRAM_SZ4 == 1 } then { set tmpvar_18 "4" }
+	global CONFIG_DCACHE_LRAM_SZ8
+	if { $CONFIG_DCACHE_LRAM_SZ8 == 1 } then { set tmpvar_18 "8" }
+	global CONFIG_DCACHE_LRAM_SZ16
+	if { $CONFIG_DCACHE_LRAM_SZ16 == 1 } then { set tmpvar_18 "16" }
+	global CONFIG_DCACHE_LRAM_SZ32
+	if { $CONFIG_DCACHE_LRAM_SZ32 == 1 } then { set tmpvar_18 "32" }
+	global CONFIG_DCACHE_LRAM_SZ64
+	if { $CONFIG_DCACHE_LRAM_SZ64 == 1 } then { set tmpvar_18 "64" }
+	global CONFIG_DCACHE_LRAM_SZ128
+	if { $CONFIG_DCACHE_LRAM_SZ128 == 1 } then { set tmpvar_18 "128" }
+	global CONFIG_DCACHE_LRAM_SZ256
+	if { $CONFIG_DCACHE_LRAM_SZ256 == 1 } then { set tmpvar_18 "256" }
+	global tmpvar_19
+	set tmpvar_19 "combined"
+	global CONFIG_MMU_COMBINED
+	if { $CONFIG_MMU_COMBINED == 1 } then { set tmpvar_19 "combined" }
+	global CONFIG_MMU_SPLIT
+	if { $CONFIG_MMU_SPLIT == 1 } then { set tmpvar_19 "split" }
+	global tmpvar_20
+	set tmpvar_20 "Increment"
+	global CONFIG_MMU_REPARRAY
+	if { $CONFIG_MMU_REPARRAY == 1 } then { set tmpvar_20 "LRU" }
+	global CONFIG_MMU_REPINCREMENT
+	if { $CONFIG_MMU_REPINCREMENT == 1 } then { set tmpvar_20 "Increment" }
+	global tmpvar_21
+	set tmpvar_21 "8"
+	global CONFIG_MMU_I2
+	if { $CONFIG_MMU_I2 == 1 } then { set tmpvar_21 "2" }
+	global CONFIG_MMU_I4
+	if { $CONFIG_MMU_I4 == 1 } then { set tmpvar_21 "4" }
+	global CONFIG_MMU_I8
+	if { $CONFIG_MMU_I8 == 1 } then { set tmpvar_21 "8" }
+	global CONFIG_MMU_I16
+	if { $CONFIG_MMU_I16 == 1 } then { set tmpvar_21 "16" }
+	global CONFIG_MMU_I32
+	if { $CONFIG_MMU_I32 == 1 } then { set tmpvar_21 "32" }
+	global CONFIG_MMU_I64
+	if { $CONFIG_MMU_I64 == 1 } then { set tmpvar_21 "64" }
+	global tmpvar_22
+	set tmpvar_22 "8"
+	global CONFIG_MMU_D2
+	if { $CONFIG_MMU_D2 == 1 } then { set tmpvar_22 "2" }
+	global CONFIG_MMU_D4
+	if { $CONFIG_MMU_D4 == 1 } then { set tmpvar_22 "4" }
+	global CONFIG_MMU_D8
+	if { $CONFIG_MMU_D8 == 1 } then { set tmpvar_22 "8" }
+	global CONFIG_MMU_D16
+	if { $CONFIG_MMU_D16 == 1 } then { set tmpvar_22 "16" }
+	global CONFIG_MMU_D32
+	if { $CONFIG_MMU_D32 == 1 } then { set tmpvar_22 "32" }
+	global CONFIG_MMU_D64
+	if { $CONFIG_MMU_D64 == 1 } then { set tmpvar_22 "64" }
+	global tmpvar_23
+	set tmpvar_23 "4K"
+	global CONFIG_MMU_PAGE_4K
+	if { $CONFIG_MMU_PAGE_4K == 1 } then { set tmpvar_23 "4K" }
+	global CONFIG_MMU_PAGE_8K
+	if { $CONFIG_MMU_PAGE_8K == 1 } then { set tmpvar_23 "8K" }
+	global CONFIG_MMU_PAGE_16K
+	if { $CONFIG_MMU_PAGE_16K == 1 } then { set tmpvar_23 "16K" }
+	global CONFIG_MMU_PAGE_32K
+	if { $CONFIG_MMU_PAGE_32K == 1 } then { set tmpvar_23 "32K" }
+	global CONFIG_MMU_PAGE_PROG
+	if { $CONFIG_MMU_PAGE_PROG == 1 } then { set tmpvar_23 "Programmable" }
+	global tmpvar_24
+	set tmpvar_24 "1"
+	global CONFIG_DSU_ITRACESZ1
+	if { $CONFIG_DSU_ITRACESZ1 == 1 } then { set tmpvar_24 "1" }
+	global CONFIG_DSU_ITRACESZ2
+	if { $CONFIG_DSU_ITRACESZ2 == 1 } then { set tmpvar_24 "2" }
+	global CONFIG_DSU_ITRACESZ4
+	if { $CONFIG_DSU_ITRACESZ4 == 1 } then { set tmpvar_24 "4" }
+	global CONFIG_DSU_ITRACESZ8
+	if { $CONFIG_DSU_ITRACESZ8 == 1 } then { set tmpvar_24 "8" }
+	global CONFIG_DSU_ITRACESZ16
+	if { $CONFIG_DSU_ITRACESZ16 == 1 } then { set tmpvar_24 "16" }
+	global tmpvar_25
+	set tmpvar_25 "1"
+	global CONFIG_DSU_ATRACESZ1
+	if { $CONFIG_DSU_ATRACESZ1 == 1 } then { set tmpvar_25 "1" }
+	global CONFIG_DSU_ATRACESZ2
+	if { $CONFIG_DSU_ATRACESZ2 == 1 } then { set tmpvar_25 "2" }
+	global CONFIG_DSU_ATRACESZ4
+	if { $CONFIG_DSU_ATRACESZ4 == 1 } then { set tmpvar_25 "4" }
+	global CONFIG_DSU_ATRACESZ8
+	if { $CONFIG_DSU_ATRACESZ8 == 1 } then { set tmpvar_25 "8" }
+	global CONFIG_DSU_ATRACESZ16
+	if { $CONFIG_DSU_ATRACESZ16 == 1 } then { set tmpvar_25 "16" }
+	global tmpvar_28
+	set tmpvar_28 "2"
+	global CONFIG_DSU_ETHSZ1
+	if { $CONFIG_DSU_ETHSZ1 == 1 } then { set tmpvar_28 "1" }
+	global CONFIG_DSU_ETHSZ2
+	if { $CONFIG_DSU_ETHSZ2 == 1 } then { set tmpvar_28 "2" }
+	global CONFIG_DSU_ETHSZ4
+	if { $CONFIG_DSU_ETHSZ4 == 1 } then { set tmpvar_28 "4" }
+	global CONFIG_DSU_ETHSZ8
+	if { $CONFIG_DSU_ETHSZ8 == 1 } then { set tmpvar_28 "8" }
+	global CONFIG_DSU_ETHSZ16
+	if { $CONFIG_DSU_ETHSZ16 == 1 } then { set tmpvar_28 "16" }
+	global tmpvar_29
+	set tmpvar_29 "4"
+	global CONFIG_AHBRAM_SZ1
+	if { $CONFIG_AHBRAM_SZ1 == 1 } then { set tmpvar_29 "1" }
+	global CONFIG_AHBRAM_SZ2
+	if { $CONFIG_AHBRAM_SZ2 == 1 } then { set tmpvar_29 "2" }
+	global CONFIG_AHBRAM_SZ4
+	if { $CONFIG_AHBRAM_SZ4 == 1 } then { set tmpvar_29 "4" }
+	global CONFIG_AHBRAM_SZ8
+	if { $CONFIG_AHBRAM_SZ8 == 1 } then { set tmpvar_29 "8" }
+	global CONFIG_AHBRAM_SZ16
+	if { $CONFIG_AHBRAM_SZ16 == 1 } then { set tmpvar_29 "16" }
+	global CONFIG_AHBRAM_SZ32
+	if { $CONFIG_AHBRAM_SZ32 == 1 } then { set tmpvar_29 "32" }
+	global CONFIG_AHBRAM_SZ64
+	if { $CONFIG_AHBRAM_SZ64 == 1 } then { set tmpvar_29 "64" }
+	global CONFIG_AHBRAM_SZ128
+	if { $CONFIG_AHBRAM_SZ128 == 1 } then { set tmpvar_29 "128" }
+	global CONFIG_AHBRAM_SZ256
+	if { $CONFIG_AHBRAM_SZ256 == 1 } then { set tmpvar_29 "256" }
+	global CONFIG_AHBRAM_SZ512
+	if { $CONFIG_AHBRAM_SZ512 == 1 } then { set tmpvar_29 "512" }
+	global CONFIG_AHBRAM_SZ1024
+	if { $CONFIG_AHBRAM_SZ1024 == 1 } then { set tmpvar_29 "1024" }
+	global CONFIG_AHBRAM_SZ2048
+	if { $CONFIG_AHBRAM_SZ2048 == 1 } then { set tmpvar_29 "2048" }
+	global CONFIG_AHBRAM_SZ4096
+	if { $CONFIG_AHBRAM_SZ4096 == 1 } then { set tmpvar_29 "4096" }
+	global tmpvar_30
+	set tmpvar_30 "8"
+	global CONFIG_GRETH_FIFO4
+	if { $CONFIG_GRETH_FIFO4 == 1 } then { set tmpvar_30 "4" }
+	global CONFIG_GRETH_FIFO8
+	if { $CONFIG_GRETH_FIFO8 == 1 } then { set tmpvar_30 "8" }
+	global CONFIG_GRETH_FIFO16
+	if { $CONFIG_GRETH_FIFO16 == 1 } then { set tmpvar_30 "16" }
+	global CONFIG_GRETH_FIFO32
+	if { $CONFIG_GRETH_FIFO32 == 1 } then { set tmpvar_30 "32" }
+	global CONFIG_GRETH_FIFO64
+	if { $CONFIG_GRETH_FIFO64 == 1 } then { set tmpvar_30 "64" }
+	global tmpvar_31
+	set tmpvar_31 "1"
+	global CONFIG_UA1_FIFO1
+	if { $CONFIG_UA1_FIFO1 == 1 } then { set tmpvar_31 "1" }
+	global CONFIG_UA1_FIFO2
+	if { $CONFIG_UA1_FIFO2 == 1 } then { set tmpvar_31 "2" }
+	global CONFIG_UA1_FIFO4
+	if { $CONFIG_UA1_FIFO4 == 1 } then { set tmpvar_31 "4" }
+	global CONFIG_UA1_FIFO8
+	if { $CONFIG_UA1_FIFO8 == 1 } then { set tmpvar_31 "8" }
+	global CONFIG_UA1_FIFO16
+	if { $CONFIG_UA1_FIFO16 == 1 } then { set tmpvar_31 "16" }
+	global CONFIG_UA1_FIFO32
+	if { $CONFIG_UA1_FIFO32 == 1 } then { set tmpvar_31 "32" }
+}
+
+
+proc update_define_mainmenu {} {
+	global CONFIG_MODULES
+}
+
+
+# FILE: tail.tk
+# This file is boilerplate TCL/TK function definitions for 'make xconfig'.
+#
+# CHANGES
+# =======
+#
+# 8 January 1998, Michael Elizabeth Chastain, <mec@shout.net>
+# Arrange buttons in three columns for better screen fitting.
+#
+
+#
+# Read the user's settings from .config.  These will override whatever is
+# in config.in.  Don't do this if the user specified a -D to force
+# the defaults.
+#
+
+set defaults defconfig
+
+if { [file readable .config] == 1} then {
+	if { $argc > 0 } then {
+		if { [lindex $argv 0] != "-D" } then {
+			read_config .config
+			if { [lindex $argv 0] == "-regen" } then {
+				catch {exec cp -f .config .config.old};
+				writeconfig .config config.h
+				exit 2
+			}
+		}
+		else
+		{
+			read_config $defaults
+		}
+	} else {
+		read_config .config
+	}
+} else {
+	read_config $defaults
+}
+
+update_define 1 $total_menus 0
+update_mainmenu
+
+button .f0.right.save -anchor w -text "Save and Exit" -underline 0\
+    -command { catch {exec cp -f .config .config.old}; \
+		writeconfig .config config.h; wrapup .wrap }
+
+button .f0.right.quit -anchor w -text "Quit Without Saving" -underline 0\
+    -command { maybe_exit .maybe }
+
+button .f0.right.load -anchor w -text "Load Configuration from File" \
+    -command { load_configfile .load "Load Configuration from file" read_config_file
+}
+
+button .f0.right.store -anchor w -text "Store Configuration to File" \
+    -command { load_configfile .load "Store Configuration to file" write_config_file }
+
+#
+# Now pack everything.
+#
+
+pack .f0.right.store .f0.right.load .f0.right.quit .f0.right.save \
+    -padx 0 -pady 0 -side bottom -fill x
+pack .f0.left .f0.middle .f0.right -side left -padx 5 -pady 0 -fill y
+pack .f0 -padx 5 -pady 5
+
+update idletasks
+set winy [expr 10 + [winfo reqheight .f0]]
+set scry [lindex [wm maxsize .] 1]
+set winx [expr 10 + [winfo reqwidth .f0]]
+set scrx [lindex [wm maxsize .] 0]
+if {$winx < $scrx} then {set maxx -1} else {set maxx $winx}
+if {$winy < $scry} then {set maxy -1} else {set maxy $winy}
+.f0 configure -width $winx -height $winy 
+wm maxsize . $maxx $maxy
+
+#
+# If we cannot write our config files, disable the write button.
+#
+if { [file exists .config] == 1 } then {
+		if { [file writable .config] == 0 } then {
+			.f0.right.save configure -state disabled
+		}
+	} else {
+		if { [file writable .] == 0 } then {
+			.f0.right.save configure -state disabled
+		}
+	}
+
+#if { [file exists include/linux/autoconf.h] == 1 } then {
+#		if { [file writable include/linux/autoconf.h] == 0 } then {
+#			.f0.right.save configure -state disabled
+#		}
+#	} else {
+#		if { [file writable include/linux/] == 0 } then {
+#			.f0.right.save configure -state disabled
+#		}
+#	}
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/leon3mp.ucf b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/leon3mp.ucf
new file mode 100644
index 0000000..5432c25
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/leon3mp.ucf
@@ -0,0 +1,134 @@
+NET "resetn"  IOSTANDARD = LVCMOS33 | LOC=AD12; 
+NET "resetn" PULLUP;
+         
+NET "clk_ref"  IOSTANDARD = LVCMOS33 | LOC=K14; 
+NET "clk_ref" 	TNM_NET = "clk_ref";
+TIMESPEC "TS_clk_ref" = PERIOD "clk_ref" 50.0 ns HIGH 50 %;     
+
+NET "errorn"  IOSTANDARD = LVCMOS33 |  LOC=V19; 
+
+NET "bus_flash_ncs" IOSTANDARD = LVCMOS33 | LOC=C25;
+NET "bus_flash_nreset" IOSTANDARD = LVCMOS33 | LOC=M19; 
+NET "bus_flash_nbusy" IOSTANDARD = LVCMOS33 | LOC=B26 | PULLUP;
+NET "usb_ncs"  IOSTANDARD = LVCMOS33 |  LOC=AA12;
+NET "ram_ncs"  IOSTANDARD = LVCMOS33 | LOC=D13;
+
+NET "bus_*" FAST;
+NET "bus_*" IOSTANDARD = LVCMOS33;
+
+NET "clkm" 		TNM_NET = "clkm";
+NET "lclk" 		TNM_NET = "lclk";
+
+NET "erx_clk" IOSTANDARD = LVCMOS33 | LOC=B14; 
+NET "erx_clk" 	TNM_NET = "erx_clk";
+
+TIMESPEC "TS_erx_clk" = PERIOD "erx_clk" 40.0 ns HIGH 50 %;
+TIMESPEC "TS_clkm_erx_clk" = FROM "clkm" TO "erx_clk" TIG;
+TIMESPEC "TS_erx_clk_clkm" = FROM "erx_clk" TO "clkm" TIG;
+OFFSET = IN 10 ns VALID 20 ns BEFORE "erx_clk" RISING;
+
+
+NET "erxd(3)" IOSTANDARD = LVCMOS33 | LOC=G5;
+NET "erxd(2)" IOSTANDARD = LVCMOS33 | LOC=D1;
+NET "erxd(1)" IOSTANDARD = LVCMOS33 | LOC=D2;
+NET "erxd(0)" IOSTANDARD = LVCMOS33 | LOC=C1;
+NET "erx_dv" IOSTANDARD = LVCMOS33 | LOC=C2;
+NET "erx_er" IOSTANDARD = LVCMOS33 | LOC=A7;
+NET "erx_col" IOSTANDARD = LVCMOS33 | LOC=G1;
+NET "erx_crs" IOSTANDARD = LVCMOS33 | LOC=A5;
+NET "etxd(3)" IOSTANDARD = LVCMOS33 | FAST | LOC=F5;
+NET "etxd(2)" IOSTANDARD = LVCMOS33 | FAST | LOC=G6;
+NET "etxd(1)" IOSTANDARD = LVCMOS33 | FAST | LOC=E1;
+NET "etxd(0)" IOSTANDARD = LVCMOS33 | FAST | LOC=F4;
+NET "etx_en" IOSTANDARD = LVCMOS33 | FAST | LOC=F3;
+NET "emdc" IOSTANDARD = LVCMOS33 | LOC=B2;
+NET "emdio" IOSTANDARD = LVCMOS33 | LOC=D3;
+NET "erstn" IOSTANDARD = LVCMOS33 | LOC=E4;
+
+NET "led_romcs" IOSTANDARD = LVCMOS33 | SLOW | LOC=AA10;   # BLUE #5
+NET "led_rombrdyn" IOSTANDARD = LVCMOS33 | SLOW | LOC=V11; # RED 4
+  
+     
+NET "bus_a(24)" LOC=N21;
+NET "bus_a(23)" LOC=N24;
+NET "bus_a(22)" LOC=L22;
+NET "bus_a(21)" LOC=J22;     
+NET "bus_a(20)" LOC=J26;
+NET "bus_a(19)" LOC=B17;
+NET "bus_a(18)" LOC=C17;
+NET "bus_a(17)" LOC=AB12;
+NET "bus_a(16)" LOC=Y20;
+NET "bus_a(15)" LOC=AB23;
+NET "bus_a(14)" LOC=L24;
+NET "bus_a(13)" LOC=M26;
+NET "bus_a(12)" LOC=AE26;
+NET "bus_a(11)" LOC=M25;
+NET "bus_a(10)" LOC=M1;
+NET "bus_a(9)" LOC=K25;
+NET "bus_a(8)" LOC=J25;
+NET "bus_a(7)" LOC=J21;
+NET "bus_a(6)" LOC=C18;
+NET "bus_a(5)" LOC=C16;
+NET "bus_a(4)" LOC=C15;
+NET "bus_a(3)" LOC=A15;
+NET "bus_a(2)" LOC=A12;
+NET "bus_a(1)" LOC=AD15;
+NET "bus_a(0)" LOC=L3;
+
+
+NET "bus_d(31)" LOC=P23;
+NET "bus_d(30)" LOC=P21;
+NET "bus_d(29)" LOC=R20;
+NET "bus_d(28)" LOC=R19;
+NET "bus_d(27)" LOC=T20;
+NET "bus_d(26)" LOC=U22;
+NET "bus_d(25)" LOC=U20;
+NET "bus_d(24)" LOC=F25;
+NET "bus_d(23)" LOC=Y25;
+NET "bus_d(22)" LOC=V24;
+NET "bus_d(21)" LOC=V23;
+NET "bus_d(20)" LOC=U21;
+NET "bus_d(19)" LOC=T17;
+NET "bus_d(18)" LOC=T18;
+NET "bus_d(17)" LOC=P6;
+NET "bus_d(16)" LOC=P18;
+NET "bus_d(15)" LOC=P26;
+NET "bus_d(14)" LOC=P22;
+NET "bus_d(13)" LOC=P20;
+NET "bus_d(12)" LOC=R25;
+NET "bus_d(11)" LOC=R22;
+NET "bus_d(10)" LOC=R21;
+NET "bus_d(9)" LOC=T24;
+NET "bus_d(8)" LOC=K26;
+NET "bus_d(7)" LOC=G24;
+NET "bus_d(6)" LOC=U24;
+NET "bus_d(5)" LOC=U23;
+NET "bus_d(4)" LOC=T23;
+NET "bus_d(3)" LOC=R17;
+NET "bus_d(2)" LOC=R18;
+NET "bus_d(1)" LOC=R26;
+NET "bus_d(0)" LOC=P25;
+
+NET "bus_sdram_clk" LOC=F13;
+NET "bus_sdram_cke" LOC=V22;
+NET "bus_sdram_feedback" LOC=AA14;
+NET "bus_sdram_ncs" LOC=W20;
+NET "bus_nwe" LOC=M3;
+NET "bus_sdram_nras" LOC=AA22;
+NET "bus_sdram_ncas" LOC=AA24;
+NET "bus_noe" LOC=AD11;
+
+NET "bus_nbe(3)" LOC=V25;
+NET "bus_nbe(2)" LOC=AA25;
+NET "bus_nbe(1)" LOC=A22;
+NET "bus_nbe(0)" LOC=U19;
+
+NET "uart_txd"  IOSTANDARD = LVCMOS33 | LOC=M6;
+NET "uart_rxd"  IOSTANDARD = LVCMOS33 | LOC=N7;
+NET "dsu_txd"  IOSTANDARD = LVCMOS33 | LOC=M8;
+NET "dsu_rxd" IOSTANDARD = LVCMOS33 |  LOC=N6;
+NET "dsubre"  IOSTANDARD = LVCMOS33 | LOC=AB6;
+
+NET "plllock" IOSTANDARD = LVCMOS33 |  LOC=R1;
+
+
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/leon3mp.vhd b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/leon3mp.vhd
new file mode 100644
index 0000000..eba7ecf
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/leon3mp.vhd
@@ -0,0 +1,486 @@
+-----------------------------------------------------------------------------
+--  LEON3 Altium Nano3000 Top Level Module
+------------------------------------------------------------------------------
+--  This file is a part of the GRLIB VHDL IP LIBRARY
+--  Copyright (C) 2003 - 2008, Gaisler Research
+--  Copyright (C) 2008 - 2014, Aeroflex Gaisler
+--  Copyright (C) 2014 Martin Wilson <mrw@trimetix.co.uk>
+--
+--  This program is free software; you can redistribute it and/or modify
+--  it under the terms of the GNU General Public License as published by
+--  the Free Software Foundation; either version 2 of the License, or
+--  (at your option) any later version.
+--
+--  This program is distributed in the hope that it will be useful,
+--  but WITHOUT ANY WARRANTY; without even the implied warranty of
+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+--  GNU General Public License for more details.
+--
+--  You should have received a copy of the GNU General Public License
+--  along with this program; if not, write to the Free Software
+--  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 
+------------------------------------------------------------------------------
+
+library ieee;
+use ieee.std_logic_1164.all;
+library grlib, techmap;
+use grlib.amba.all;
+use grlib.devices.all;
+use grlib.stdlib.all;
+use techmap.gencomp.all;
+library gaisler;
+use gaisler.memctrl.all;
+use gaisler.leon3.all;
+use gaisler.uart.all;
+use gaisler.misc.all;
+use gaisler.net.all;
+use gaisler.jtag.all;
+-- pragma translate_off
+use gaisler.sim.all;
+-- pragma translate_on
+
+library esa;
+use esa.memoryctrl.all;
+
+use work.config.all;
+
+entity leon3mp is
+  generic (
+    fabtech : integer := CFG_FABTECH;   --
+    memtech : integer := CFG_MEMTECH;   --
+    padtech : integer := CFG_PADTECH;   --
+    clktech : integer := CFG_CLKTECH;   --
+    disas   : integer := CFG_DISAS;     -- 
+    dbguart : integer := CFG_DUART;     -- 
+    pclow   : integer := CFG_PCLOW
+    );
+  port (
+    resetn  : in  std_logic;
+    clk_ref : in  std_logic;
+    errorn  : out std_logic;
+
+    -- Ethernet signals
+    erx_clk : in    std_ulogic;
+    erxd    : in    std_logic_vector(3 downto 0);
+    erx_dv  : in    std_ulogic;
+    erx_er  : in    std_ulogic;
+    erx_col : in    std_ulogic;
+    erx_crs : in    std_ulogic;
+    emdint  : in    std_ulogic;
+    etxd    : out   std_logic_vector(3 downto 0);
+    etx_en  : out   std_ulogic;
+    emdc    : out   std_ulogic;
+    emdio   : inout std_logic;
+    erstn   : out   std_ulogic;
+
+    -- Common Bus Memory (Flash, SRAM and SDRAM)
+    bus_a              : out   std_logic_vector(24 downto 0);  --
+    bus_d              : inout std_logic_vector(31 downto 0);  --
+    bus_sdram_clk      : out   std_ulogic;                     --
+    bus_sdram_feedback : in    std_ulogic;                     --
+    bus_sdram_cke      : out   std_logic;                      --
+    bus_sdram_ncs      : out   std_logic;                      --
+    bus_nwe            : out   std_logic;                      -- 
+    bus_sdram_nras     : out   std_logic;                      -- 
+    bus_sdram_ncas     : out   std_logic;                      -- 
+    bus_nbe            : out   std_logic_vector(3 downto 0);   -- 
+    bus_noe            : out   std_logic;
+    bus_flash_nreset   : out   std_logic;                      --
+    bus_flash_ncs      : out   std_logic;
+    bus_flash_nbusy    : in    std_logic;
+
+    uart_txd : out std_logic;           -- 
+    uart_rxd : in  std_logic;           -- 
+
+    dsu_txd : out std_logic;            -- 
+    dsu_rxd : in  std_logic;            -- 
+    dsubre  : in  std_logic;
+
+    plllock : out std_logic;
+
+    ram_ncs : out std_logic;
+    usb_ncs : out std_logic;
+
+    led_romcs    : out std_logic;
+    led_rombrdyn : out std_logic
+
+    );
+end;
+
+architecture rtl of leon3mp is
+
+  signal vcc, gnd : std_logic_vector(4 downto 0);  --
+  signal memi     : memory_in_type  := memory_in_none;
+  signal memo     : memory_out_type := memory_out_none;
+  signal wpo      : wprot_out_type;
+
+  signal sdo : sdram_out_type;
+
+  signal apbi  : apb_slv_in_type;                              --
+  signal apbo  : apb_slv_out_vector := (others => apb_none);   --
+  signal ahbsi : ahb_slv_in_type;                              --
+  signal ahbso : ahb_slv_out_vector := (others => ahbs_none);  --
+  signal ahbmi : ahb_mst_in_type;                              --
+  signal ahbmo : ahb_mst_out_vector := (others => ahbm_none);  --
+
+  signal clkm, rstn, rstraw, pciclk, sdclkl, lclk, rst : std_logic;
+
+  signal cgi : clkgen_in_type;
+  signal cgo : clkgen_out_type;
+
+  signal u1i, u2i, dui : uart_in_type;
+  signal u1o, u2o, duo : uart_out_type;
+
+  signal irqi : irq_in_vector(0 to CFG_NCPU-1);
+  signal irqo : irq_out_vector(0 to CFG_NCPU-1);
+
+  signal dbgi : l3_debug_in_vector(0 to CFG_NCPU-1);
+  signal dbgo : l3_debug_out_vector(0 to CFG_NCPU-1);
+
+  signal dsui : dsu_in_type;
+  signal dsuo : dsu_out_type;
+
+  signal ethi  : eth_in_type;
+  signal etho  : eth_out_type;
+  signal stati : ahbstat_in_type;
+
+  signal gpti : gptimer_in_type;
+
+  signal dsubren : std_logic;
+
+  signal rxd1 : std_logic;
+  signal txd1 : std_logic;
+
+  signal romsel   : std_logic;
+  signal rombusy  : std_logic;
+  signal romready : std_logic;
+
+  signal tck, tms, tdi, tdo : std_logic;
+
+  signal mem_nwe : std_logic;
+
+  signal eth_inclk : std_logic;
+
+  constant BOARD_FREQ : integer := 20000;  -- Board frequency in KHz, used in clkgen
+  constant CPU_FREQ   : integer := BOARD_FREQ * CFG_CLKMUL / CFG_CLKDIV;  -- cpu frequency in KHz 
+  constant IOAEN      : integer := 1;  -- can enables AHB I/O area, alla CFG generics  
+  constant CFG_SDEN   : integer := CFG_MCTRL_SDEN;
+  constant CFG_INVCLK : integer := CFG_MCTRL_INVCLK;
+  constant OEPOL      : integer := padoen_polarity(padtech);
+  constant notag      : integer := 1;  --unused processor input? why 1 when default is 0?
+
+  attribute syn_keep     : boolean;
+  attribute syn_preserve : boolean;
+  attribute keep         : boolean;
+
+begin
+
+----------------------------------------------------------------------
+---                       Clock Generation                         ---
+----------------------------------------------------------------------
+
+  ram_ncs <= '1';
+  usb_ncs <= '1';
+
+  plllock <= cgo.clklock;
+
+  cgi.pllctrl <= "00"; cgi.pllrst <= rstraw;
+
+  clk_pad : clkpad generic map (tech => padtech)
+    port map (clk_ref, lclk);
+  
+  pllref_pad : clkpad generic map (tech => padtech)
+    port map (bus_sdram_feedback, cgi.pllref);
+  
+  sdclk_pad : outpad generic map (tech => padtech, slew => 1)
+    port map (bus_sdram_clk, sdclkl);
+  
+  clkgen0 : clkgen
+    generic map (tech    => clktech, clk_mul => CFG_CLKMUL, clk_div => CFG_CLKDIV,
+                 sdramen => CFG_MCTRL_SDEN, noclkfb => CFG_CLK_NOFB,
+                 pcien   => 0, pcidll => 0, pcisysclk => 0, freq => BOARD_FREQ)
+    port map (clkin  => lclk, pciclkin => lclk, clk => clkm,
+              clkn   => open, clk2x => open, sdclk => sdclkl,
+              pciclk => open, cgi => cgi, cgo => cgo);
+
+----------------------------------------------------------------------
+---                       Reset Generation                         ---
+----------------------------------------------------------------------
+
+  resetn_pad : inpad generic map (tech => padtech) port map (resetn, rst);
+  rst0       : rstgen
+    port map (rst, clkm, cgo.clklock, rstn, rstraw);
+
+----------------------------------------------------------------------
+---                     AMBA AHB Controller                        ---
+----------------------------------------------------------------------
+
+  ahb0 : ahbctrl
+    generic map (defmast => CFG_DEFMST, split => CFG_SPLIT,
+                 rrobin  => CFG_RROBIN, ioaddr => CFG_AHBIO, ioen => IOAEN,
+                 nahbm   => CFG_NCPU + CFG_AHB_UART + CFG_AHB_JTAG + CFG_GRETH,
+                 devid   => ALTERA_DE2, nahbs => 8) 
+    port map (rstn, clkm, ahbmi, ahbmo, ahbsi, ahbso);
+
+----------------------------------------------------------------------
+---                       Leon3 Processor                          ---
+----------------------------------------------------------------------
+
+  cpu : for i in 0 to CFG_NCPU-1 generate
+    u0 : leon3s
+      generic map (hindex     => i, fabtech => fabtech, memtech => memtech, nwindows => CFG_NWIN, dsu => CFG_DSU, fpu => CFG_FPU,
+                   v8         => CFG_V8, cp => 0, mac => CFG_MAC, pclow => CFG_PCLOW, notag => CFG_NOTAG, nwp => CFG_NWP,
+                   icen       => CFG_ICEN, irepl => CFG_IREPL, isets => CFG_ISETS, ilinesize => CFG_ILINE,
+                   isetsize   => CFG_ISETSZ, isetlock => CFG_ILOCK, dcen => CFG_DCEN,
+                   drepl      => CFG_DREPL, dsets => CFG_DSETS, dlinesize => CFG_DLINE, dsetsize => CFG_DSETSZ,
+                   dsetlock   => CFG_DLOCK, dsnoop => CFG_DSNOOP, ilram => CFG_ILRAMEN, ilramsize => CFG_ILRAMSZ,
+                   ilramstart => CFG_ILRAMADDR, dlram => CFG_DLRAMEN, dlramsize => CFG_DLRAMSZ, dlramstart => CFG_DLRAMADDR,
+                   mmuen      => CFG_MMUEN, itlbnum => CFG_ITLBNUM, dtlbnum => CFG_DTLBNUM, tlb_type => CFG_TLB_TYPE,
+                   tlb_rep    => CFG_TLB_REP, lddel => CFG_LDDEL, disas => CFG_DISAS, tbuf => CFG_ITBSZ,
+                   pwd        => CFG_PWD, svt => CFG_SVT, rstaddr => CFG_RSTADDR, smp => CFG_NCPU-1,
+                   cached     => 0, scantest => 0, mmupgsz => CFG_MMU_PAGE, bp => 1)
+      port map (clk  => clkm, rstn => rstn, ahbi => ahbmi, ahbo => ahbmo(i), ahbsi => ahbsi, ahbso => ahbso,
+                irqi => irqi(i), irqo => irqo(i), dbgi => dbgi(i), dbgo => dbgo(i));
+  end generate;
+
+----------------------------------------------------------------------
+---                      Debug Support Unit                        ---
+----------------------------------------------------------------------
+
+  dsugen : if CFG_DSU = 1 generate
+    dsu0 : dsu3                         -- LEON3 Debug Support Unit (slave)
+      generic map (hindex => 2, haddr => 16#900#, hmask => 16#F00#,
+                   ncpu   => CFG_NCPU, tbits => 30, tech => memtech, irq => 0, kbytes => CFG_ATBSZ)
+      port map (rstn, clkm, ahbmi, ahbsi, ahbso(2), dbgo, dbgi, dsui, dsuo);
+    dsui.enable <= '1';
+    dsubre_pad : inpad generic map (tech => padtech) port map (dsubre, dsubren);  --knapp 1
+    dsui.break  <= not dsubren;  --break 0 when button pressed => breaked when released => debug mode.
+  end generate;
+  nodsu : if CFG_DSU = 0 generate
+    ahbso(2) <= ahbs_none; dsuo.tstop <= '0'; dsuo.active <= '0';  --no timer freeze, no light.
+  end generate;
+
+  errorn_pad : odpad generic map (tech => padtech) port map (errorn, dbgo(0).error);
+
+----------------------------------------------------------------------
+---                           AHB UART                             ---
+----------------------------------------------------------------------
+
+  dcomgen : if CFG_AHB_UART /= 0 generate
+    dcom0 : ahbuart                     -- Debug UART
+      generic map (hindex => CFG_NCPU, pindex => 7, paddr => 7)
+      port map (rstn, clkm, dui, duo, apbi, apbo(7), ahbmi, ahbmo(CFG_NCPU));
+    dsurx_pad : inpad generic map (tech  => padtech) port map (dsu_rxd, dui.rxd);
+    dsutx_pad : outpad generic map (tech => padtech) port map (dsu_txd, duo.txd);
+  end generate;
+  nouah : if CFG_AHB_UART = 0 generate apbo(7) <= apb_none; end generate;
+
+----------------------------------------------------------------------
+---                           AHB JTAG                             ---
+----------------------------------------------------------------------
+
+  ahbjtaggen0 : if CFG_AHB_JTAG /= 0 generate
+    ahbjtag0 : ahbjtag generic map(tech => fabtech, hindex => CFG_NCPU+CFG_AHB_UART)
+      port map(rstn, clkm, tck, tms, tdi, tdo, ahbmi, ahbmo(CFG_NCPU+CFG_AHB_UART),
+               open, open, open, open, open, open, open, gnd(0));
+  end generate;
+
+----------------------------------------------------------------------
+---                     Memory Controllers                         ---
+----------------------------------------------------------------------
+
+  -- Initial vaues of Memory signals
+  memi.writen <= '1'; memi.wrn <= "1111"; memi.bwidth <= "01";
+  memi.bexcn  <= '1';
+
+  romsel     <= not memo.romsn(0);
+  rombusy    <= not romready;
+  memi.brdyn <= not romready;
+
+  -- The US write enable is shared for SDRAM and PROM / SRAM 
+  mem_nwe <= sdo.sdwen and memo.writen;
+
+  ethi.rx_clk <= eth_inclk;
+  ethi.tx_clk <= eth_inclk;
+
+  mem0 : if CFG_MCTRL_LEON2 /= 0 generate
+    mctrl0 : mctrl generic map (hindex    => 3, pindex => 0,
+                                paddr     => 0, srbanks => 0, ram8 => CFG_MCTRL_RAM8BIT,
+                                ram16     => CFG_MCTRL_RAM16BIT, sden => CFG_MCTRL_SDEN,
+                                invclk    => CFG_CLK_NOFB, sepbus => CFG_MCTRL_SEPBUS,
+                                pageburst => CFG_MCTRL_PAGE, lowbus => 1)
+      port map (rstn, clkm, memi, memo, ahbsi, ahbso(3), apbi, apbo(0), wpo, sdo);
+    
+    freset_pad : outpad generic map (tech => padtech)
+      port map (bus_flash_nreset, rstn);
+    
+    fbusy_pad : inpad generic map (tech => padtech)
+      port map (bus_flash_nbusy, romready);
+    
+    sdpads : if CFG_MCTRL_SDEN = 1 generate  -- SDRAM controller
+      sdcke_pad : outpad generic map (tech => padtech)
+        port map (bus_sdram_cke, sdo.sdcke(0));
+      sdras_pad : outpad generic map (tech => padtech)
+        port map (bus_sdram_nras, sdo.rasn);
+      sdcas_pad : outpad generic map (tech => padtech)
+        port map (bus_sdram_ncas, sdo.casn);
+      sddqm_pad : outpadv generic map (width => 4, tech => padtech)
+        port map (bus_nbe, sdo.dqm(3 downto 0));
+    end generate;
+
+    sdcsn_pad : outpad generic map (tech => padtech)
+      port map (bus_sdram_ncs, sdo.sdcsn(0));
+
+    addr_pad : outpadv generic map (width => 25, tech => padtech)
+      port map (bus_a, memo.address(24 downto 0));
+
+    roms_pad : outpad generic map (tech => padtech)
+      port map (bus_flash_ncs, memo.romsn(0));
+    
+    ledcs_pad : outpad generic map (tech => padtech)
+      port map (led_romcs, romsel);
+    
+    ledrdy_pad : outpad generic map (tech => padtech)
+      port map (led_rombrdyn, rombusy);
+    
+    oen_pad : outpad generic map (tech => padtech)
+      port map (bus_noe, memo.oen);
+
+    wri_pad : outpad generic map (tech => padtech)
+      port map (bus_nwe, mem_nwe);
+    
+    bdr : for i in 0 to 3 generate
+      data_pad : iopadv generic map (tech => padtech, width => 8)
+        port map (bus_d(31-i*8 downto 24-i*8), memo.data(31-i*8 downto 24-i*8),
+                  memo.bdrive(i), memi.data(31-i*8 downto 24-i*8));
+    end generate;
+    
+  end generate;
+  nomem0 : if CFG_MCTRL_LEON2 = 0 generate ahbso(3) <= ahbs_none; end generate;
+
+----------------------------------------------------------------------
+---                     APB Bridge and Peripherals                 ---
+----------------------------------------------------------------------
+
+  apb0 : apbctrl
+    generic map (hindex => 1, haddr => CFG_APBADDR)
+    port map (rstn, clkm, ahbsi, ahbso(1), apbi, apbo);
+
+----------------------------------------------------------------------
+---                              UART 1                            ---
+----------------------------------------------------------------------
+
+  ua1 : if CFG_UART1_ENABLE /= 0 generate
+    uart1 : apbuart
+      generic map (pindex => 1, paddr => 1, pirq => 2, console => dbguart, fifosize => CFG_UART1_FIFO)
+      port map (rstn, clkm, apbi, apbo(1), u1i, u1o);
+    u1i.rxd    <= rxd1;
+    u1i.ctsn   <= '0';
+    u1i.extclk <= '0';
+    txd1       <= u1o.txd;
+    serrx_pad : inpad generic map (level  => cmos, voltage => x33v, tech => padtech) port map (uart_rxd, rxd1);
+    sertx_pad : outpad generic map (level => cmos, voltage => x33v, tech => padtech) port map (uart_txd, txd1);
+  end generate;
+  noua0 : if CFG_UART1_ENABLE = 0 generate apbo(1) <= apb_none; end generate;
+
+----------------------------------------------------------------------
+---                     Interrupt Controller                       ---
+----------------------------------------------------------------------
+
+  irqctrl : if CFG_IRQ3_ENABLE /= 0 generate
+    irqctrl0 : irqmp
+      generic map (pindex => 2, paddr => 2, ncpu => CFG_NCPU)
+      port map (rstn, clkm, apbi, apbo(2), irqo, irqi);
+  end generate;
+  irq3 : if CFG_IRQ3_ENABLE = 0 generate
+    x : for i in 0 to CFG_NCPU-1 generate
+      irqi(i).irl <= "0000";
+    end generate;
+    apbo(2) <= apb_none;
+  end generate;
+
+----------------------------------------------------------------------
+---                     Timer Unit                                 ---
+----------------------------------------------------------------------
+
+  gpt : if CFG_GPT_ENABLE /= 0 generate
+    timer0 : gptimer                    -- timer unit
+      generic map (pindex => 3, paddr => 3, pirq => CFG_GPT_IRQ,
+                   sepirq => CFG_GPT_SEPIRQ, sbits => CFG_GPT_SW, ntimers => CFG_GPT_NTIM,
+                   nbits  => CFG_GPT_TW)
+      port map (rstn, clkm, apbi, apbo(3), gpti, open);
+    gpti.dhalt <= dsuo.tstop; gpti.extclk <= '0';
+
+  end generate;
+  notim : if CFG_GPT_ENABLE = 0 generate apbo(3) <= apb_none; end generate;
+
+----------------------------------------------------------------------
+---                    Ethernet MAC                                ---
+----------------------------------------------------------------------
+
+  eth0 : if CFG_GRETH = 1 generate
+    e1 : greth
+      generic map(hindex       => CFG_NCPU+CFG_AHB_UART+CFG_AHB_JTAG,
+                  pindex       => 4, paddr => 4, pirq => 4, memtech => memtech,
+                  mdcscaler    => CPU_FREQ/1000, enable_mdio => 1, fifosize => CFG_ETH_FIFO,
+                  nsync        => 2, edcl => 1, edclbufsz => CFG_ETH_BUF,
+                  macaddrh     => CFG_ETH_ENM, macaddrl => CFG_ETH_ENL, phyrstadr => 1,
+                  ipaddrh      => CFG_ETH_IPM, ipaddrl => CFG_ETH_IPL,
+                  enable_mdint => 0)
+      port map(rst   => rstn, clk => clkm, ahbmi => ahbmi,
+               ahbmo => ahbmo(CFG_NCPU+CFG_AHB_UART+CFG_AHB_JTAG),
+               apbi  => apbi, apbo => apbo(4), ethi => ethi, etho => etho);
+  end generate;
+
+  ethpads : if (CFG_GRETH = 1) generate
+    emdio_pad : iopad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (emdio, etho.mdio_o, etho.mdio_oe, ethi.mdio_i);
+    erxc_pad : clkpad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (erx_clk, eth_inclk);
+    erxd_pad : inpadv generic map (level => cmos, voltage => x33v, tech => padtech, width => 4)
+      port map (erxd, ethi.rxd(3 downto 0));
+    erxdv_pad : inpad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (erx_dv, ethi.rx_dv);
+    erxer_pad : inpad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (erx_er, ethi.rx_er);
+    erxco_pad : inpad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (erx_col, ethi.rx_col);
+    erxcr_pad : inpad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (erx_crs, ethi.rx_crs);
+    etxd_pad : outpadv generic map (level => cmos, voltage => x33v, tech => padtech, width => 4)
+      port map (etxd, etho.txd(3 downto 0));
+    etxen_pad : outpad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (etx_en, etho.tx_en);
+    emdc_pad : outpad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (emdc, etho.mdc);
+    emrst_pad : outpad generic map (level => cmos, voltage => x33v, tech => padtech)
+      port map (erstn, etho.reset);
+  end generate;
+  noeth : if CFG_GRETH = 0 generate apbo(4) <= apb_none; end generate;
+
+-----------------------------------------------------------------------
+---  Test report module  ----------------------------------------------
+-----------------------------------------------------------------------
+
+-- pragma translate_off
+
+  test0 : ahbrep generic map (hindex => 7, haddr => 16#A00#)
+    port map (rstn, clkm, ahbsi, ahbso(7));
+
+-- pragma translate_on
+
+-----------------------------------------------------------------------
+---  Boot message  ----------------------------------------------------
+-----------------------------------------------------------------------
+
+-- pragma translate_off
+  x : report_version
+    generic map (
+      msg1 => "LEON3 Altium Nano3000 design",
+      msg2 => "GRLIB Version " & tost(LIBVHDL_VERSION/1000) & "." & tost((LIBVHDL_VERSION mod 1000)/100)
+      & "." & tost(LIBVHDL_VERSION mod 100) & ", build " & tost(LIBVHDL_BUILD),
+      msg3 => "Target technology: " & tech_table(fabtech) & ",  memory library: " & tech_table(memtech),
+      mdel => 1
+      );
+-- pragma translate_on
+end;
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/linkprom b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/linkprom
new file mode 100644
index 0000000..1805994
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/linkprom
@@ -0,0 +1,155 @@
+/*  linkcmds
+ *
+ *  $Id: linkcmds,v 1.8.2.1 2000/05/24 17:06:38 joel Exp $
+ */
+
+OUTPUT_ARCH(sparc)
+__DYNAMIC  =  0;
+
+/*
+ * The memory map looks like this:
+ * +--------------------+ <- low memory
+ * | .text              |
+ * |        etext       |
+ * |        ctor list   | the ctor and dtor lists are for
+ * |        dtor list   | C++ support
+ * |        _endtext    |
+ * +--------------------+
+ * | .data              | initialized data goes here
+ * |        _sdata      |
+ * |        _edata      |
+ * +--------------------+
+ * | .bss               |
+ * |        __bss_start | start of bss, cleared by crt0
+ * |        _end        | start of heap, used by sbrk()
+ * +--------------------+
+ * |    heap space      |
+ * |        _ENDHEAP    |
+ * |    stack space     | 
+ * |        __stack     | top of stack
+ * +--------------------+ <- high memory
+ */
+
+
+/* Default values, can be overridden */
+
+_PROM_SIZE = 2M;
+_RAM_SIZE = 4M;
+
+_RAM_START = 0x02000000;
+_RAM_END = _RAM_START + _RAM_SIZE;
+
+_PROM_START = 0x00000000;
+_PROM_END = _PROM_START + _PROM_SIZE;
+
+/*
+ *  Alternate names without leading _.
+ */
+
+PROM_START = _PROM_START;
+PROM_SIZE = _PROM_SIZE;
+PROM_END = _PROM_END;
+
+RAM_START = _RAM_START;
+RAM_SIZE = _RAM_SIZE;
+RAM_END = _RAM_END;
+
+_LEON_REG = 0x80000000;
+LEON_REG = 0x80000000;
+
+/* these are the maximum values */
+
+MEMORY
+{
+  rom     : ORIGIN = 0x00000000, LENGTH = 16M
+  ram     : ORIGIN = 0x40000000, LENGTH = 1024M
+}
+
+SECTIONS
+{
+  .text :
+  {
+    CREATE_OBJECT_SYMBOLS
+    text_start = .;
+    _text_start = .;
+    *(.text)
+    . = ALIGN (16);
+
+    *(.eh_frame)
+    . = ALIGN (16);
+
+    *(.gnu.linkonce.t*)
+
+    /*
+     * C++ constructors
+     */
+    __CTOR_LIST__ = .;
+    LONG((__CTOR_END__ - __CTOR_LIST__) / 4 - 2)
+    *(.ctors)
+    LONG(0)
+    __CTOR_END__ = .;
+    __DTOR_LIST__ = .;
+    LONG((__DTOR_END__ - __DTOR_LIST__) / 4 - 2)
+    *(.dtors)
+    LONG(0)
+    __DTOR_END__ = .;
+
+    _rodata_start = . ;
+    *(.rodata*)
+    *(.gnu.linkonce.r*)
+    _erodata = ALIGN( 0x10 ) ;
+
+    etext = ALIGN(0x10);
+    _etext = .;
+    *(.init)
+    *(.fini)
+    *(.lit)
+    *(.shdata)
+    . = ALIGN (16);
+    _endtext = .;
+  } > rom
+  .dynamic	  : { *(.dynamic) 	} >ram
+  .got		  : { *(.got) 		} >ram
+  .plt   	  : { *(.plt) 		} >ram
+  .hash		  : { *(.hash)		} >ram
+  .dynrel	  : { *(.dynrel)	} >ram
+  .dynsym	  : { *(.dynsym)	} >ram
+  .dynstr	  : { *(.dynstr)	} >ram
+  .hash		  : { *(.hash)		} >ram
+  .data :
+  {
+    data_start = .;
+    _data_start = .;
+    _sdata = . ;
+    *(.data)
+    *(.gnu.linkonce.d*)
+    *(.gcc_except_table)
+    . = ALIGN(0x10);
+    edata = .;
+    _edata = .;
+  } > ram
+  .shbss :
+  {
+    *(.shbss)
+  } > ram
+  .bss :
+  {
+    __bss_start = ALIGN(0x8);
+    _bss_start = .;
+    bss_start = .;
+    *(.bss)
+    *(COMMON)
+    end = .;
+    _end = ALIGN(0x8);
+    __end = ALIGN(0x8);
+  } > ram
+  .jcr . (NOLOAD)  : { *(.jcr) 		}
+  .stab . (NOLOAD) :
+  {
+    [ .stab ]
+  }
+  .stabstr . (NOLOAD) :
+  {
+    [ .stabstr ]
+  }
+}
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/prom.h b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/prom.h
new file mode 100644
index 0000000..58b7ed5
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/prom.h
@@ -0,0 +1,9 @@
+#define MCFG1 0x000009ff
+#define MCFG2 0x82206c20
+#define MCFG3 0x00136000 
+#define L2MCTRLIO 0x80000000
+#define IRQCTRL   0x80000200
+#define RAMSTART  0x40000000
+#define RAMSIZE   0x03000000
+#define STACKSIZE 0x00080000
+	
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/systest.c b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/systest.c
new file mode 100644
index 0000000..a0da4bd
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/systest.c
@@ -0,0 +1,11 @@
+
+main()
+
+{
+	report_start();
+
+	base_test();
+	can_oc_test(0xfffc0000);
+
+	report_end();
+}
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/testbench.vhd b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/testbench.vhd
new file mode 100644
index 0000000..c84288c
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/testbench.vhd
@@ -0,0 +1,397 @@
+-----------------------------------------------------------------------------
+--  LEON3 Demonstration design test bench
+------------------------------------------------------------------------------
+--  This file is a part of the GRLIB VHDL IP LIBRARY
+--  Copyright (C) 2003 - 2008, Gaisler Research
+--  Copyright (C) 2008 - 2013, Aeroflex Gaisler
+--  Copyright (C) 2014 Martin Wilson <mrw@trimetix.co.uk>
+--
+--  This program is free software; you can redistribute it and/or modify
+--  it under the terms of the GNU General Public License as published by
+--  the Free Software Foundation; either version 2 of the License, or
+--  (at your option) any later version.
+--
+--  This program is distributed in the hope that it will be useful,
+--  but WITHOUT ANY WARRANTY; without even the implied warranty of
+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+--  GNU General Public License for more details.
+--
+--  You should have received a copy of the GNU General Public License
+--  along with this program; if not, write to the Free Software
+--  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 
+------------------------------------------------------------------------------
+
+library IEEE;
+use IEEE.std_logic_1164.all;
+use IEEE.VITAL_Timing.all;
+use IEEE.VITAL_Primitives.all;
+library gaisler;
+use gaisler.libdcom.all;
+use gaisler.sim.all;
+use work.debug.all;
+library techmap;
+use techmap.gencomp.all;
+library micron;
+use micron.components.all;
+library spansion;
+use spansion.components.all;
+
+use work.config.all;                    -- configuration
+
+entity testbench is
+  generic (
+    fabtech   : integer := CFG_FABTECH;
+    memtech   : integer := CFG_MEMTECH;
+    padtech   : integer := CFG_PADTECH;
+    clktech   : integer := CFG_CLKTECH;
+    disas     : integer := CFG_DISAS;   -- Enable disassembly to console
+    dbguart   : integer := CFG_DUART;   -- Print UART on console
+    pclow     : integer := CFG_PCLOW;
+    clkperiod : integer := 50;          -- system clock period
+    comboard  : integer := 0;           -- Comms. adapter board attached
+    romwidth  : integer := 16;
+    romdepth  : integer := 24
+    );
+end;
+
+architecture behav of testbench is
+
+  constant promfile  : string := "prom.srec";   -- rom contents
+  constant sramfile  : string := "sram.srec";   -- sram contents
+  constant sdramfile : string := "sdram.srec";  -- sdram contents
+
+  component leon3mp is
+    generic (
+      fabtech : integer := CFG_FABTECH;  --
+      memtech : integer := CFG_MEMTECH;  --
+      padtech : integer := CFG_PADTECH;  --
+      clktech : integer := CFG_CLKTECH;  --
+      disas   : integer := CFG_DISAS;    -- 
+      dbguart : integer := CFG_DUART;    -- 
+      pclow   : integer := CFG_PCLOW
+      );
+    port (
+      resetn  : in  std_logic;
+      clk_ref : in  std_logic;
+      errorn  : out std_logic;
+
+      -- Ethernet signals
+      erx_clk : in    std_ulogic;
+      erxd    : in    std_logic_vector(3 downto 0);
+      erx_dv  : in    std_ulogic;
+      erx_er  : in    std_ulogic;
+      erx_col : in    std_ulogic;
+      erx_crs : in    std_ulogic;
+      emdint  : in    std_ulogic;
+      etxd    : out   std_logic_vector(3 downto 0);
+      etx_en  : out   std_ulogic;
+      emdc    : out   std_ulogic;
+      emdio   : inout std_logic;
+      erstn   : out   std_ulogic;
+
+      -- Common Bus Memory (Flash, SRAM and SDRAM)
+      bus_a              : out   std_logic_vector(24 downto 0);  --
+      bus_d              : inout std_logic_vector(31 downto 0);  --
+      bus_sdram_clk      : out   std_ulogic;                     --
+      bus_sdram_feedback : in    std_ulogic;                     --
+      bus_sdram_cke      : out   std_logic;                      --
+      bus_sdram_ncs      : out   std_logic;                      --
+      bus_nwe            : out   std_logic;                      -- 
+      bus_sdram_nras     : out   std_logic;                      -- 
+      bus_sdram_ncas     : out   std_logic;                      -- 
+      bus_nbe            : out   std_logic_vector(3 downto 0);   -- 
+      bus_noe            : out   std_logic;
+      bus_flash_nreset   : out   std_logic;                      --
+      bus_flash_ncs      : out   std_logic;
+      bus_flash_nbusy    : in    std_logic;
+
+      uart_txd : out std_logic;         -- 
+      uart_rxd : in  std_logic;         -- 
+
+      dsu_txd : out std_logic;          -- 
+      dsu_rxd : in  std_logic;          -- 
+      dsubre  : in  std_logic;
+
+      plllock : out std_logic;
+
+      ram_ncs : out std_logic;
+      usb_ncs : out std_logic;
+
+      led_romcs    : out std_logic;
+      led_rombrdyn : out std_logic
+
+      );
+
+  end component;
+
+  signal   clk     : std_logic := '0';
+  signal   clk_rst : std_logic := '1';
+  signal   cpurst  : std_logic := '0';
+  constant ct      : integer   := clkperiod/2;
+
+  signal xtal : std_logic := '0';
+
+  signal gnd : std_logic := '0';
+  signal vcc : std_logic := '1';
+
+  signal sdcke        : std_logic;
+  signal sdcsn        : std_logic;
+  signal sdwen        : std_logic;                      -- write en
+  signal sdrasn       : std_logic;                      -- row addr stb
+  signal sdcasn       : std_logic;                      -- col addr stb
+  signal sddqm        : std_logic_vector (3 downto 0);  -- data i/o mask
+  signal sdclk        : std_logic;
+  signal plllock      : std_logic;
+  signal dsutx, dsurx : std_logic;
+  signal dsuact       : std_logic;
+
+  signal leds     : std_logic_vector(7 downto 0);
+  signal switches : std_logic_vector(5 downto 0);
+
+  constant lresp : boolean := false;
+
+  signal sram_oe_l, sram_we_l    : std_logic;
+  signal sram_cs_l               : std_logic_vector(1 downto 0);
+  signal sram_ben_l              : std_logic_vector(0 to 3);
+  signal bus_dq                  : std_logic_vector(31 downto 0) := (others => '0');
+  signal sram_dq                 : std_logic_vector(31 downto 0) := (others => '0');
+  signal flash_dq                : std_logic_vector(31 downto 0) := (others => '0');
+  signal flash_cs_l, flash_rst_l : std_logic;
+  signal iosn, usb_csn           : std_logic;
+
+  signal phy_txck    : std_logic;
+  signal phy_rxck    : std_logic;
+  signal phy_rxd     : std_logic_vector(3 downto 0);
+  signal phy_rxdt    : std_logic_vector(7 downto 0);
+  signal phy_rxdv    : std_logic;
+  signal phy_rxer    : std_logic;
+  signal phy_col     : std_logic;
+  signal phy_crs     : std_logic;
+  signal phy_txd     : std_logic_vector(3 downto 0);
+  signal phy_txdt    : std_logic_vector(7 downto 0);
+  signal phy_txen    : std_logic;
+  signal phy_txer    : std_logic;
+  signal phy_mdc     : std_logic;
+  signal phy_mdio    : std_logic;
+  signal phy_reset_l : std_logic;
+  signal phy_gtx_clk : std_logic := '0';
+
+  signal video_clk : std_logic := '0';
+  signal comp_sync : std_logic;
+  signal blank     : std_logic;
+  signal video_out : std_logic_vector(23 downto 0);
+
+  signal msclk      : std_logic;
+  signal msdata     : std_logic;
+  signal kbclk      : std_logic;
+  signal kbdata     : std_logic;
+  signal dsurst     : std_logic;
+  signal flash_oe_n : std_logic;
+  signal flash_we_n : std_logic;
+
+
+  signal disp_seg1 : std_logic_vector(7 downto 0);
+  signal disp_seg2 : std_logic_vector(7 downto 0);
+
+  signal baddr : std_logic_vector(24 downto 0) := (others => '0');
+
+  signal can_txd : std_logic;
+  signal can_rxd : std_logic;
+
+  signal uart_txd      : std_logic;
+  signal uart_rxd      : std_logic;
+  signal errorn        : std_logic;
+  signal flash_busyn   : std_logic;
+  signal flash_busysig : std_logic;
+  signal debug_sig     : std_logic_vector(7 downto 0);
+  signal ir_datan      : std_logic;
+  signal ir_data       : std_logic;
+
+  type irstate is (idle, waiting, lpb, ls, addr, addrn, cmd, cmdn, eom);
+
+  type ir_reg_type is record
+    data    : std_logic;
+    state   : irstate;
+    timeout : natural range 0 to 4096;
+    index   : natural range 0 to 16;
+    even    : std_logic;
+  end record;
+
+  signal r, rin : ir_reg_type;
+  
+begin
+
+-- clock and reset
+
+  clk    <= not clk after ct * 1 ns;    -- Master clock
+  cpurst <= dsurst;                     -- Reset
+
+  cpu : leon3mp
+    generic map (fabtech, memtech, padtech, clktech,
+                 disas, dbguart, pclow)
+    port map (resetn  => cpurst,
+              clk_ref => clk,
+              errorn  => errorn,
+
+              bus_a              => baddr,
+              bus_d              => sram_dq,
+              bus_sdram_clk      => sdclk,
+              bus_sdram_cke      => sdcke,
+              bus_sdram_ncs      => sdcsn,
+              bus_nwe            => sram_we_l,
+              bus_nbe            => sddqm,
+              bus_sdram_nras     => sdrasn,
+              bus_sdram_ncas     => sdcasn,
+              bus_sdram_feedback => sdclk,
+              bus_noe            => sram_oe_l,
+              bus_flash_nreset   => flash_rst_l,
+              bus_flash_ncs      => flash_cs_l,
+              bus_flash_nbusy    => flash_busysig,
+
+              uart_txd => uart_txd,
+              uart_rxd => uart_rxd,
+
+              dsu_txd => dsutx,
+              dsu_rxd => dsurx,
+              dsubre  => dsurst,
+
+              plllock => plllock,
+
+              erx_clk => '0',
+              erxd    => "0000",
+              erx_dv  => '0',
+              erx_er  => '0',
+              erx_col => '0',
+              erx_crs => '0',
+              emdint  => '0',
+
+              ram_ncs => sram_cs_l(1),
+              usb_ncs => usb_csn
+              );
+
+  phy_mdio <= 'H';
+  phy_rxd  <= phy_rxdt(3 downto 0);
+  phy_txdt <= "0000" & phy_txd;
+
+  flash_oe_n <= (sram_oe_l or flash_cs_l);
+  flash_we_n <= (sram_we_l or flash_cs_l);
+
+  p0 : phy
+    generic map(base1000_t_fd => 0, base1000_t_hd => 0)
+    port map(dsurst, phy_mdio, phy_txck, phy_rxck, phy_rxdt, phy_rxdv,
+             phy_rxer, phy_col, phy_crs, phy_txdt, phy_txen, phy_txer, phy_mdc, phy_gtx_clk);
+
+  -- 16 bit prom - We have to byte-swap the DQ lines
+  prom0 : S29GL128P
+    generic map(UserPreload => true, mem_file_name => promfile)
+    port map(A0    => baddr(1), A1 => baddr(2) , A2 => baddr(3) , A3 => baddr(4) , A4 => baddr(5) , A5 => baddr(6) , A6 => baddr(7) , A7 => baddr(8) ,
+             A8    => baddr(9) , A9 => baddr(10) , A10 => baddr(11), A11 => baddr(12) , A12 => baddr(13) , A13 => baddr(14), A14 => baddr(15), A15 => baddr(16),
+             A16   => baddr(17) , A17 => baddr(18) , A18 => baddr(19), A19 => baddr(20), A20 => baddr(21), A21 => baddr(22), A22 => baddr(23),
+             DQ0   => sram_dq(0) , DQ1 => sram_dq(1), DQ2 => sram_dq(2) , DQ3 => sram_dq(3) , DQ4 => sram_dq(4) , DQ5 => sram_dq(5) , DQ6 => sram_dq(6) , DQ7 => sram_dq(7) ,
+             DQ8   => sram_dq(8) , DQ9 => sram_dq(9) , DQ10 => sram_dq(10) , DQ11 => sram_dq(11), DQ12 => sram_dq(12) , DQ13 => sram_dq(13) , DQ14 => sram_dq(14) , DQ15 => sram_dq(15) ,
+             CENeg => flash_cs_l, OENeg => flash_oe_n, WENeg => flash_we_n, RESETNeg => flash_rst_l , WPNeg => vcc, BYTENeg => vcc, RY => flash_busyn);
+
+  u0 : mt48lc16m16a2 generic map (addr_bits => 13, col_bits => 9, index => 0, fname => sdramfile)
+    port map(
+      Dq   => sram_dq(31 downto 16), Addr => baddr(14 downto 2),
+      Ba   => baddr(16 downto 15), Clk => sdclk, Cke => sdcke,
+      Cs_n => sdcsn, Ras_n => sdrasn, Cas_n => sdcasn, We_n => sram_we_l,
+      Dqm  => sddqm(3 downto 2));
+  u1 : mt48lc16m16a2 generic map (addr_bits => 13, col_bits => 9, index => 16, fname => sdramfile)
+    port map(
+      Dq   => sram_dq(15 downto 0), Addr => baddr(14 downto 2),
+      Ba   => baddr(16 downto 15), Clk => sdclk, Cke => sdcke,
+      Cs_n => sdcsn, Ras_n => sdrasn, Cas_n => sdcasn, We_n => sram_we_l,
+      Dqm  => sddqm(1 downto 0));
+
+  errorn      <= 'H';
+  flash_busyn <= 'H';
+
+  flash_busysig <= to_x01(flash_busyn);
+
+  iuerr : process
+  begin
+    wait for 2500 ns;
+    if to_x01(errorn) = '1' then wait on errorn; end if;
+    assert (to_x01(errorn) = '1')
+      report "*** IU in error mode, simulation halted ***"
+      severity failure;
+  end process;
+
+  dsucom : process
+    procedure dsucfg(signal dsurx : in std_logic; signal dsutx : out std_logic) is
+      variable w32 : std_logic_vector(31 downto 0);
+      variable c8  : std_logic_vector(7 downto 0);
+      constant txp : time := 160 * 1 ns;
+    begin
+      dsutx  <= '1';
+      dsurst <= '0';                    --reset low
+      wait for 500 ns;
+      dsurst <= '1';                    --reset high
+      wait;
+      wait for 5000 ns;
+      txc(dsutx, 16#55#, txp);
+
+
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#90#, 16#00#, 16#00#, 16#00#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#2f#, txp);
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#91#, 16#00#, 16#00#, 16#00#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#6f#, txp);
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#90#, 16#11#, 16#00#, 16#00#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#00#, txp);
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#90#, 16#40#, 16#00#, 16#04#, txp);
+      txa(dsutx, 16#00#, 16#02#, 16#20#, 16#01#, txp);
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#90#, 16#00#, 16#00#, 16#20#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#02#, txp);
+
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#90#, 16#00#, 16#00#, 16#20#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#0f#, txp);
+
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#40#, 16#00#, 16#43#, 16#10#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#0f#, txp);
+
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#91#, 16#40#, 16#00#, 16#24#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#24#, txp);
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#91#, 16#70#, 16#00#, 16#00#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#03#, txp);
+
+
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#90#, 16#00#, 16#00#, 16#20#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#ff#, 16#ff#, txp);
+
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#90#, 16#40#, 16#00#, 16#48#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#00#, 16#12#, txp);
+
+      txc(dsutx, 16#c0#, txp);
+      txa(dsutx, 16#90#, 16#40#, 16#00#, 16#60#, txp);
+      txa(dsutx, 16#00#, 16#00#, 16#12#, 16#10#, txp);
+
+      txc(dsutx, 16#80#, txp);
+      txa(dsutx, 16#90#, 16#00#, 16#00#, 16#00#, txp);
+      rxi(dsurx, w32, txp, lresp);
+
+      txc(dsutx, 16#a0#, txp);
+      txa(dsutx, 16#40#, 16#00#, 16#00#, 16#00#, txp);
+      rxi(dsurx, w32, txp, lresp);
+
+    end;
+
+  begin
+
+    dsucfg(dsutx, dsurx);
+
+    wait;
+  end process;
+end;
+
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/tkconfig.h b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/tkconfig.h
new file mode 100644
index 0000000..754d2d1
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/tkconfig.h
@@ -0,0 +1,996 @@
+#if defined CONFIG_SYN_INFERRED
+#define CONFIG_SYN_TECH inferred
+#elif defined CONFIG_SYN_UMC
+#define CONFIG_SYN_TECH umc
+#elif defined CONFIG_SYN_RHUMC
+#define CONFIG_SYN_TECH rhumc
+#elif defined CONFIG_SYN_DARE
+#define CONFIG_SYN_TECH dare
+#elif defined CONFIG_SYN_SAED32
+#define CONFIG_SYN_TECH saed32
+#elif defined CONFIG_SYN_ATC18
+#define CONFIG_SYN_TECH atc18s
+#elif defined CONFIG_SYN_ATC18RHA
+#define CONFIG_SYN_TECH atc18rha
+#elif defined CONFIG_SYN_AXCEL
+#define CONFIG_SYN_TECH axcel
+#elif defined CONFIG_SYN_AXDSP
+#define CONFIG_SYN_TECH axdsp
+#elif defined CONFIG_SYN_PROASICPLUS
+#define CONFIG_SYN_TECH proasic
+#elif defined CONFIG_SYN_ALTERA
+#define CONFIG_SYN_TECH altera
+#elif defined CONFIG_SYN_STRATIX
+#define CONFIG_SYN_TECH stratix1
+#elif defined CONFIG_SYN_STRATIXII
+#define CONFIG_SYN_TECH stratix2
+#elif defined CONFIG_SYN_STRATIXIII
+#define CONFIG_SYN_TECH stratix3
+#elif defined CONFIG_SYN_STRATIXIV
+#define CONFIG_SYN_TECH stratix4
+#elif defined CONFIG_SYN_CYCLONEII
+#define CONFIG_SYN_TECH stratix2
+#elif defined CONFIG_SYN_CYCLONEIII
+#define CONFIG_SYN_TECH cyclone3
+#elif defined CONFIG_SYN_CYCLONEIV
+#define CONFIG_SYN_TECH cyclone3
+#elif defined CONFIG_SYN_EASIC45
+#define CONFIG_SYN_TECH easic45
+#elif defined CONFIG_SYN_EASIC90
+#define CONFIG_SYN_TECH easic90
+#elif defined CONFIG_SYN_IHP25
+#define CONFIG_SYN_TECH ihp25
+#elif defined CONFIG_SYN_IHP25RH
+#define CONFIG_SYN_TECH ihp25rh
+#elif defined CONFIG_SYN_CMOS9SF
+#define CONFIG_SYN_TECH cmos9sf
+#elif defined CONFIG_SYN_LATTICE
+#define CONFIG_SYN_TECH lattice
+#elif defined CONFIG_SYN_ECLIPSE
+#define CONFIG_SYN_TECH eclipse
+#elif defined CONFIG_SYN_PEREGRINE
+#define CONFIG_SYN_TECH peregrine
+#elif defined CONFIG_SYN_PROASIC
+#define CONFIG_SYN_TECH proasic
+#elif defined CONFIG_SYN_PROASIC3
+#define CONFIG_SYN_TECH apa3
+#elif defined CONFIG_SYN_PROASIC3E
+#define CONFIG_SYN_TECH apa3e
+#elif defined CONFIG_SYN_PROASIC3L
+#define CONFIG_SYN_TECH apa3l
+#elif defined CONFIG_SYN_IGLOO
+#define CONFIG_SYN_TECH apa3
+#elif defined CONFIG_SYN_FUSION
+#define CONFIG_SYN_TECH actfus
+#elif defined CONFIG_SYN_SPARTAN2
+#define CONFIG_SYN_TECH virtex
+#elif defined CONFIG_SYN_VIRTEX
+#define CONFIG_SYN_TECH virtex
+#elif defined CONFIG_SYN_VIRTEXE
+#define CONFIG_SYN_TECH virtex
+#elif defined CONFIG_SYN_SPARTAN3
+#define CONFIG_SYN_TECH spartan3
+#elif defined CONFIG_SYN_SPARTAN3E
+#define CONFIG_SYN_TECH spartan3e
+#elif defined CONFIG_SYN_SPARTAN6
+#define CONFIG_SYN_TECH spartan6
+#elif defined CONFIG_SYN_VIRTEX2
+#define CONFIG_SYN_TECH virtex2
+#elif defined CONFIG_SYN_VIRTEX4
+#define CONFIG_SYN_TECH virtex4
+#elif defined CONFIG_SYN_VIRTEX5
+#define CONFIG_SYN_TECH virtex5
+#elif defined CONFIG_SYN_VIRTEX6
+#define CONFIG_SYN_TECH virtex6
+#elif defined CONFIG_SYN_VIRTEX7
+#define CONFIG_SYN_TECH virtex7
+#elif defined CONFIG_SYN_KINTEX7
+#define CONFIG_SYN_TECH kintex7
+#elif defined CONFIG_SYN_ARTIX7
+#define CONFIG_SYN_TECH artix7
+#elif defined CONFIG_SYN_ZYNQ7000
+#define CONFIG_SYN_TECH zynq7000
+#elif defined CONFIG_SYN_ARTIX77
+#define CONFIG_SYN_TECH artix7
+#elif defined CONFIG_SYN_ZYNQ7000
+#define CONFIG_SYN_TECH zynq7000
+#elif defined CONFIG_SYN_RH_LIB18T
+#define CONFIG_SYN_TECH rhlib18t
+#elif defined CONFIG_SYN_SMIC13
+#define CONFIG_SYN_TECH smic013
+#elif defined CONFIG_SYN_UT025CRH
+#define CONFIG_SYN_TECH ut25
+#elif defined CONFIG_SYN_UT130HBD
+#define CONFIG_SYN_TECH ut130
+#elif defined CONFIG_SYN_UT90NHBD
+#define CONFIG_SYN_TECH ut90
+#elif defined CONFIG_SYN_TSMC90
+#define CONFIG_SYN_TECH tsmc90
+#elif defined CONFIG_SYN_TM65GPLUS
+#define CONFIG_SYN_TECH tm65gplus
+#elif defined CONFIG_SYN_CUSTOM1
+#define CONFIG_SYN_TECH custom1
+#else
+#error "unknown target technology"
+#endif
+
+#if defined CONFIG_SYN_INFER_RAM
+#define CFG_RAM_TECH inferred
+#elif defined CONFIG_MEM_UMC
+#define CFG_RAM_TECH umc
+#elif defined CONFIG_MEM_RHUMC
+#define CFG_RAM_TECH rhumc
+#elif defined CONFIG_MEM_DARE
+#define CFG_RAM_TECH dare
+#elif defined CONFIG_MEM_SAED32
+#define CFG_RAM_TECH saed32
+#elif defined CONFIG_MEM_VIRAGE
+#define CFG_RAM_TECH memvirage
+#elif defined CONFIG_MEM_ARTISAN
+#define CFG_RAM_TECH memartisan
+#elif defined CONFIG_MEM_CUSTOM1
+#define CFG_RAM_TECH custom1
+#elif defined CONFIG_MEM_VIRAGE90
+#define CFG_RAM_TECH memvirage90
+#elif defined CONFIG_MEM_INFERRED
+#define CFG_RAM_TECH inferred
+#else
+#define CFG_RAM_TECH CONFIG_SYN_TECH
+#endif
+
+#if defined CONFIG_SYN_INFER_PADS
+#define CFG_PAD_TECH inferred
+#else
+#define CFG_PAD_TECH CONFIG_SYN_TECH
+#endif
+
+#ifndef CONFIG_SYN_NO_ASYNC
+#define CONFIG_SYN_NO_ASYNC 0
+#endif
+
+#ifndef CONFIG_SYN_SCAN
+#define CONFIG_SYN_SCAN 0
+#endif
+
+
+#if defined CONFIG_CLK_ALTDLL
+#define CFG_CLK_TECH CONFIG_SYN_TECH
+#elif defined CONFIG_CLK_HCLKBUF
+#define CFG_CLK_TECH axcel
+#elif defined CONFIG_CLK_LATDLL
+#define CFG_CLK_TECH lattice
+#elif defined CONFIG_CLK_PRO3PLL
+#define CFG_CLK_TECH apa3
+#elif defined CONFIG_CLK_PRO3EPLL
+#define CFG_CLK_TECH apa3e
+#elif defined CONFIG_CLK_PRO3LPLL
+#define CFG_CLK_TECH apa3l
+#elif defined CONFIG_CLK_FUSPLL
+#define CFG_CLK_TECH actfus
+#elif defined CONFIG_CLK_CLKDLL
+#define CFG_CLK_TECH virtex
+#elif defined CONFIG_CLK_CLKPLLE2
+#define CFG_CLK_TECH CONFIG_SYN_TECH
+#elif defined CONFIG_CLK_DCM
+#define CFG_CLK_TECH CONFIG_SYN_TECH
+#elif defined CONFIG_CLK_LIB18T
+#define CFG_CLK_TECH rhlib18t
+#elif defined CONFIG_CLK_RHUMC
+#define CFG_CLK_TECH rhumc
+#elif defined CONFIG_CLK_SAED32
+#define CFG_CLK_TECH saed32
+#elif defined CONFIG_CLK_DARE
+#define CFG_CLK_TECH dare
+#elif defined CONFIG_CLK_EASIC45
+#define CFG_CLK_TECH easic45
+#elif defined CONFIG_CLK_UT130HBD
+#define CFG_CLK_TECH ut130
+#else
+#define CFG_CLK_TECH inferred
+#endif
+
+#ifndef CONFIG_CLK_MUL
+#define CONFIG_CLK_MUL 2
+#endif
+
+#ifndef CONFIG_CLK_DIV
+#define CONFIG_CLK_DIV 2
+#endif
+
+#ifndef CONFIG_OCLK_DIV
+#define CONFIG_OCLK_DIV 1
+#endif
+
+#ifndef CONFIG_OCLKB_DIV
+#define CONFIG_OCLKB_DIV 0
+#endif
+
+#ifndef CONFIG_OCLKC_DIV
+#define CONFIG_OCLKC_DIV 0
+#endif
+
+#ifndef CONFIG_PCI_CLKDLL
+#define CONFIG_PCI_CLKDLL 0
+#endif
+
+#ifndef CONFIG_PCI_SYSCLK
+#define CONFIG_PCI_SYSCLK 0
+#endif
+
+#ifndef CONFIG_CLK_NOFB
+#define CONFIG_CLK_NOFB 0
+#endif
+#ifndef CONFIG_LEON3
+#define CONFIG_LEON3 0
+#endif
+
+#ifndef CONFIG_PROC_NUM
+#define CONFIG_PROC_NUM 1
+#endif
+
+#ifndef CONFIG_IU_NWINDOWS
+#define CONFIG_IU_NWINDOWS 8
+#endif
+
+#ifndef CONFIG_IU_RSTADDR
+#define CONFIG_IU_RSTADDR 8
+#endif
+
+#ifndef CONFIG_IU_LDELAY
+#define CONFIG_IU_LDELAY 1
+#endif
+
+#ifndef CONFIG_IU_WATCHPOINTS
+#define CONFIG_IU_WATCHPOINTS 0
+#endif
+
+#ifdef CONFIG_IU_V8MULDIV
+#ifdef CONFIG_IU_MUL_LATENCY_4
+#define CFG_IU_V8 1
+#elif defined CONFIG_IU_MUL_LATENCY_5
+#define CFG_IU_V8 2
+#elif defined CONFIG_IU_MUL_LATENCY_2
+#define CFG_IU_V8 16#32#
+#endif
+#else
+#define CFG_IU_V8 0
+#endif
+
+#ifdef CONFIG_IU_MUL_MODGEN
+#define CFG_IU_MUL_STRUCT 1
+#elif defined CONFIG_IU_MUL_TECHSPEC
+#define CFG_IU_MUL_STRUCT 2
+#elif defined CONFIG_IU_MUL_DW
+#define CFG_IU_MUL_STRUCT 3
+#else
+#define CFG_IU_MUL_STRUCT 0
+#endif
+
+#ifndef CONFIG_PWD
+#define CONFIG_PWD 0
+#endif
+
+#ifndef CONFIG_IU_MUL_MAC
+#define CONFIG_IU_MUL_MAC 0
+#endif
+
+#ifndef CONFIG_IU_BP
+#define CONFIG_IU_BP 0
+#endif
+
+#ifndef CONFIG_NOTAG
+#define CONFIG_NOTAG 0
+#endif
+
+#ifndef CONFIG_IU_SVT
+#define CONFIG_IU_SVT 0
+#endif
+
+#if defined CONFIG_FPU_GRFPC1
+#define CONFIG_FPU_GRFPC 1
+#elif defined CONFIG_FPU_GRFPC2
+#define CONFIG_FPU_GRFPC 2
+#else
+#define CONFIG_FPU_GRFPC 0
+#endif
+
+#if defined CONFIG_FPU_GRFPU_INFMUL
+#define CONFIG_FPU_GRFPU_MUL 0
+#elif defined CONFIG_FPU_GRFPU_DWMUL
+#define CONFIG_FPU_GRFPU_MUL 1
+#elif defined CONFIG_FPU_GRFPU_MODGEN
+#define CONFIG_FPU_GRFPU_MUL 2
+#elif defined CONFIG_FPU_GRFPU_TECHSPEC
+#define CONFIG_FPU_GRFPU_MUL 3
+#else
+#define CONFIG_FPU_GRFPU_MUL 0
+#endif
+
+#if defined CONFIG_FPU_GRFPU_SH
+#define CONFIG_FPU_GRFPU_SHARED 1
+#else
+#define CONFIG_FPU_GRFPU_SHARED 0
+#endif
+
+#if defined CONFIG_FPU_GRFPU
+#define CONFIG_FPU (1+CONFIG_FPU_GRFPU_MUL)
+#elif defined CONFIG_FPU_MEIKO
+#define CONFIG_FPU 15
+#elif defined CONFIG_FPU_GRFPULITE
+#define CONFIG_FPU (8+CONFIG_FPU_GRFPC)
+#else
+#define CONFIG_FPU 0
+#endif
+
+#ifndef CONFIG_FPU_NETLIST
+#define CONFIG_FPU_NETLIST 0
+#endif
+
+#ifndef CONFIG_ICACHE_ENABLE
+#define CONFIG_ICACHE_ENABLE 0
+#endif
+
+#if defined CONFIG_ICACHE_ASSO1
+#define CFG_IU_ISETS 1
+#elif defined CONFIG_ICACHE_ASSO2
+#define CFG_IU_ISETS 2
+#elif defined CONFIG_ICACHE_ASSO3
+#define CFG_IU_ISETS 3
+#elif defined CONFIG_ICACHE_ASSO4
+#define CFG_IU_ISETS 4
+#else
+#define CFG_IU_ISETS 1
+#endif
+
+#if defined CONFIG_ICACHE_SZ1
+#define CFG_ICACHE_SZ 1
+#elif defined CONFIG_ICACHE_SZ2
+#define CFG_ICACHE_SZ 2
+#elif defined CONFIG_ICACHE_SZ4
+#define CFG_ICACHE_SZ 4
+#elif defined CONFIG_ICACHE_SZ8
+#define CFG_ICACHE_SZ 8
+#elif defined CONFIG_ICACHE_SZ16
+#define CFG_ICACHE_SZ 16
+#elif defined CONFIG_ICACHE_SZ32
+#define CFG_ICACHE_SZ 32
+#elif defined CONFIG_ICACHE_SZ64
+#define CFG_ICACHE_SZ 64
+#elif defined CONFIG_ICACHE_SZ128
+#define CFG_ICACHE_SZ 128
+#elif defined CONFIG_ICACHE_SZ256
+#define CFG_ICACHE_SZ 256
+#else
+#define CFG_ICACHE_SZ 1
+#endif
+
+#ifdef CONFIG_ICACHE_LZ16
+#define CFG_ILINE_SZ 4
+#else
+#define CFG_ILINE_SZ 8
+#endif
+
+#if defined CONFIG_ICACHE_ALGODIR
+#define CFG_ICACHE_ALGORND 3
+#elif defined CONFIG_ICACHE_ALGORND
+#define CFG_ICACHE_ALGORND 2
+#elif defined CONFIG_ICACHE_ALGOLRR
+#define CFG_ICACHE_ALGORND 1
+#else
+#define CFG_ICACHE_ALGORND 0
+#endif
+
+#ifndef CONFIG_ICACHE_LOCK
+#define CONFIG_ICACHE_LOCK 0
+#endif
+
+#ifndef CONFIG_ICACHE_LRAM
+#define CONFIG_ICACHE_LRAM 0
+#endif
+
+#ifndef CONFIG_ICACHE_LRSTART
+#define CONFIG_ICACHE_LRSTART 8E
+#endif
+
+#if defined CONFIG_ICACHE_LRAM_SZ2
+#define CFG_ILRAM_SIZE 2
+#elif defined CONFIG_ICACHE_LRAM_SZ4
+#define CFG_ILRAM_SIZE 4
+#elif defined CONFIG_ICACHE_LRAM_SZ8
+#define CFG_ILRAM_SIZE 8
+#elif defined CONFIG_ICACHE_LRAM_SZ16
+#define CFG_ILRAM_SIZE 16
+#elif defined CONFIG_ICACHE_LRAM_SZ32
+#define CFG_ILRAM_SIZE 32
+#elif defined CONFIG_ICACHE_LRAM_SZ64
+#define CFG_ILRAM_SIZE 64
+#elif defined CONFIG_ICACHE_LRAM_SZ128
+#define CFG_ILRAM_SIZE 128
+#elif defined CONFIG_ICACHE_LRAM_SZ256
+#define CFG_ILRAM_SIZE 256
+#else
+#define CFG_ILRAM_SIZE 1
+#endif
+
+
+#ifndef CONFIG_DCACHE_ENABLE
+#define CONFIG_DCACHE_ENABLE 0
+#endif
+
+#if defined CONFIG_DCACHE_ASSO1
+#define CFG_IU_DSETS 1
+#elif defined CONFIG_DCACHE_ASSO2
+#define CFG_IU_DSETS 2
+#elif defined CONFIG_DCACHE_ASSO3
+#define CFG_IU_DSETS 3
+#elif defined CONFIG_DCACHE_ASSO4
+#define CFG_IU_DSETS 4
+#else
+#define CFG_IU_DSETS 1
+#endif
+
+#if defined CONFIG_DCACHE_SZ1
+#define CFG_DCACHE_SZ 1
+#elif defined CONFIG_DCACHE_SZ2
+#define CFG_DCACHE_SZ 2
+#elif defined CONFIG_DCACHE_SZ4
+#define CFG_DCACHE_SZ 4
+#elif defined CONFIG_DCACHE_SZ8
+#define CFG_DCACHE_SZ 8
+#elif defined CONFIG_DCACHE_SZ16
+#define CFG_DCACHE_SZ 16
+#elif defined CONFIG_DCACHE_SZ32
+#define CFG_DCACHE_SZ 32
+#elif defined CONFIG_DCACHE_SZ64
+#define CFG_DCACHE_SZ 64
+#elif defined CONFIG_DCACHE_SZ128
+#define CFG_DCACHE_SZ 128
+#elif defined CONFIG_DCACHE_SZ256
+#define CFG_DCACHE_SZ 256
+#else
+#define CFG_DCACHE_SZ 1
+#endif
+
+#ifdef CONFIG_DCACHE_LZ16
+#define CFG_DLINE_SZ 4
+#else
+#define CFG_DLINE_SZ 8
+#endif
+
+#if defined CONFIG_DCACHE_ALGODIR
+#define CFG_DCACHE_ALGORND 3
+#elif defined CONFIG_DCACHE_ALGORND
+#define CFG_DCACHE_ALGORND 2
+#elif defined CONFIG_DCACHE_ALGOLRR
+#define CFG_DCACHE_ALGORND 1
+#else
+#define CFG_DCACHE_ALGORND 0
+#endif
+
+#ifndef CONFIG_DCACHE_LOCK
+#define CONFIG_DCACHE_LOCK 0
+#endif
+
+#ifndef CONFIG_DCACHE_SNOOP
+#define CONFIG_DCACHE_SNOOP 0
+#endif
+
+#ifndef CONFIG_DCACHE_SNOOP_SEPTAG
+#define CONFIG_DCACHE_SNOOP_SEPTAG 0
+#endif
+
+#ifndef CONFIG_CACHE_FIXED
+#define CONFIG_CACHE_FIXED 0
+#endif
+
+#ifndef CONFIG_DCACHE_LRAM
+#define CONFIG_DCACHE_LRAM 0
+#endif
+
+#ifndef CONFIG_DCACHE_LRSTART
+#define CONFIG_DCACHE_LRSTART 8F
+#endif
+
+#if defined CONFIG_DCACHE_LRAM_SZ2
+#define CFG_DLRAM_SIZE 2
+#elif defined CONFIG_DCACHE_LRAM_SZ4
+#define CFG_DLRAM_SIZE 4
+#elif defined CONFIG_DCACHE_LRAM_SZ8
+#define CFG_DLRAM_SIZE 8
+#elif defined CONFIG_DCACHE_LRAM_SZ16
+#define CFG_DLRAM_SIZE 16
+#elif defined CONFIG_DCACHE_LRAM_SZ32
+#define CFG_DLRAM_SIZE 32
+#elif defined CONFIG_DCACHE_LRAM_SZ64
+#define CFG_DLRAM_SIZE 64
+#elif defined CONFIG_DCACHE_LRAM_SZ128
+#define CFG_DLRAM_SIZE 128
+#elif defined CONFIG_DCACHE_LRAM_SZ256
+#define CFG_DLRAM_SIZE 256
+#else
+#define CFG_DLRAM_SIZE 1
+#endif
+
+#if defined CONFIG_MMU_PAGE_4K
+#define CONFIG_MMU_PAGE 0
+#elif defined CONFIG_MMU_PAGE_8K
+#define CONFIG_MMU_PAGE 1
+#elif defined CONFIG_MMU_PAGE_16K
+#define CONFIG_MMU_PAGE 2
+#elif defined CONFIG_MMU_PAGE_32K
+#define CONFIG_MMU_PAGE 3
+#elif defined CONFIG_MMU_PAGE_PROG
+#define CONFIG_MMU_PAGE 4
+#else
+#define CONFIG_MMU_PAGE 0
+#endif
+
+#ifdef CONFIG_MMU_ENABLE
+#define CONFIG_MMUEN 1
+
+#ifdef CONFIG_MMU_SPLIT
+#define CONFIG_TLB_TYPE 0
+#endif
+#ifdef CONFIG_MMU_COMBINED
+#define CONFIG_TLB_TYPE 1
+#endif
+
+#ifdef CONFIG_MMU_REPARRAY
+#define CONFIG_TLB_REP 0
+#endif
+#ifdef CONFIG_MMU_REPINCREMENT
+#define CONFIG_TLB_REP 1
+#endif
+
+#ifdef CONFIG_MMU_I2
+#define CONFIG_ITLBNUM 2
+#endif
+#ifdef CONFIG_MMU_I4
+#define CONFIG_ITLBNUM 4
+#endif
+#ifdef CONFIG_MMU_I8
+#define CONFIG_ITLBNUM 8
+#endif
+#ifdef CONFIG_MMU_I16
+#define CONFIG_ITLBNUM 16
+#endif
+#ifdef CONFIG_MMU_I32
+#define CONFIG_ITLBNUM 32
+#endif
+#ifdef CONFIG_MMU_I64
+#define CONFIG_ITLBNUM 64
+#endif
+
+
+#define CONFIG_DTLBNUM 2
+#ifdef CONFIG_MMU_D2
+#undef CONFIG_DTLBNUM
+#define CONFIG_DTLBNUM 2
+#endif
+#ifdef CONFIG_MMU_D4
+#undef CONFIG_DTLBNUM
+#define CONFIG_DTLBNUM 4
+#endif
+#ifdef CONFIG_MMU_D8
+#undef CONFIG_DTLBNUM
+#define CONFIG_DTLBNUM 8
+#endif
+#ifdef CONFIG_MMU_D16
+#undef CONFIG_DTLBNUM
+#define CONFIG_DTLBNUM 16
+#endif
+#ifdef CONFIG_MMU_D32
+#undef CONFIG_DTLBNUM
+#define CONFIG_DTLBNUM 32
+#endif
+#ifdef CONFIG_MMU_D64
+#undef CONFIG_DTLBNUM
+#define CONFIG_DTLBNUM 64
+#endif
+#ifdef CONFIG_MMU_FASTWB
+#define CFG_MMU_FASTWB 1
+#else
+#define CFG_MMU_FASTWB 0
+#endif
+
+#else
+#define CONFIG_MMUEN 0
+#define CONFIG_ITLBNUM 2
+#define CONFIG_DTLBNUM 2
+#define CONFIG_TLB_TYPE 1
+#define CONFIG_TLB_REP 1
+#define CFG_MMU_FASTWB 0
+#endif
+
+#ifndef CONFIG_DSU_ENABLE
+#define CONFIG_DSU_ENABLE 0
+#endif
+
+#if defined CONFIG_DSU_ITRACESZ1
+#define CFG_DSU_ITB 1
+#elif CONFIG_DSU_ITRACESZ2
+#define CFG_DSU_ITB 2
+#elif CONFIG_DSU_ITRACESZ4
+#define CFG_DSU_ITB 4
+#elif CONFIG_DSU_ITRACESZ8
+#define CFG_DSU_ITB 8
+#elif CONFIG_DSU_ITRACESZ16
+#define CFG_DSU_ITB 16
+#else
+#define CFG_DSU_ITB 0
+#endif
+
+#if defined CONFIG_DSU_ATRACESZ1
+#define CFG_DSU_ATB 1
+#elif CONFIG_DSU_ATRACESZ2
+#define CFG_DSU_ATB 2
+#elif CONFIG_DSU_ATRACESZ4
+#define CFG_DSU_ATB 4
+#elif CONFIG_DSU_ATRACESZ8
+#define CFG_DSU_ATB 8
+#elif CONFIG_DSU_ATRACESZ16
+#define CFG_DSU_ATB 16
+#else
+#define CFG_DSU_ATB 0
+#endif
+
+#ifndef CONFIG_LEON3FT_EN
+#define CONFIG_LEON3FT_EN 0
+#endif
+
+#if defined CONFIG_IUFT_PAR
+#define CONFIG_IUFT_EN 1
+#elif defined CONFIG_IUFT_DMR
+#define CONFIG_IUFT_EN 2
+#elif defined CONFIG_IUFT_BCH
+#define CONFIG_IUFT_EN 3
+#elif defined CONFIG_IUFT_TMR
+#define CONFIG_IUFT_EN 4
+#else
+#define CONFIG_IUFT_EN 0
+#endif
+#ifndef CONFIG_RF_ERRINJ
+#define CONFIG_RF_ERRINJ 0
+#endif
+
+#if defined CONFIG_FPUFT_PAR
+#define CONFIG_FPUFT 1
+#elif defined CONFIG_FPUFT_DMR
+#define CONFIG_FPUFT 2
+#elif defined CONFIG_FPUFT_TMR
+#define CONFIG_FPUFT 4
+#else
+#define CONFIG_FPUFT 0
+#endif
+
+#ifndef CONFIG_CACHE_FT_EN
+#define CONFIG_CACHE_FT_EN 0
+#endif
+#ifndef CONFIG_CACHE_ERRINJ
+#define CONFIG_CACHE_ERRINJ 0
+#endif
+
+#ifndef CONFIG_LEON3_NETLIST
+#define CONFIG_LEON3_NETLIST 0
+#endif
+
+#ifdef CONFIG_DEBUG_PC32
+#define CFG_DEBUG_PC32 0
+#else
+#define CFG_DEBUG_PC32 2
+#endif
+#ifndef CONFIG_IU_DISAS
+#define CONFIG_IU_DISAS 0
+#endif
+#ifndef CONFIG_IU_DISAS_NET
+#define CONFIG_IU_DISAS_NET 0
+#endif
+
+
+#ifndef CONFIG_AHB_SPLIT
+#define CONFIG_AHB_SPLIT 0
+#endif
+
+#ifndef CONFIG_AHB_RROBIN
+#define CONFIG_AHB_RROBIN 0
+#endif
+
+#ifndef CONFIG_AHB_FPNPEN
+#define CONFIG_AHB_FPNPEN 0
+#endif
+
+#ifndef CONFIG_AHB_IOADDR
+#define CONFIG_AHB_IOADDR FFF
+#endif
+
+#ifndef CONFIG_APB_HADDR
+#define CONFIG_APB_HADDR 800
+#endif
+
+#ifndef CONFIG_AHB_MON
+#define CONFIG_AHB_MON 0
+#endif
+
+#ifndef CONFIG_AHB_MONERR
+#define CONFIG_AHB_MONERR 0
+#endif
+
+#ifndef CONFIG_AHB_MONWAR
+#define CONFIG_AHB_MONWAR 0
+#endif
+
+#ifndef CONFIG_AHB_DTRACE
+#define CONFIG_AHB_DTRACE 0
+#endif
+
+#ifndef CONFIG_DSU_UART
+#define CONFIG_DSU_UART 0
+#endif
+
+
+#ifndef CONFIG_DSU_JTAG
+#define CONFIG_DSU_JTAG 0
+#endif
+
+#ifndef CONFIG_DSU_ETH
+#define CONFIG_DSU_ETH 0
+#endif
+
+#ifndef CONFIG_DSU_IPMSB
+#define CONFIG_DSU_IPMSB C0A8
+#endif
+
+#ifndef CONFIG_DSU_IPLSB
+#define CONFIG_DSU_IPLSB 0033
+#endif
+
+#ifndef CONFIG_DSU_ETHMSB
+#define CONFIG_DSU_ETHMSB 020000
+#endif
+
+#ifndef CONFIG_DSU_ETHLSB
+#define CONFIG_DSU_ETHLSB 000009
+#endif
+
+#if defined CONFIG_DSU_ETHSZ1
+#define CFG_DSU_ETHB 1
+#elif CONFIG_DSU_ETHSZ2
+#define CFG_DSU_ETHB 2
+#elif CONFIG_DSU_ETHSZ4
+#define CFG_DSU_ETHB 4
+#elif CONFIG_DSU_ETHSZ8
+#define CFG_DSU_ETHB 8
+#elif CONFIG_DSU_ETHSZ16
+#define CFG_DSU_ETHB 16
+#elif CONFIG_DSU_ETHSZ32
+#define CFG_DSU_ETHB 32
+#else
+#define CFG_DSU_ETHB 1
+#endif
+
+#ifndef CONFIG_DSU_ETH_PROG
+#define CONFIG_DSU_ETH_PROG 0
+#endif
+
+#ifndef CONFIG_DSU_ETH_DIS
+#define CONFIG_DSU_ETH_DIS 0
+#endif
+
+#ifndef CONFIG_MCTRL_LEON2
+#define CONFIG_MCTRL_LEON2 0
+#endif
+
+#ifndef CONFIG_MCTRL_SDRAM
+#define CONFIG_MCTRL_SDRAM 0
+#endif
+
+#ifndef CONFIG_MCTRL_SDRAM_SEPBUS
+#define CONFIG_MCTRL_SDRAM_SEPBUS 0
+#endif
+
+#ifndef CONFIG_MCTRL_SDRAM_INVCLK
+#define CONFIG_MCTRL_SDRAM_INVCLK 0
+#endif
+
+#ifndef CONFIG_MCTRL_SDRAM_BUS64
+#define CONFIG_MCTRL_SDRAM_BUS64 0
+#endif
+
+#ifndef CONFIG_MCTRL_8BIT
+#define CONFIG_MCTRL_8BIT 0
+#endif
+
+#ifndef CONFIG_MCTRL_16BIT
+#define CONFIG_MCTRL_16BIT 0
+#endif
+
+#ifndef CONFIG_MCTRL_5CS
+#define CONFIG_MCTRL_5CS 0
+#endif
+
+#ifndef CONFIG_MCTRL_EDAC
+#define CONFIG_MCTRL_EDAC 0
+#endif
+
+#ifndef CONFIG_MCTRL_PAGE
+#define CONFIG_MCTRL_PAGE 0
+#endif
+
+#ifndef CONFIG_MCTRL_PROGPAGE
+#define CONFIG_MCTRL_PROGPAGE 0
+#endif
+
+#ifndef CONFIG_AHBROM_ENABLE
+#define CONFIG_AHBROM_ENABLE 0
+#endif
+
+#ifndef CONFIG_AHBROM_START
+#define CONFIG_AHBROM_START 000
+#endif
+
+#ifndef CONFIG_AHBROM_PIPE
+#define CONFIG_AHBROM_PIPE 0
+#endif
+
+#if (CONFIG_AHBROM_START == 0) && (CONFIG_AHBROM_ENABLE == 1)
+#define CONFIG_ROM_START 100
+#else
+#define CONFIG_ROM_START 000
+#endif
+
+
+#ifndef CONFIG_AHBRAM_ENABLE
+#define CONFIG_AHBRAM_ENABLE 0
+#endif
+
+#ifndef CONFIG_AHBRAM_START
+#define CONFIG_AHBRAM_START A00
+#endif
+
+#if defined CONFIG_AHBRAM_SZ1
+#define CFG_AHBRAMSZ 1
+#elif CONFIG_AHBRAM_SZ2
+#define CFG_AHBRAMSZ 2
+#elif CONFIG_AHBRAM_SZ4
+#define CFG_AHBRAMSZ 4
+#elif CONFIG_AHBRAM_SZ8
+#define CFG_AHBRAMSZ 8
+#elif CONFIG_AHBRAM_SZ16
+#define CFG_AHBRAMSZ 16
+#elif CONFIG_AHBRAM_SZ32
+#define CFG_AHBRAMSZ 32
+#elif CONFIG_AHBRAM_SZ64
+#define CFG_AHBRAMSZ 64
+#elif CONFIG_AHBRAM_SZ128
+#define CFG_AHBRAMSZ 128
+#elif CONFIG_AHBRAM_SZ256
+#define CFG_AHBRAMSZ 256
+#elif CONFIG_AHBRAM_SZ512
+#define CFG_AHBRAMSZ 512
+#elif CONFIG_AHBRAM_SZ1024
+#define CFG_AHBRAMSZ 1024
+#elif CONFIG_AHBRAM_SZ2048
+#define CFG_AHBRAMSZ 2048
+#elif CONFIG_AHBRAM_SZ4096
+#define CFG_AHBRAMSZ 4096
+#else
+#define CFG_AHBRAMSZ 1
+#endif
+
+#ifndef CONFIG_AHBRAM_PIPE
+#define CONFIG_AHBRAM_PIPE 0
+#endif
+#ifndef CONFIG_GRETH_ENABLE
+#define CONFIG_GRETH_ENABLE 0
+#endif
+
+#ifndef CONFIG_GRETH_GIGA
+#define CONFIG_GRETH_GIGA 0
+#endif
+
+#if defined CONFIG_GRETH_FIFO4
+#define CFG_GRETH_FIFO 4
+#elif defined CONFIG_GRETH_FIFO8
+#define CFG_GRETH_FIFO 8
+#elif defined CONFIG_GRETH_FIFO16
+#define CFG_GRETH_FIFO 16
+#elif defined CONFIG_GRETH_FIFO32
+#define CFG_GRETH_FIFO 32
+#elif defined CONFIG_GRETH_FIFO64
+#define CFG_GRETH_FIFO 64
+#else
+#define CFG_GRETH_FIFO 8
+#endif
+
+#ifndef CONFIG_GRETH_FT
+#define CONFIG_GRETH_FT 0
+#endif
+
+#ifndef CONFIG_GRETH_EDCLFT
+#define CONFIG_GRETH_EDCLFT 0
+#endif
+#ifndef CONFIG_UART1_ENABLE
+#define CONFIG_UART1_ENABLE 0
+#endif
+
+#if defined CONFIG_UA1_FIFO1
+#define CFG_UA1_FIFO 1
+#elif defined CONFIG_UA1_FIFO2
+#define CFG_UA1_FIFO 2
+#elif defined CONFIG_UA1_FIFO4
+#define CFG_UA1_FIFO 4
+#elif defined CONFIG_UA1_FIFO8
+#define CFG_UA1_FIFO 8
+#elif defined CONFIG_UA1_FIFO16
+#define CFG_UA1_FIFO 16
+#elif defined CONFIG_UA1_FIFO32
+#define CFG_UA1_FIFO 32
+#else
+#define CFG_UA1_FIFO 1
+#endif
+
+#ifndef CONFIG_IRQ3_ENABLE
+#define CONFIG_IRQ3_ENABLE 0
+#endif
+#ifndef CONFIG_IRQ3_NSEC
+#define CONFIG_IRQ3_NSEC 0
+#endif
+#ifndef CONFIG_GPT_ENABLE
+#define CONFIG_GPT_ENABLE 0
+#endif
+
+#ifndef CONFIG_GPT_NTIM
+#define CONFIG_GPT_NTIM 1
+#endif
+
+#ifndef CONFIG_GPT_SW
+#define CONFIG_GPT_SW 8
+#endif
+
+#ifndef CONFIG_GPT_TW
+#define CONFIG_GPT_TW 8
+#endif
+
+#ifndef CONFIG_GPT_IRQ
+#define CONFIG_GPT_IRQ 8
+#endif
+
+#ifndef CONFIG_GPT_SEPIRQ
+#define CONFIG_GPT_SEPIRQ 0
+#endif
+#ifndef CONFIG_GPT_ENABLE
+#define CONFIG_GPT_ENABLE 0
+#endif
+
+#ifndef CONFIG_GPT_NTIM
+#define CONFIG_GPT_NTIM 1
+#endif
+
+#ifndef CONFIG_GPT_SW
+#define CONFIG_GPT_SW 8
+#endif
+
+#ifndef CONFIG_GPT_TW
+#define CONFIG_GPT_TW 8
+#endif
+
+#ifndef CONFIG_GPT_IRQ
+#define CONFIG_GPT_IRQ 8
+#endif
+
+#ifndef CONFIG_GPT_SEPIRQ
+#define CONFIG_GPT_SEPIRQ 0
+#endif
+
+#ifndef CONFIG_GPT_WDOGEN
+#define CONFIG_GPT_WDOGEN 0
+#endif
+
+#ifndef CONFIG_GPT_WDOG
+#define CONFIG_GPT_WDOG 0
+#endif
+
+
+#ifndef CONFIG_DEBUG_UART
+#define CONFIG_DEBUG_UART 0
+#endif
diff --git a/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/wave.do b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/wave.do
new file mode 100644
index 0000000..5dc3d32
--- /dev/null
+++ b/grlib-gpl-1.3.7-b4144/designs/leon3-altium-nano3000-xilinx/wave.do
@@ -0,0 +1,35 @@
+onerror {resume}
+quietly WaveActivateNextPane {} 0
+add wave -noupdate /testbench/cpu/clkm
+add wave -noupdate /testbench/cpu/bus_a
+add wave -noupdate /testbench/cpu/bus_d
+add wave -noupdate /testbench/cpu/bus_flash_nbusy
+add wave -noupdate /testbench/cpu/bus_flash_ncs
+add wave -noupdate /testbench/cpu/bus_flash_nreset
+add wave -noupdate /testbench/cpu/bus_nbe
+add wave -noupdate /testbench/cpu/bus_noe
+add wave -noupdate /testbench/cpu/bus_nwe
+add wave -noupdate /testbench/cpu/bus_sdram_cke
+add wave -noupdate /testbench/cpu/bus_sdram_clk
+add wave -noupdate /testbench/cpu/bus_sdram_feedback
+add wave -noupdate /testbench/cpu/bus_sdram_ncas
+add wave -noupdate /testbench/cpu/bus_sdram_ncs
+add wave -noupdate /testbench/cpu/bus_sdram_nras
+TreeUpdate [SetDefaultTree]
+WaveRestoreCursors {{Cursor 1} {177000000 ps} 0}
+quietly wave cursor active 1
+configure wave -namecolwidth 150
+configure wave -valuecolwidth 100
+configure wave -justifyvalue left
+configure wave -signalnamewidth 1
+configure wave -snapdistance 10
+configure wave -datasetprefix 0
+configure wave -rowmargin 4
+configure wave -childrowmargin 2
+configure wave -gridoffset 0
+configure wave -gridperiod 1
+configure wave -griddelta 40
+configure wave -timeline 0
+configure wave -timelineunits ns
+update
+WaveRestoreZoom {135074058 ps} {142075050 ps}
-- 
1.8.5.3

